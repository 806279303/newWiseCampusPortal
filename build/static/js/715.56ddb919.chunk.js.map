{"version":3,"file":"static/js/715.56ddb919.chunk.js","mappings":"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","sources":["components/CodeView/index.tsx","components/demoView/index.tsx","components/breadcrumb/index.tsx","pages/breadcrumb/index.tsx","pages/demoPage/index.tsx","type/BaseComponent.ts","../node_modules/prettier|sync"],"sourcesContent":["import \"code-prettify\";\r\nimport \"code-prettify/src/prettify.css\";\r\n\r\nimport parserTypeScript from 'prettier/parser-typescript';\r\nimport prettier from 'prettier/standalone';\r\nimport parserHtml from \"prettier/parser-html\";\r\nimport {Component, createRef, CSSProperties, RefObject} from \"react\";\r\nimport \"./index.scss\";\r\nimport classNames from \"classnames\";\r\n\r\ninterface CodeViewProps {\r\n  children: string\r\n  className?: string\r\n  style?: CSSProperties\r\n  language?: \"ts\" | \"html\"\r\n  defaultShow?: boolean\r\n  canHidden?: boolean\r\n}\r\n\r\n\r\ninterface CodeViewState {\r\n  isShowCode: boolean\r\n}\r\n\r\nexport class CodeView extends Component<CodeViewProps, CodeViewState> {\r\n\r\n  private readonly codeViewAreaRef: RefObject<HTMLDivElement>\r\n  private areaMaxHeight: string\r\n\r\n  static defaultProps: CodeViewProps = {\r\n    children: \"\",\r\n    language: \"ts\",\r\n    canHidden: false\r\n  }\r\n\r\n  constructor(props: CodeViewProps | Readonly<CodeViewProps>) {\r\n    super(props);\r\n    this.state = {\r\n      isShowCode: true\r\n    }\r\n    this.codeViewAreaRef = createRef<HTMLDivElement>();\r\n    this.areaMaxHeight = \"fit-content\"\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    (window as any).PR.prettyPrint();\r\n  }\r\n\r\n  componentDidMount() {\r\n    (window as any).PR.prettyPrint();\r\n    this.areaMaxHeight = this.codeViewAreaRef.current?.clientHeight + \"px\" || \"fit-content\"\r\n    this.setState({\r\n      isShowCode: !this.props.canHidden || !!this.props.defaultShow\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let result = \"\";\r\n    try {\r\n      result = prettier.format(this.props.children, {\r\n        parser: \"typescript\",\r\n        plugins: [parserTypeScript, parserHtml]\r\n      });\r\n    } catch (e) {\r\n      console.error(\"代码格式有误，无法解析\")\r\n      result = this.props.children\r\n    }\r\n\r\n    let className = classNames(\r\n      \"lg-code-view-root\",\r\n      {\r\n        [`${this.props.className}`]: !!this.props.className,\r\n        \"lg-code-view-can-hidden\": this.props.canHidden\r\n      }\r\n    )\r\n\r\n    return (\r\n      <div className={className} style={this.props.style}>\r\n        <div ref={this.codeViewAreaRef} className=\"lg-code-view-area\"\r\n             style={{height: this.state.isShowCode ? this.areaMaxHeight : \"0\"}}>\r\n          <pre className={`prettyprint lang-js`}>\r\n              <div className=\"code_block\">\r\n                <code className=\"code_text\">{result}</code>\r\n              </div>\r\n          </pre>\r\n        </div>\r\n        {\r\n          !this.props.canHidden ? \"\" :\r\n            <div onClick={() => this.setState({isShowCode: !this.state.isShowCode})}\r\n                 className=\"lg-code-view-show-button\">\r\n              <div className={`lg-code-view-show-text ${this.state.isShowCode ? \"on-show\" : \"\"}`}>\r\n                {!this.state.isShowCode ? \"显示\" : \"隐藏\"}代码\r\n              </div>\r\n            </div>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import \"./index.scss\"\r\nimport {BaseComponent} from \"../../type/BaseComponent\";\r\nimport classNames from \"classnames\";\r\nimport { BaseProps } from \"../../type/BaseProps\";\r\nimport {CodeView} from \"@/components/CodeView\";\r\n\r\n\r\nexport interface DemoViewProps {\r\n  title: string\r\n  subtitle?: string\r\n  code?: string\r\n}\r\n\r\nexport class DemoView extends BaseComponent<DemoViewProps> {\r\n\r\n  private readonly classNamePrefix: string\r\n\r\n  constructor(props: (DemoViewProps & BaseProps) | Readonly<DemoViewProps & BaseProps>) {\r\n    super(props);\r\n    this.classNamePrefix = \"lg-demo-view\"\r\n  }\r\n\r\n  render() {\r\n    let className = classNames(\r\n      `${this.classNamePrefix}-root`,\r\n      {\r\n        [`${this.props.className}`]: !!this.props.className\r\n      }\r\n    )\r\n    return (\r\n      <div className={className} style={this.props.style}>\r\n        <div className={`${this.classNamePrefix}-title`}>{this.props.title}</div>\r\n        {\r\n          !this.props.subtitle ? \"\" :\r\n            <div className={`${this.classNamePrefix}-subtitle`}>{this.props.subtitle}</div>\r\n        }\r\n        <div className={`${this.classNamePrefix}-component-area`}>\r\n          {\r\n            this.props.children\r\n          }\r\n        </div>\r\n        {\r\n          !this.props.code? \"\":\r\n            <CodeView canHidden={true}>{this.props.code}</CodeView>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}","import \"./index.scss\"\r\nimport {BaseComponent} from \"../../type/BaseComponent\";\r\nimport {BaseProps} from \"../../type/BaseProps\";\r\n\r\nexport interface LgBreadcrumbProps extends LgBreadcrumbCommonProps {\r\n  type?: \"A\" | \"B\"\r\n}\r\n\r\nexport interface LgBreadcrumbCommonProps {\r\n  itemList: string[]\r\n  selectedIndex?: number\r\n  onChange?(index: number): void\r\n}\r\n\r\nexport const LgBreadcrumb = (props: LgBreadcrumbProps & BaseProps) => {\r\n  switch (props.type) {\r\n    case \"A\":\r\n      return <LgBreadcrumbA {...props} />\r\n    case \"B\":\r\n      return <LgBreadcrumbB {...props} />\r\n  }\r\n  return <LgBreadcrumbA {...props} />\r\n}\r\n\r\n\r\nclass LgBreadcrumbA extends BaseComponent<LgBreadcrumbCommonProps> {\r\n\r\n  onClick(index: number) {\r\n    const selectedIndex = this.getSelectedIndex()\r\n    index !== selectedIndex && this.props.onChange && this.props.onChange(index)\r\n  }\r\n\r\n  getSelectedIndex() {\r\n    if(!this.props.selectedIndex){\r\n      return 0\r\n    }\r\n    if(this.props.selectedIndex >= this.props.itemList.length){\r\n      return this.props.itemList.length - 1\r\n    }\r\n\r\n    return this.props.selectedIndex\r\n  }\r\n\r\n  render() {\r\n    const selectedIndex = this.getSelectedIndex()\r\n    return (\r\n      <div className={`lg-breadcrumb-a ${this.props.className || \"\"}`} style={this.props.style}>\r\n        <div className={`lg-breadcrumb-container`}>\r\n          {\r\n            this.props.itemList.length ?\r\n              this.props.itemList.map((item, index) =>\r\n                <div key={index} onClick={() => this.onClick(index)}\r\n                     className={`lg-breadcrumb-item ${index === selectedIndex ? \"selected\" : \"\"}`}>\r\n                  <div className=\"text\">{item}</div>\r\n                  {\r\n                    index === selectedIndex ? <div className=\"selected-background\"/> : \"\"\r\n                  }\r\n                </div>\r\n              )\r\n              : ''\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass LgBreadcrumbB extends BaseComponent<LgBreadcrumbCommonProps> {\r\n\r\n  getSelectedIndex() {\r\n    if(!this.props.selectedIndex || this.props.selectedIndex < 0){\r\n      return 0\r\n    }\r\n\r\n    if(this.props.selectedIndex >= this.props.itemList.length){\r\n      return this.props.itemList.length - 1\r\n    }\r\n\r\n    return this.props.selectedIndex\r\n  }\r\n\r\n  onClick(index: number) {\r\n    const selectedIndex = this.getSelectedIndex()\r\n    index !== selectedIndex && this.props.onChange && this.props.onChange(index)\r\n  }\r\n\r\n  render() {\r\n    const selectedIndex = this.getSelectedIndex()\r\n    return (\r\n      <div className={`lg-breadcrumb-b ${this.props.className || \"\"}`} style={this.props.style}>\r\n        <div className={` lg-breadcrumb-container`}>\r\n          {\r\n            this.props.itemList.length ? this.props.itemList.map((item, index) =>\r\n              <div key={index} onClick={() => this.onClick(index)}\r\n                   className={`lg-breadcrumb-item ${selectedIndex === index ? \"selected\" : \"\"}`}><div className=\"text\">{item}</div></div>) : ''\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import \"./index.scss\"\r\nimport {Component} from \"react\";\r\nimport {LgBreadcrumb} from \"@/components/breadcrumb\";\r\nimport {DemoView} from \"@/components/demoView\";\r\nimport {DemoPage} from \"../demoPage\";\r\n\r\nexport default class BreadcrumbPage extends Component<{}, { selectedIndex: number }> {\r\n\r\n  render() {\r\n    return (\r\n      <DemoPage title=\"G008面包屑/锚点链接\" subtitle=\"常用锚点定位\" className=\"lg-breadcrumb-demo-page\"\r\n                importCode={`\r\n                    import {LgBreadcrumb} from \"@/components/breadcrumb\";\r\n                `}\r\n                interfaceCode={`\r\n                  interface LgBreadcrumbProps{\r\n                     type?:\"A\" | \"B\" // 款式选择，\"A\"、\"B\",可空，默认为A\r\n                     itemList:string[] // 要显示的文字\r\n                     selectedIndex?:number //设置当前选中的index,可空，默认为0\r\n                     onChange?:(index: number) => void // 点击是触发，需要通过这个index参数修改selectedIndex，可空sfdsadasdfsfasdf\r\n                   }\r\n                `}>\r\n        <DemoView title=\"A款描点链接\" code={`\r\n            <LgBreadcrumb onChange={index => this.setState({selectedIndex: index})}\r\n                            selectedIndex={this.state.selectedIndex}\r\n                            itemList={[\"最新选项\", \"最新选项\", \"最新选项\", \"最新选项\", \"最新选项\", \"最新选项\"]}/>\r\n        `}>\r\n          <LgBreadcrumb onChange={index => this.setState({selectedIndex: index})}\r\n                        selectedIndex={this.state.selectedIndex}\r\n                        itemList={[\"最新选项\", \"最新选项\", \"最新选项\", \"最新选项\", \"最新选项\", \"最新选项\"]}/>\r\n        </DemoView>\r\n\r\n        <DemoView title=\"B款指定楼层\" code={`\r\n           <LgBreadcrumb type={\"B\"} onChange={index => this.setState({selectedIndex: index})}\r\n                            selectedIndex={this.state.selectedIndex} itemList={[\"F1\", \"F2\", \"F3\", 'F4', 'F5']}/>\r\n        `}>\r\n          <LgBreadcrumb type={\"B\"} onChange={index => this.setState({selectedIndex: index})}\r\n                        selectedIndex={this.state.selectedIndex} itemList={[\"F1\", \"F2\", \"F3\", 'F4', 'F5']}/>\r\n        </DemoView>\r\n      </DemoPage>\r\n    )\r\n  }\r\n\r\n\r\n  constructor(props: {}) {\r\n    super(props);\r\n    this.state = {\r\n      selectedIndex: 0\r\n    }\r\n  }\r\n}","import {BaseComponent} from \"../../type/BaseComponent\";\r\nimport {BaseProps} from \"../../type/BaseProps\";\r\nimport classNames from \"classnames\";\r\nimport \"./index.scss\"\r\nimport {CodeView} from \"@/components/CodeView\";\r\n\r\nexport interface DemoPageProps {\r\n  title: string\r\n  subtitle?: string\r\n  importCode?: string\r\n  interfaceCode?: string\r\n}\r\n\r\n\r\nexport class DemoPage extends BaseComponent<DemoPageProps> {\r\n\r\n  private readonly classNamePrefix: string\r\n\r\n  constructor(props: (DemoPageProps & BaseProps) | Readonly<DemoPageProps & BaseProps>) {\r\n    super(props);\r\n    this.classNamePrefix = \"lg-demo-page\"\r\n  }\r\n\r\n  render() {\r\n\r\n    const className = classNames(\r\n      `${this.classNamePrefix}-root`,\r\n      {\r\n        [`${this.props.className}`]: !!this.props.className\r\n      }\r\n    )\r\n\r\n    return (\r\n      <div className={className}>\r\n        <div className={`${this.classNamePrefix}-header`}>\r\n          <div className={`${this.classNamePrefix}-title`}>{this.props.title}</div>\r\n          {\r\n            !this.props.subtitle ? \"\" :\r\n              < div className={`${this.classNamePrefix}-subtitle`}>{this.props.subtitle}</div>\r\n          }\r\n          {\r\n            !this.props.importCode ? \"\" : (\r\n              <div className={`${this.classNamePrefix}-import`}>\r\n                <div className={`${this.classNamePrefix}-import-title`}>在页面中引入组件</div>\r\n                <CodeView>\r\n                  {this.props.importCode}\r\n                </CodeView>\r\n              </div>\r\n            )\r\n\r\n          }\r\n        </div>\r\n        <div className={`${this.classNamePrefix}-body`}>\r\n          {\r\n            this.props.children\r\n          }\r\n        </div>\r\n        <div className={`${this.classNamePrefix}-footer`}>\r\n          {\r\n            !this.props.interfaceCode ? \"\" : (\r\n              <div className={`${this.classNamePrefix}-interface`}>\r\n                <div className={`${this.classNamePrefix}-interface-title`}>标签属性解析</div>\r\n                <CodeView>\r\n                  {this.props.interfaceCode}\r\n                </CodeView>\r\n              </div>\r\n            )\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import {Component} from \"react\";\r\nimport {BaseProps} from \"./BaseProps\";\r\n\r\nexport class BaseComponent<T = {}, S = {}, SS = any> extends Component<T & BaseProps, S, SS>{\r\n  constructor(props: (T & BaseProps) | Readonly<T & BaseProps>) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.onRef && this.props.onRef(this)\r\n  }\r\n}","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 26291;\nmodule.exports = webpackEmptyContext;"],"names":["CodeView","props","codeViewAreaRef","areaMaxHeight","state","isShowCode","createRef","window","PR","prettyPrint","this","current","clientHeight","setState","canHidden","defaultShow","result","prettier","children","parser","plugins","parserTypeScript","parserHtml","e","console","error","className","classNames","style","ref","height","onClick","Component","defaultProps","language","DemoView","classNamePrefix","title","subtitle","code","BaseComponent","LgBreadcrumb","type","LgBreadcrumbA","LgBreadcrumbB","index","getSelectedIndex","onChange","selectedIndex","itemList","length","map","item","BreadcrumbPage","importCode","interfaceCode","DemoPage","onRef","webpackEmptyContext","req","Error","keys","resolve","id","module","exports"],"sourceRoot":""}