{"version":3,"file":"static/js/759.f97a042e.chunk.js","mappings":"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","sources":["components/CodeView/index.tsx","webpack://web-public/./src/components/index.scss?fe14","components/index.ts","components/datePicker/index.tsx","pages/datePicker/index.tsx","type/BaseComponent.ts","../node_modules/prettier|sync"],"sourcesContent":["import \"code-prettify\";\r\nimport \"code-prettify/src/prettify.css\";\r\n\r\nimport parserTypeScript from 'prettier/parser-typescript';\r\nimport prettier from 'prettier/standalone';\r\nimport parserHtml from \"prettier/parser-html\";\r\nimport {Component, CSSProperties} from \"react\";\r\nimport \"./index.scss\";\r\n\r\ninterface CodeViewProps {\r\n  children: string\r\n  className?: string\r\n  style?: CSSProperties\r\n  language?: \"ts\" | \"html\"\r\n}\r\n\r\nexport class CodeView extends Component<CodeViewProps, {}> {\r\n\r\n  static defaultProps: CodeViewProps = {\r\n    children: \"\",\r\n    language: \"ts\"\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Readonly<{}>, prevState: Readonly<{ selectedIndex: number }>, snapshot?: any) {\r\n    (window as any).PR.prettyPrint();\r\n  }\r\n\r\n  componentDidMount() {\r\n    (window as any).PR.prettyPrint();\r\n  }\r\n\r\n  render() {\r\n    let result = \"\";\r\n    try {\r\n      result = prettier.format(this.props.children, {\r\n        parser: \"typescript\",\r\n        plugins: [parserTypeScript, parserHtml]\r\n      });\r\n    } catch (e) {\r\n      console.error(\"代码格式有误，无法解析\")\r\n      result = this.props.children\r\n    }\r\n    return (\r\n      <pre className={`lg-code-view prettyprint lang-js ${this.props.className || \"\"}`} style={this.props.style}>\r\n          <div className=\"code_block\">\r\n            <code className=\"code_text\">{result}</code>\r\n          </div>\r\n      </pre>\r\n    )\r\n  }\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"allSkin\":\"\\\"lg-skin-s1\\\", \\\"lg-skin-s2\\\", \\\"lg-skin-s3\\\", \\\"lg-skin-s4\\\",\\\"lg-skin-s5\\\",\\\"lg-skin-k1\\\", \\\"lg-skin-k2\\\"\"};","import styles from \"./index.scss\";\r\n\r\nexport const allSkinClassName: string[] = JSON.parse(`[${styles.allSkin}]`);","import \"./index.scss\"\r\nimport {BaseComponent} from \"../../type/BaseComponent\";\r\nimport {BaseProps} from \"../../type/BaseProps\";\r\nimport {DatePicker, DateRangePicker, TimeSelect} from \"element-react\"\r\n\r\nexport interface LgDatePickerProps extends DatePickerProps, TimeSelectProps{\r\n  type?: \"A\" | \"B\" | \"C\" | \"D\"\r\n}\r\n\r\nexport class LgDatePicker extends BaseComponent<LgDatePickerProps> {\r\n\r\n  constructor(props: LgDatePickerProps & BaseProps) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    //避免默认行为\r\n  }\r\n\r\n  render() {\r\n\r\n    switch (this.props.type){\r\n      case \"A\":\r\n        return <DatePicker ref={e => this.props.onRef && this.props.onRef(e)} {...(this.props as any)}/>\r\n      case \"B\":\r\n        return <DateRangePicker ref={e => this.props.onRef && this.props.onRef(e)} {...(this.props as any)}/>\r\n      case \"C\":\r\n        return <TimeSelect {...(this.props as any)} />\r\n    }\r\n\r\n    return <DatePicker ref={e => this.props.onRef && this.props.onRef(e)} {...(this.props as any)}/>\r\n  }\r\n}\r\n\r\ntype dateType = Date | string | null\r\n\r\ninterface DatePickerBaseProps {\r\n  align?: 'left' | 'center' | 'right'\r\n  format?: string\r\n  isShowTrigger?: boolean\r\n  isReadOnly?: boolean\r\n  isDisabled?: boolean\r\n  placeholder?: string\r\n  onFocus?(self?: any): void\r\n  onBlur?(self?: any): void\r\n  onChange?(value?: Date): void\r\n  value?: dateType | dateType[]\r\n}\r\n\r\ninterface DatePanelProps extends DatePickerBaseProps {\r\n  value?: dateType | dateType[]\r\n  onPick?: (date: any) => void\r\n  isShowTime?: boolean\r\n  showWeekNumber?: boolean\r\n  format?: string\r\n  shortcuts?: any[]\r\n  selectionMode?: SelectionMode\r\n  disabledDate?(date?: Date, type?: SelectionMode): boolean\r\n  firstDayOfWeek?: number\r\n  getPopperRefElement?: any\r\n  popperMixinOption?: any\r\n}\r\n\r\ninterface DatePickerProps extends DatePanelProps {\r\n  value?: dateType | dateType[]\r\n}\r\n\r\ninterface TimeSelectProps extends DatePickerBaseProps {\r\n  start?: string\r\n  end?: string\r\n  step?: string\r\n  minTime?: dateType\r\n  maxTime?: dateType\r\n  // value?: dateType\r\n}","import {Component} from \"react\";\r\nimport {LgDatePicker} from \"@/components/datePicker\";\r\nimport \"./index.scss\"\r\nimport {allSkinClassName} from \"@/components/index\";\r\nimport {BaseComponent} from \"../../type/BaseComponent\";\r\nimport {CodeView} from \"@/components/CodeView\";\r\n\r\n\r\ntype DateType = Date | string | null\r\n\r\nexport interface DatePickerState {\r\n  demonstrationValue: DateType\r\n  demonstrationValue2: DateType[]\r\n  startTime: DateType\r\n  endTime: DateType\r\n}\r\n\r\nexport default class DatePicker extends Component<{}, DatePickerState> {\r\n\r\n  private currentSkinIndex: number;\r\n  private demonstrationPicker: any;\r\n  private demonstrationPicker2: any;\r\n\r\n  constructor(props: {}) {\r\n    super(props);\r\n    const end = new Date();\r\n    const start = new Date();\r\n    start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\r\n    this.state = {\r\n      demonstrationValue: new Date(),\r\n      demonstrationValue2: [start, end],\r\n      startTime: new Date(2016, 9, 10, 8, 30),\r\n      endTime: new Date(2016, 9, 10, 9, 30)\r\n    }\r\n    this.changeSkin = this.changeSkin.bind(this)\r\n    this.currentSkinIndex = 0\r\n    document.body.className = allSkinClassName[this.currentSkinIndex]\r\n  }\r\n\r\n  changeSkin() {\r\n    this.currentSkinIndex = (this.currentSkinIndex + 1) % allSkinClassName.length\r\n    document.body.className = allSkinClassName[this.currentSkinIndex]\r\n  }\r\n\r\n  handleStartUpdate(startTime: any) {\r\n    console.debug('time-select startDate update: ', startTime)\r\n    this.setState({startTime})\r\n  }\r\n\r\n  handleEndUpdate(endTime: any){\r\n    console.debug('time-select endDate update: ', endTime)\r\n    this.setState({endTime})\r\n  }\r\n\r\n\r\n  render() {\r\n    const end = new Date();\r\n    const start = new Date();\r\n    start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\r\n    return (\r\n      <div className=\"lg-date-picker-demo\">\r\n        <div>在页面文件中引入组件</div>\r\n        <CodeView className=\"code-size\">\r\n          {`\r\n              import {LgDatePicker} from \"@/components/datePicker\";\r\n          `}\r\n        </CodeView>\r\n\r\n\r\n        <div>标签属性详解</div>\r\n        <CodeView className=\"code-size\">\r\n          {`\r\n            /* dateType可以是Date或者字符串 */\r\n            type dateType = Date | string | null;\r\n            interface LgDatePickerProps{\r\n               type?: \"A\" | \"B\" | \"C\" | \"D\" // 款式选择，\"A\"、\"B\"、 \"C\"、\"D\",可空，默认为A\r\n               value?: dateType | dateType[] //当前值， dateType[]仅限B款时，开始日期是第一个，结束是第二个\r\n               align?: 'left' | 'center' | 'right', //对齐方式， 可空，默认left\r\n               format?: string //时间格式化，年 yyyy，月 MM，日 dd，小时 HH，分 mm，秒 ss，默认值yyyy-MM-dd\r\n               isShowTrigger?: boolean // 是否显示图标，可空，默认true\r\n               isReadOnly?: boolean // 是否是只读，可空，默认false\r\n               isDisabled?: boolean // 是否是禁用，可空，默认false\r\n               placeholder?: string // 占位内容，可空\r\n               onFocus?(self?: any): void // focus 事件触发\r\n               onBlur?(self?: any): void // blur 时间触发\r\n               onChange?(value?: Date): void // 值改变时触发\r\n               \r\n               /*A、B款专用*/\r\n               showWeekNumber?: boolean //是否展示周数 ，可空，默认false\r\n               shortcuts?: Shortcut[] // 快捷选项\r\n               selectionMode?: 'year' | 'month' | 'week' | 'day' // 日期类型， 可空，默认\"day\" \r\n               disabledDate?(date?: Date, type?: SelectionMode): boolean //是否进入日期可空\r\n               firstDayOfWeek?: number // 周起始日 0到6 可空，默认0\r\n               \r\n               /* C款专用 */\r\n               start?: string //开始时间，默认值09:00\r\n               end?: string //结束时间，默认18:00\r\n               step?: string //间隔时间\r\n               minTime?: dateType //最小时间\r\n               maxTime?: dateType // 最大时间\r\n            }\r\n            \r\n            interface Shortcut{\r\n              text: string\r\n              onClick(): void\r\n            }\r\n          `}\r\n        </CodeView>\r\n\r\n        <div>A款选择日样例</div>\r\n        <CodeView className=\"code-size\">\r\n          {`\r\n            <>\r\n              <LgDatePicker onChange={e => console.log(e?.getTime())}/>\r\n              <LgDatePicker onChange={e => console.log(e)} onRef={e => this.demonstrationPicker = e} align={\"right\"}\r\n                            value={this.state.demonstrationValue}\r\n                            shortcuts={[\r\n                              {\r\n                                text: '今天',\r\n                                onClick: () => {\r\n                                  this.demonstrationPicker.togglePickerVisible()\r\n                                  this.setState({demonstrationValue: new Date()})\r\n                                }\r\n                              }, {\r\n                                text: '昨天',\r\n                                onClick: () => {\r\n                                  const date = new Date();\r\n                                  date.setTime(date.getTime() - 3600 * 1000 * 24);\r\n                                  this.demonstrationPicker.togglePickerVisible()\r\n                                  this.setState({demonstrationValue: date})\r\n                                }\r\n                              }, {\r\n                                text: '一周前',\r\n                                onClick: () => {\r\n                                  const date = new Date();\r\n                                  date.setTime(date.getTime() - 3600 * 1000 * 24 * 7);\r\n                                  this.demonstrationPicker.togglePickerVisible()\r\n                                  this.setState({demonstrationValue: date})\r\n                                }\r\n                              }\r\n                            ]}/>\r\n            </>\r\n          `}\r\n        </CodeView>\r\n        <DatePickerDemoFrame className=\"selected-day\" title=\"选择日\" subtitle=\"以「日」为基本单位，基础的日期选择控件\">\r\n          <div className=\"left\">\r\n            <div className=\"component-title\">默认</div>\r\n            <LgDatePicker onChange={e => console.log(e?.getTime())}/>\r\n          </div>\r\n          <div className=\"right\">\r\n            <div className=\"component-title\">带快捷选项</div>\r\n            <LgDatePicker onChange={e => console.log(e)} onRef={e => this.demonstrationPicker = e} align={\"right\"}\r\n                          value={this.state.demonstrationValue}\r\n                          shortcuts={[\r\n                            {\r\n                              text: '今天',\r\n                              onClick: () => {\r\n                                this.demonstrationPicker.togglePickerVisible()\r\n                                this.setState({demonstrationValue: new Date()})\r\n                              }\r\n                            }, {\r\n                              text: '昨天',\r\n                              onClick: () => {\r\n                                const date = new Date();\r\n                                date.setTime(date.getTime() - 3600 * 1000 * 24);\r\n                                this.demonstrationPicker.togglePickerVisible()\r\n                                this.setState({demonstrationValue: date})\r\n                              }\r\n                            }, {\r\n                              text: '一周前',\r\n                              onClick: () => {\r\n                                const date = new Date();\r\n                                date.setTime(date.getTime() - 3600 * 1000 * 24 * 7);\r\n                                this.demonstrationPicker.togglePickerVisible()\r\n                                this.setState({demonstrationValue: date})\r\n                              }\r\n                            }\r\n                          ]}/>\r\n          </div>\r\n        </DatePickerDemoFrame>\r\n\r\n\r\n        <div style={{paddingTop: \"10px\"}}>B款选择日期范围样例</div>\r\n        <CodeView className=\"code-size\">\r\n          {`\r\n            <>\r\n              <LgDatePicker type=\"B\" value={[start, end]} onChange={e => console.log(e)}/>\r\n              <LgDatePicker type=\"B\" onChange={e => console.log(e)} onRef={e => this.demonstrationPicker2 = e}\r\n                          align={\"right\"} value={this.state.demonstrationValue2}\r\n                          shortcuts={[{\r\n                            text: '最近一周',\r\n                            onClick: () => {\r\n                              const end = new Date();\r\n                              const start = new Date();\r\n                              start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\r\n\r\n                              this.setState({demonstrationValue2: [start, end]})\r\n                              this.demonstrationPicker2.togglePickerVisible()\r\n                            }\r\n                          }, {\r\n                            text: '最近一个月',\r\n                            onClick: () => {\r\n                              const end = new Date();\r\n                              const start = new Date();\r\n                              start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\r\n\r\n                              this.setState({demonstrationValue2: [start, end]})\r\n                              this.demonstrationPicker2.togglePickerVisible()\r\n                            }\r\n                          }, {\r\n                            text: '最近三个月',\r\n                            onClick: () => {\r\n                              const end = new Date();\r\n                              const start = new Date();\r\n                              start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\r\n                              this.setState({demonstrationValue2: [start, end]})\r\n                              this.demonstrationPicker2.togglePickerVisible()\r\n                            }\r\n                          }]}\r\n            />\r\n            </>\r\n          `}\r\n        </CodeView>\r\n\r\n        <DatePickerDemoFrame className=\"selected-day\" title=\"选择日期范围\" subtitle=\"可在一个选择器中便捷地选择一个时间范围\">\r\n          <div className=\"left\">\r\n            <div className=\"component-title\">默认</div>\r\n            <LgDatePicker type=\"B\" value={[start, end]} onChange={e => console.log(e)}/>\r\n          </div>\r\n          <div className=\"right\">\r\n            <div className=\"component-title\">带快捷选项</div>\r\n            <LgDatePicker type=\"B\" onChange={e => console.log(e)} onRef={e => this.demonstrationPicker2 = e}\r\n                          align={\"right\"} value={this.state.demonstrationValue2}\r\n                          shortcuts={[{\r\n                            text: '最近一周',\r\n                            onClick: () => {\r\n                              const end = new Date();\r\n                              const start = new Date();\r\n                              start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\r\n\r\n                              this.setState({demonstrationValue2: [start, end]})\r\n                              this.demonstrationPicker2.togglePickerVisible()\r\n                            }\r\n                          }, {\r\n                            text: '最近一个月',\r\n                            onClick: () => {\r\n                              const end = new Date();\r\n                              const start = new Date();\r\n                              start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\r\n\r\n                              this.setState({demonstrationValue2: [start, end]})\r\n                              this.demonstrationPicker2.togglePickerVisible()\r\n                            }\r\n                          }, {\r\n                            text: '最近三个月',\r\n                            onClick: () => {\r\n                              const end = new Date();\r\n                              const start = new Date();\r\n                              start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\r\n                              this.setState({demonstrationValue2: [start, end]})\r\n                              this.demonstrationPicker2.togglePickerVisible()\r\n                            }\r\n                          }]}\r\n            />\r\n          </div>\r\n        </DatePickerDemoFrame>\r\n\r\n        <div style={{paddingTop: \"10px\"}}>C款固定时间点样例</div>\r\n        <CodeView className=\"code-size\">\r\n          {`\r\n            <LgDatePicker type=\"C\" start=\"08:30\" step=\"00:15\" end=\"18:30\" maxTime=\"12:30\"\r\n                          value={new Date(2016, 9, 10, 8, 30)} onChange={e => console.log(e)}/>\r\n          `}\r\n        </CodeView>\r\n\r\n        <DatePickerDemoFrame className=\"selected-time\" title=\"固定时间点\" subtitle=\"提供几个固定的时间点供用户选择\">\r\n          <div className=\"left\">\r\n            <LgDatePicker type=\"C\" start=\"08:30\" step=\"00:15\" end=\"18:30\" maxTime=\"12:30\"\r\n                          value={new Date(2016, 9, 10, 8, 30)} onChange={e => console.log(e)}/>\r\n          </div>\r\n        </DatePickerDemoFrame>\r\n\r\n        <div style={{paddingTop: \"10px\"}}>D款固定时间范围样例</div>\r\n        <CodeView className=\"code-size\">\r\n          {`\r\n              function handleStartUpdate(startTime: any) {\r\n              console.debug('time-select startDate update: ', startTime)\r\n              this.setState({startTime})\r\n            }\r\n          \r\n            function handleEndUpdate(endTime: any){\r\n              console.debug('time-select endDate update: ', endTime)\r\n              this.setState({endTime})\r\n            }\r\n            <>\r\n            <LgDatePicker type=\"C\" start=\"08:30\" step=\"00:15\" end=\"18:30\" maxTime=\"12:30\"\r\n                          value={this.state.startTime} onChange={this.handleStartUpdate.bind(this)}/>\r\n            <LgDatePicker type=\"C\" start=\"08:30\" step=\"00:15\" end=\"18:30\" maxTime=\"12:30\"\r\n                          value={this.state.endTime} onChange={this.handleEndUpdate.bind(this)} minTime={this.state.startTime}/>\r\n            </>\r\n          `}\r\n        </CodeView>\r\n\r\n        <DatePickerDemoFrame className=\"selected-range-time\" title=\"固定时间范围\" subtitle=\"若先选择开始时间，则结束时间内备选项的状态会随之改变\">\r\n          <div className=\"left\">\r\n            <LgDatePicker type=\"C\" start=\"08:30\" step=\"00:15\" end=\"18:30\" maxTime=\"12:30\"\r\n                          value={this.state.startTime} onChange={this.handleStartUpdate.bind(this)}/>\r\n            <LgDatePicker type=\"C\" start=\"08:30\" step=\"00:15\" end=\"18:30\" maxTime=\"12:30\"\r\n                          value={this.state.endTime} onChange={this.handleEndUpdate.bind(this)} minTime={this.state.startTime}/>\r\n          </div>\r\n        </DatePickerDemoFrame>\r\n\r\n        <div style={{height: \"20px\"}} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\ninterface DatePickerDemoFrameProps {\r\n  title: string\r\n  subtitle: string\r\n}\r\n\r\nclass DatePickerDemoFrame extends BaseComponent<DatePickerDemoFrameProps> {\r\n  render() {\r\n    return (\r\n      <div className={`lg-date-picker-demo-frame ${this.props.className || \"\"}`}>\r\n        <div className=\"title\">{this.props.title}</div>\r\n        <div className=\"subtitle\">{this.props.subtitle}</div>\r\n        <div className=\"component-container\">\r\n          {\r\n            this.props.children\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import {Component} from \"react\";\r\nimport {BaseProps} from \"./BaseProps\";\r\n\r\nexport class BaseComponent<T = {}, S = {}, SS = any> extends Component<T & BaseProps, S, SS>{\r\n  constructor(props: (T & BaseProps) | Readonly<T & BaseProps>) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.onRef && this.props.onRef(this)\r\n  }\r\n}","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 26291;\nmodule.exports = webpackEmptyContext;"],"names":["CodeView","prevProps","prevState","snapshot","window","PR","prettyPrint","result","prettier","this","props","children","parser","plugins","parserTypeScript","parserHtml","e","console","error","className","style","Component","defaultProps","language","allSkinClassName","JSON","parse","LgDatePicker","type","DatePicker","ref","onRef","DateRangePicker","TimeSelect","BaseComponent","currentSkinIndex","demonstrationPicker","demonstrationPicker2","end","Date","start","setTime","getTime","state","demonstrationValue","demonstrationValue2","startTime","endTime","changeSkin","bind","document","body","debug","setState","DatePickerDemoFrame","title","subtitle","onChange","log","align","value","shortcuts","text","onClick","togglePickerVisible","date","paddingTop","step","maxTime","handleStartUpdate","handleEndUpdate","minTime","height","webpackEmptyContext","req","Error","code","keys","resolve","id","module","exports"],"sourceRoot":""}