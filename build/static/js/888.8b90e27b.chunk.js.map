{"version":3,"file":"static/js/888.8b90e27b.chunk.js","mappings":"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","sources":["components/CodeView/index.tsx","components/demoView/index.tsx","pages/demoPage/index.tsx","components/inputNumber/index.tsx","pages/inputNumber/index.tsx","type/BaseComponent.ts","../node_modules/prettier|sync"],"sourcesContent":["import \"code-prettify\";\r\nimport \"code-prettify/src/prettify.css\";\r\n\r\nimport parserTypeScript from 'prettier/parser-typescript';\r\nimport prettier from 'prettier/standalone';\r\nimport parserHtml from \"prettier/parser-html\";\r\nimport {Component, createRef, CSSProperties, RefObject} from \"react\";\r\nimport \"./index.scss\";\r\nimport classNames from \"classnames\";\r\n\r\ninterface CodeViewProps {\r\n  children: string\r\n  className?: string\r\n  style?: CSSProperties\r\n  language?: \"ts\" | \"html\"\r\n  defaultShow?: boolean\r\n  canHidden?: boolean\r\n}\r\n\r\n\r\ninterface CodeViewState {\r\n  isShowCode: boolean\r\n}\r\n\r\nexport class CodeView extends Component<CodeViewProps, CodeViewState> {\r\n\r\n  private readonly codeViewAreaRef: RefObject<HTMLDivElement>\r\n  private areaMaxHeight: string\r\n\r\n  static defaultProps: CodeViewProps = {\r\n    children: \"\",\r\n    language: \"ts\",\r\n    canHidden: false\r\n  }\r\n\r\n  constructor(props: CodeViewProps | Readonly<CodeViewProps>) {\r\n    super(props);\r\n    this.state = {\r\n      isShowCode: true\r\n    }\r\n    this.codeViewAreaRef = createRef<HTMLDivElement>();\r\n    this.areaMaxHeight = \"fit-content\"\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    (window as any).PR.prettyPrint();\r\n  }\r\n\r\n  componentDidMount() {\r\n    (window as any).PR.prettyPrint();\r\n    this.areaMaxHeight = this.codeViewAreaRef.current?.clientHeight + \"px\" || \"fit-content\"\r\n    this.setState({\r\n      isShowCode: !this.props.canHidden || !!this.props.defaultShow\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let result = \"\";\r\n    try {\r\n      result = prettier.format(this.props.children, {\r\n        parser: \"typescript\",\r\n        plugins: [parserTypeScript, parserHtml]\r\n      });\r\n    } catch (e) {\r\n      console.error(\"代码格式有误，无法解析\")\r\n      result = this.props.children\r\n    }\r\n\r\n    let className = classNames(\r\n      \"lg-code-view-root\",\r\n      {\r\n        [`${this.props.className}`]: !!this.props.className,\r\n        \"lg-code-view-can-hidden\": this.props.canHidden\r\n      }\r\n    )\r\n\r\n    return (\r\n      <div className={className} style={this.props.style}>\r\n        <div ref={this.codeViewAreaRef} className=\"lg-code-view-area\"\r\n             style={{height: this.state.isShowCode ? this.areaMaxHeight : \"0\"}}>\r\n          <pre className={`prettyprint lang-js`}>\r\n              <div className=\"code_block\">\r\n                <code className=\"code_text\">{result}</code>\r\n              </div>\r\n          </pre>\r\n        </div>\r\n        {\r\n          !this.props.canHidden ? \"\" :\r\n            <div onClick={() => this.setState({isShowCode: !this.state.isShowCode})}\r\n                 className=\"lg-code-view-show-button\">\r\n              <div className={`lg-code-view-show-text ${this.state.isShowCode ? \"on-show\" : \"\"}`}>\r\n                {!this.state.isShowCode ? \"显示\" : \"隐藏\"}代码\r\n              </div>\r\n            </div>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import \"./index.scss\"\r\nimport {BaseComponent} from \"../../type/BaseComponent\";\r\nimport classNames from \"classnames\";\r\nimport { BaseProps } from \"../../type/BaseProps\";\r\nimport {CodeView} from \"@/components/CodeView\";\r\n\r\n\r\nexport interface DemoViewProps {\r\n  title: string\r\n  subtitle?: string\r\n  code?: string\r\n}\r\n\r\nexport class DemoView extends BaseComponent<DemoViewProps> {\r\n\r\n  private readonly classNamePrefix: string\r\n\r\n  constructor(props: (DemoViewProps & BaseProps) | Readonly<DemoViewProps & BaseProps>) {\r\n    super(props);\r\n    this.classNamePrefix = \"lg-demo-view\"\r\n  }\r\n\r\n  render() {\r\n    let className = classNames(\r\n      `${this.classNamePrefix}-root`,\r\n      {\r\n        [`${this.props.className}`]: !!this.props.className\r\n      }\r\n    )\r\n    return (\r\n      <div className={className} style={this.props.style}>\r\n        <div className={`${this.classNamePrefix}-title`}>{this.props.title}</div>\r\n        {\r\n          !this.props.subtitle ? \"\" :\r\n            <div className={`${this.classNamePrefix}-subtitle`}>{this.props.subtitle}</div>\r\n        }\r\n        <div className={`${this.classNamePrefix}-component-area`}>\r\n          {\r\n            this.props.children\r\n          }\r\n        </div>\r\n        {\r\n          !this.props.code? \"\":\r\n            <CodeView canHidden={true}>{this.props.code}</CodeView>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}","import {BaseComponent} from \"../../type/BaseComponent\";\r\nimport {BaseProps} from \"../../type/BaseProps\";\r\nimport classNames from \"classnames\";\r\nimport \"./index.scss\"\r\nimport {CodeView} from \"@/components/CodeView\";\r\n\r\nexport interface DemoPageProps {\r\n  title: string\r\n  subtitle?: string\r\n  importCode?: string\r\n  interfaceCode?: string\r\n}\r\n\r\n\r\nexport class DemoPage extends BaseComponent<DemoPageProps> {\r\n\r\n  private readonly classNamePrefix: string\r\n\r\n  constructor(props: (DemoPageProps & BaseProps) | Readonly<DemoPageProps & BaseProps>) {\r\n    super(props);\r\n    this.classNamePrefix = \"lg-demo-page\"\r\n  }\r\n\r\n  render() {\r\n\r\n    const className = classNames(\r\n      `${this.classNamePrefix}-root`,\r\n      {\r\n        [`${this.props.className}`]: !!this.props.className\r\n      }\r\n    )\r\n\r\n    return (\r\n      <div className={className}>\r\n        <div className={`${this.classNamePrefix}-header`}>\r\n          <div className={`${this.classNamePrefix}-title`}>{this.props.title}</div>\r\n          {\r\n            !this.props.subtitle ? \"\" :\r\n              < div className={`${this.classNamePrefix}-subtitle`}>{this.props.subtitle}</div>\r\n          }\r\n          {\r\n            !this.props.importCode ? \"\" : (\r\n              <div className={`${this.classNamePrefix}-import`}>\r\n                <div className={`${this.classNamePrefix}-import-title`}>在页面中引入组件</div>\r\n                <CodeView>\r\n                  {this.props.importCode}\r\n                </CodeView>\r\n              </div>\r\n            )\r\n\r\n          }\r\n        </div>\r\n        <div className={`${this.classNamePrefix}-body`}>\r\n          {\r\n            this.props.children\r\n          }\r\n        </div>\r\n        <div className={`${this.classNamePrefix}-footer`}>\r\n          {\r\n            !this.props.interfaceCode ? \"\" : (\r\n              <div className={`${this.classNamePrefix}-interface`}>\r\n                <div className={`${this.classNamePrefix}-interface-title`}>标签属性解析</div>\r\n                <CodeView>\r\n                  {this.props.interfaceCode}\r\n                </CodeView>\r\n              </div>\r\n            )\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import { BaseProps } from \"../../type/BaseProps\";\r\nimport {BaseComponent} from \"../../type/BaseComponent\"\r\nimport \"./index.scss\";\r\nimport classNames from \"classnames\";\r\n\r\nexport interface LgInputNumberProps extends BaseProps {\r\n    value?: number\r\n    step?: number | string\r\n    max?: number | string\r\n    min?: number | string\r\n    editable?: boolean\r\n    readonly?: boolean\r\n    disabled?: boolean\r\n    formatter?: Function\r\n    size?: 'large' | 'small'\r\n    controlsOutside?: boolean\r\n    onChange?(value?: any): void  \r\n    onFocus?(value?:any): void\r\n    onBlur?(value?:any): void\r\n}\r\nexport interface LgInputNumberState {\r\n    inputValue: string\r\n}\r\n\r\nexport const LgInputNumber = (props: LgInputNumberProps) => {\r\n    return <LgInput {...props} />\r\n}\r\nexport class LgInput extends BaseComponent<LgInputNumberProps,LgInputNumberState> { \r\n    constructor(props: LgInputNumberProps) {\r\n        super(props)\r\n        let tempValue = this.props.value || Number(this.props.min) || 1\r\n        if (tempValue < Number(this.props.min)) {\r\n            tempValue = Number(this.props.min)\r\n        }\r\n        if (tempValue > Number(this.props.max)) {\r\n            tempValue = Number(this.props.max) \r\n        }\r\n        this.state = {\r\n            inputValue: String(tempValue)\r\n        }\r\n    }\r\n    formatValue(value:string) : string {\r\n        let tempValue = this.state.inputValue\r\n        if (this.props.formatter) {\r\n            tempValue = this.props.formatter(tempValue)\r\n        }\r\n        return tempValue\r\n    }\r\n    add(a:number, b:number) : number{\r\n        var r1, r2, m;\r\n        try { r1 = a.toString().split(\".\")[1].length } catch (e) { r1 = 0 }\r\n        try { r2 = b.toString().split(\".\")[1].length } catch (e) { r2 = 0 }\r\n        m = Math.pow(10, Math.max(r1, r2))\r\n        return (a * m + b * m) / m\r\n    }\r\n    sub(a:number, b:number) : number{\r\n        var r1, r2, m;\r\n        try { r1 = a.toString().split(\".\")[1].length } catch (e) { r1 = 0 }\r\n        try { r2 = b.toString().split(\".\")[1].length } catch (e) { r2 = 0 }\r\n        m = Math.pow(10, Math.max(r1, r2))\r\n        return (a * m - b * m) / m\r\n    }\r\n    onUpClick() {\r\n        if (this.props.readonly || this.props.disabled) {\r\n            return\r\n        }\r\n        let num = parseFloat(this.state.inputValue)\r\n        if (!this.state.inputValue) {\r\n            this.setState({\r\n                inputValue: String(this.props.max || this.props.value || this.props.min || 1)\r\n            })\r\n        }else {\r\n            let step = parseFloat(String(this.props.step || 1))\r\n            let result = this.add(num,step)\r\n            if (this.props.max && result > Number(this.props.max)) {\r\n                return\r\n            }\r\n            this.setState({\r\n                inputValue: String(this.add(num,step))\r\n            })\r\n        }      \r\n        if (this.props.onChange) {\r\n            this.props.onChange(this.state.inputValue)  \r\n        }\r\n    }\r\n    onDownClick() {\r\n        if (this.props.readonly || this.props.disabled) {\r\n            return\r\n        }\r\n        if (!this.state.inputValue) {\r\n            this.setState({\r\n                inputValue: String(this.props.min || this.props.value || this.props.max || 1)\r\n            })\r\n        }else {\r\n            let num = parseFloat(this.state.inputValue)\r\n            let step = parseFloat(String(this.props.step || 1))\r\n            let result = this.sub(num,step)\r\n            if (this.props.min && result < Number(this.props.min)) {\r\n                return\r\n            }\r\n            this.setState({\r\n                inputValue: String(this.sub(num,step))\r\n            }) \r\n        } \r\n        if (this.props.onChange) {\r\n            this.props.onChange(this.state.inputValue)  \r\n        }\r\n    }\r\n    onInputChange(e: any) {   \r\n        var tempValue:string = e.target.value \r\n        if (tempValue === \"\") {\r\n            this.setState({\r\n                inputValue: \"\"\r\n            }) \r\n        }else {\r\n            tempValue = tempValue.replace(/[^\\-?\\d.]/g,'')\r\n            let numValue = parseFloat(tempValue)\r\n            if (numValue > 99999999999999999999999) {\r\n                tempValue = \"Infinity\"\r\n            }\r\n            if (numValue < -9999999999999999999999) {\r\n                tempValue = \"-Infinity\"\r\n            }\r\n            if (numValue > Number(this.props.max)) {\r\n                tempValue = String(this.props.max)\r\n            }\r\n            if (numValue < Number(this.props.min)) {\r\n                tempValue = String(this.props.min)\r\n            }\r\n            this.setState({\r\n                inputValue: tempValue\r\n            }) \r\n        }\r\n        \r\n    }\r\n    defineOnChange(e: any) {\r\n        if (this.props.onChange) {\r\n            this.props.onChange(e.target.value)\r\n        }\r\n    }\r\n    defineOnFocus(e: any) {\r\n        if (this.props.onFocus) {\r\n            this.props.onFocus(e)\r\n        }\r\n    }\r\n    render() {\r\n        const { className = '', style } = this.props\r\n        let inputNumberClassName = classNames(\r\n            \"lancoo-input-number\",\r\n            className,\r\n            {\r\n                \"lancoo-input-number-controls-outside\": this.props.controlsOutside,\r\n                \"lancoo-input-number-disable\": this.props.disabled,\r\n                \"lancoo-input-number-small\": this.props.size === \"small\",\r\n                \"lancoo-input-number-large\": this.props.size === \"large\"\r\n            }\r\n        )\r\n        return (\r\n            <div className={inputNumberClassName} style={style}>\r\n                <div className=\"lancoo-input-number-wrap\">\r\n                    <span className={`lancoo-input-number-handle lancoo-input-number-handle-up ${this.props.max && parseInt(this.state.inputValue) >= Number(this.props.max) ? \"lancoo-input-number-handle-disable\":\"\"}`} onClick={this.onUpClick.bind(this)}>\r\n                        <span className=\"lancoo-input-number-handle-up-inner el-icon-arrow-up\">\r\n                        </span>\r\n                    </span>\r\n                    <span className={`lancoo-input-number-handle lancoo-input-number-handle-down ${this.props.min && parseInt(this.state.inputValue) <= Number(this.props.min) ? \"lancoo-input-number-handle-disable\":\"\"}`} onClick={this.onDownClick.bind(this)}>\r\n                        <span className=\"lancoo-input-number-handle-down-inner el-icon-arrow-down\">\r\n                        </span>\r\n                    </span>\r\n                </div>\r\n                <div className=\"lancoo-input-number-input-wrap\">\r\n                    <input autoComplete=\"off\"\r\n                        spellCheck=\"false\" \r\n                        placeholder=\"\" \r\n                        type=\"text\" \r\n                        className=\"lancoo-input-number-input\" \r\n                        disabled = {this.props.disabled} readOnly = {this.props.readonly || this.props.editable} \r\n                        value={this.formatValue(this.state.inputValue)} \r\n                        onInput={this.onInputChange.bind(this)} \r\n                        onChange={this.defineOnChange.bind(this)}\r\n                        onFocus={this.defineOnFocus.bind(this)}\r\n                        onBlur={this.props.onBlur?this.props.onBlur:()=>{}}/>\r\n                </div>\r\n                <div className={`lancoo-input-number-controls-outside-btn lancoo-input-number-controls-outside-down ${this.props.min && parseInt(this.state.inputValue) <= Number(this.props.min) ? \"lancoo-input-number-controls-outside-disable\":\"\"}`} onClick={this.onDownClick.bind(this)}>\r\n                    <i className=\"lancoo-input-number-controls-outside-down-inner el-icon-minus\"></i>\r\n                </div>\r\n                <div className={`lancoo-input-number-controls-outside-btn lancoo-input-number-controls-outside-up ${this.props.max && parseInt(this.state.inputValue) >= Number(this.props.max) ? \"lancoo-input-number-controls-outside-disable\":\"\"}`} onClick={this.onUpClick.bind(this)}>\r\n                    <i className=\"lancoo-input-number-controls-outside-up-inner el-icon-plus\"></i>\r\n                </div>                \r\n            </div>\r\n        )\r\n    }\r\n}","import {Component} from \"react\";\r\nimport \"./index.scss\";\r\nimport {LgInputNumber} from \"@/components/inputNumber\"\r\nimport { Button } from \"element-react\";\r\nimport {DemoView} from \"@/components/demoView\";\r\nimport {DemoPage} from \"../demoPage\";\r\n\r\nexport interface LgInputNumberState {\r\n    disabled: boolean\r\n}\r\n\r\nexport default class InputNumber extends Component<{}, LgInputNumberState> {\r\n    constructor() {\r\n        super({})\r\n        this.state = {\r\n            disabled: false\r\n        }\r\n    }\r\n  componentDidMount() {\r\n\r\n  }\r\n\r\n  testOnChange(value:any) {\r\n    alert(\"传递函数给onChange获取值\")\r\n  }\r\n\r\n  toggleDisabled() {\r\n    this.setState({\r\n        disabled: !this.state.disabled\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <DemoPage title=\"G024步进器\"\r\n                importCode={`\r\n                    import {LgInputNumber} from \"@/components/inputNumber\"\r\n                `}\r\n                className=\"lg-input-number-demo\"\r\n                interfaceCode={`\r\n                    interface LgInputNumberProps extends BaseProps {\r\n                        value?: number // 默认值\r\n                        step?: number | string // 每次改变的数值,可以是小数\r\n                        max?: number | string // 最大值\r\n                        min?: number | string // 最小值\r\n                        editable?: boolean // 是否可编辑,默认true\r\n                        readonly?: boolean // 是否只读,默认false\r\n                        disabled?: boolean // 是否禁用,默认false\r\n                        formatter?: Function // 指定输入框展示值的格式\r\n                        size?: 'large' | 'small' // 输入框尺寸,可选值large、small,默认正常尺寸\r\n                        controlsOutside?: boolean // 按钮位置是否置于两侧\r\n                        onChange?(value?: any): void // 数值改变时的回调,返回当前值\r\n                        onFocus?(value?: any): void // 聚焦时触发\r\n                        onBlur?(value?: any): void // 数值改变时的回调,返回当前值\r\n                    }\r\n                `}>\r\n            <DemoView title=\"基本用法\" subtitle=\"可以通过输入、鼠标点击或键盘的上下键来改变数值大小。\" code={`\r\n                <LgInputNumber value={1} min={1} max={2}/>\r\n            `}>\r\n                <LgInputNumber value={1} min={1} max={2}/>\r\n            </DemoView>\r\n\r\n            <DemoView title=\"小数\" subtitle=\"通过设置step属性控制每次改变的精度。\" code={`\r\n                <LgInputNumber value={1} min={1} max={10} step={1.5}/>\r\n            `}>\r\n                <LgInputNumber value={1} min={1} max={10} step={1.5}/>\r\n            </DemoView>\r\n\r\n            <DemoView title=\"格式化展示\" subtitle=\"通过 formatter 格式化数字,以展示具有具体含义的数据\"  code={`\r\n            <>\r\n                <LgInputNumber value={1000} min={1} max={2000} formatter={(value:any) => \\`$ \\${value}\\`.replace(/\\\\B(?=(\\\\d{3})+(?!\\\\d))/g, ',')}/>\r\n                <LgInputNumber value={1} min={1} max={2000} formatter={(value:any) => \\`\\${value}%\\`}/>\r\n            </>\r\n            `}>\r\n                <div>\r\n                    <LgInputNumber\r\n                        value={1000}\r\n                        min={1000}\r\n                        max={2000}\r\n                        formatter={(value: any) =>\r\n                        `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n                        }\r\n                    />\r\n                    <LgInputNumber\r\n                        value={100}\r\n                        min={1}\r\n                        max={2000}\r\n                        formatter={(value: any) =>\r\n                            `${value}%`\r\n                        }\r\n                        style={{marginLeft:10}}\r\n                    />\r\n                </div>\r\n            </DemoView>\r\n            <DemoView title=\"尺寸\" subtitle=\"通过设置size属性为large和small将输入框设置为大和小尺寸,不设置为默认尺寸。\"  code={`\r\n            <>\r\n                <LgInputNumber value={3} size=\"small\"/>\r\n                <LgInputNumber value={3}/>\r\n                <LgInputNumber value={3} size=\"large\"/>\r\n            </>\r\n            `}>\r\n                <div>\r\n                    <LgInputNumber value={3} size=\"small\" style={{marginLeft:10}}/>\r\n                    <LgInputNumber value={3} style={{marginLeft:10}}/>\r\n                    <LgInputNumber value={3} size=\"large\" style={{marginLeft:10}}/>\r\n                </div>\r\n            </DemoView>\r\n            <DemoView title=\"不可用\" subtitle=\"通过设置disabled属性禁用输入框,点击按钮切换状态。\"  code={`\r\n            <>\r\n                <LgInputNumber value={666} disabled={this.state.disabled}/>\r\n                <div style={{display:\"inline-block\",marginLeft:10}}>\r\n                    <Button type=\"primary\" onClick={this.toggleDisabled.bind(this)}>禁用转换</Button>\r\n                </div>\r\n            </>\r\n            `}>\r\n                <div>\r\n                    <LgInputNumber value={666} disabled={this.state.disabled}/>\r\n                    <div style={{display:\"inline-block\",marginLeft:10}}>\r\n                        <Button type=\"primary\" onClick={this.toggleDisabled.bind(this)}>禁用转换</Button>\r\n                    </div>\r\n                </div>\r\n            </DemoView>\r\n            <DemoView title=\"只读\" subtitle=\"通过设置readonly属性开启只读。\"  code={`\r\n\r\n                <LgInputNumber value={5} readonly/>\r\n\r\n            `}>\r\n                <LgInputNumber value={5} readonly/>\r\n            </DemoView>\r\n            <DemoView title=\"不可编辑\" subtitle=\"通过设置editable属性控制是否能编辑。\"  code={`\r\n\r\n                <LgInputNumber value={5} editable/>\r\n\r\n            `}>\r\n                <LgInputNumber value={5} editable/>\r\n            </DemoView>\r\n            <DemoView title=\"按钮位置\" subtitle=\"通过设置 controls-outside 属性可以将按钮位置置于输入框两侧。\"  code={`\r\n\r\n                <LgInputNumber value={5} controlsOutside/>\r\n\r\n            `}>\r\n                <LgInputNumber value={5} controlsOutside/>\r\n            </DemoView>\r\n        </DemoPage>\r\n\r\n    )\r\n  }\r\n}\r\n\r\ninterface TypeCardFrameProps {\r\n  title: string\r\n  subtitle: string\r\n}","import {Component} from \"react\";\r\nimport {BaseProps} from \"./BaseProps\";\r\n\r\nexport class BaseComponent<T = {}, S = {}, SS = any> extends Component<T & BaseProps, S, SS>{\r\n  constructor(props: (T & BaseProps) | Readonly<T & BaseProps>) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.onRef && this.props.onRef(this)\r\n  }\r\n}","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 26291;\nmodule.exports = webpackEmptyContext;"],"names":["CodeView","props","codeViewAreaRef","areaMaxHeight","state","isShowCode","createRef","window","PR","prettyPrint","this","current","clientHeight","setState","canHidden","defaultShow","result","prettier","children","parser","plugins","parserTypeScript","parserHtml","e","console","error","className","classNames","style","ref","height","onClick","Component","defaultProps","language","DemoView","classNamePrefix","title","subtitle","code","BaseComponent","DemoPage","importCode","interfaceCode","LgInputNumber","LgInput","tempValue","value","Number","min","max","inputValue","String","formatter","a","b","r1","r2","m","toString","split","length","Math","pow","readonly","disabled","num","parseFloat","step","add","onChange","sub","target","replace","numValue","onFocus","inputNumberClassName","controlsOutside","size","parseInt","onUpClick","bind","onDownClick","autoComplete","spellCheck","placeholder","type","readOnly","editable","formatValue","onInput","onInputChange","defineOnChange","defineOnFocus","onBlur","InputNumber","alert","marginLeft","display","Button","toggleDisabled","onRef","webpackEmptyContext","req","Error","keys","resolve","id","module","exports"],"sourceRoot":""}