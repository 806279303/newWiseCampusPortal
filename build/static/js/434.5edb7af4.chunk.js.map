{"version":3,"file":"static/js/434.5edb7af4.chunk.js","mappings":"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","sources":["components/CodeView/index.tsx","components/demoView/index.tsx","components/alert/util/index.ts","components/alert/index.tsx","pages/alert/index.tsx","pages/demoPage/index.tsx","type/BaseComponent.ts","../node_modules/prettier|sync"],"sourcesContent":["import \"code-prettify\";\r\nimport \"code-prettify/src/prettify.css\";\r\n\r\nimport parserTypeScript from 'prettier/parser-typescript';\r\nimport prettier from 'prettier/standalone';\r\nimport parserHtml from \"prettier/parser-html\";\r\nimport {Component, createRef, CSSProperties, RefObject} from \"react\";\r\nimport \"./index.scss\";\r\nimport classNames from \"classnames\";\r\n\r\ninterface CodeViewProps {\r\n  children: string\r\n  className?: string\r\n  style?: CSSProperties\r\n  language?: \"ts\" | \"html\"\r\n  defaultShow?: boolean\r\n  canHidden?: boolean\r\n}\r\n\r\n\r\ninterface CodeViewState {\r\n  isShowCode: boolean\r\n}\r\n\r\nexport class CodeView extends Component<CodeViewProps, CodeViewState> {\r\n\r\n  private readonly codeViewAreaRef: RefObject<HTMLDivElement>\r\n  private areaMaxHeight: string\r\n\r\n  static defaultProps: CodeViewProps = {\r\n    children: \"\",\r\n    language: \"ts\",\r\n    canHidden: false\r\n  }\r\n\r\n  constructor(props: CodeViewProps | Readonly<CodeViewProps>) {\r\n    super(props);\r\n    this.state = {\r\n      isShowCode: true\r\n    }\r\n    this.codeViewAreaRef = createRef<HTMLDivElement>();\r\n    this.areaMaxHeight = \"fit-content\"\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    (window as any).PR.prettyPrint();\r\n  }\r\n\r\n  componentDidMount() {\r\n    (window as any).PR.prettyPrint();\r\n    this.areaMaxHeight = this.codeViewAreaRef.current?.clientHeight + \"px\" || \"fit-content\"\r\n    this.setState({\r\n      isShowCode: !this.props.canHidden || !!this.props.defaultShow\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let result = \"\";\r\n    try {\r\n      result = prettier.format(this.props.children, {\r\n        parser: \"typescript\",\r\n        plugins: [parserTypeScript, parserHtml]\r\n      });\r\n    } catch (e) {\r\n      console.error(\"代码格式有误，无法解析\")\r\n      result = this.props.children\r\n    }\r\n\r\n    let className = classNames(\r\n      \"lg-code-view-root\",\r\n      {\r\n        [`${this.props.className}`]: !!this.props.className,\r\n        \"lg-code-view-can-hidden\": this.props.canHidden\r\n      }\r\n    )\r\n\r\n    return (\r\n      <div className={className} style={this.props.style}>\r\n        <div ref={this.codeViewAreaRef} className=\"lg-code-view-area\"\r\n             style={{height: this.state.isShowCode ? this.areaMaxHeight : \"0\"}}>\r\n          <pre className={`prettyprint lang-js`}>\r\n              <div className=\"code_block\">\r\n                <code className=\"code_text\">{result}</code>\r\n              </div>\r\n          </pre>\r\n        </div>\r\n        {\r\n          !this.props.canHidden ? \"\" :\r\n            <div onClick={() => this.setState({isShowCode: !this.state.isShowCode})}\r\n                 className=\"lg-code-view-show-button\">\r\n              <div className={`lg-code-view-show-text ${this.state.isShowCode ? \"on-show\" : \"\"}`}>\r\n                {!this.state.isShowCode ? \"显示\" : \"隐藏\"}代码\r\n              </div>\r\n            </div>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import \"./index.scss\"\r\nimport {BaseComponent} from \"../../type/BaseComponent\";\r\nimport classNames from \"classnames\";\r\nimport { BaseProps } from \"../../type/BaseProps\";\r\nimport {CodeView} from \"@/components/CodeView\";\r\n\r\n\r\nexport interface DemoViewProps {\r\n  title: string\r\n  subtitle?: string\r\n  code?: string\r\n}\r\n\r\nexport class DemoView extends BaseComponent<DemoViewProps> {\r\n\r\n  private readonly classNamePrefix: string\r\n\r\n  constructor(props: (DemoViewProps & BaseProps) | Readonly<DemoViewProps & BaseProps>) {\r\n    super(props);\r\n    this.classNamePrefix = \"lg-demo-view\"\r\n  }\r\n\r\n  render() {\r\n    let className = classNames(\r\n      `${this.classNamePrefix}-root`,\r\n      {\r\n        [`${this.props.className}`]: !!this.props.className\r\n      }\r\n    )\r\n    return (\r\n      <div className={className} style={this.props.style}>\r\n        <div className={`${this.classNamePrefix}-title`}>{this.props.title}</div>\r\n        {\r\n          !this.props.subtitle ? \"\" :\r\n            <div className={`${this.classNamePrefix}-subtitle`}>{this.props.subtitle}</div>\r\n        }\r\n        <div className={`${this.classNamePrefix}-component-area`}>\r\n          {\r\n            this.props.children\r\n          }\r\n        </div>\r\n        {\r\n          !this.props.code? \"\":\r\n            <CodeView canHidden={true}>{this.props.code}</CodeView>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}","import { ElementAlert, LgAlertProps, tipModel, TipType, typeModel_A, typeModel_E, LgAlertPropsPosition } from \"../\";\r\n\r\n/**\r\n * @description  : 初始化弹出提示框的位置\r\n * @param         { type LgAlertPropsPosition }  LgAlertPropsPosition\r\n * @param         { type number }  zIndexNumber\r\n * @return        { type * } \r\n */\r\nexport function initContainerPosition(LgAlertPropsPosition?: LgAlertPropsPosition, zIndexNumber?: number): { style: React.CSSProperties, type: string, positionType: number } {\r\n    let style = {}; let tipPositionXType: string = ''; let tipPositionYType: string = '';\r\n    switch (LgAlertPropsPosition?.xAxis) {\r\n        case 'left': tipPositionXType = '1'; break;\r\n        case 'center': tipPositionXType = '2'; break;\r\n        case 'right': tipPositionXType = '3'; break;\r\n        default: tipPositionXType = '0'; break;\r\n    }\r\n    switch (LgAlertPropsPosition?.yAxis) {\r\n        case 'top': tipPositionYType = '1'; break;\r\n        case 'center': tipPositionYType = '2'; break;\r\n        case 'bottom': tipPositionYType = '3'; break;\r\n        default: tipPositionYType = '0'; break;\r\n    }\r\n    let type = tipPositionXType + tipPositionYType;\r\n    let positionType = 0;\r\n    let showAlign = LgAlertPropsPosition?.showAlign;\r\n    let showDirection = LgAlertPropsPosition?.showDirection;\r\n    let alignItems: string = 'center';\r\n    let justifyContent: string = 'center';\r\n    if (showAlign as undefined == undefined) { showAlign = 'top'; }\r\n    switch (showDirection) {\r\n        case 'left': alignItems = 'flex-start'; break;\r\n        case 'center': alignItems = 'center'; break;\r\n        case 'right': alignItems = 'flex-end'; break;\r\n    }\r\n    switch (showAlign) {\r\n        case 'top': justifyContent = 'flex-start'; break;\r\n        case 'center': justifyContent = 'center'; break;\r\n        case 'bottom': justifyContent = 'flex-end'; break;\r\n    }\r\n    switch (type) {\r\n        case '11': style = {\r\n            zIndex: zIndexNumber,\r\n            top: '40px', left: '40px',\r\n            transform: `translate(${LgAlertPropsPosition?.xOffset || 0}, ${LgAlertPropsPosition?.yOffset || 0})`,\r\n            alignItems: 'flex-start',\r\n            justifyContent: 'flex-start'\r\n        }; positionType = 1; break;\r\n        case '21': style = {\r\n            zIndex: zIndexNumber,\r\n            top: '40px', left: '50%',\r\n            transform: `translate(${LgAlertPropsPosition?.xOffset || '-50%'}, ${LgAlertPropsPosition?.yOffset || 0})`,\r\n            alignItems: 'flex-start',\r\n            justifyContent: 'center'\r\n\r\n        }; positionType = 2; break;\r\n        case '31': style = {\r\n            zIndex: zIndexNumber,\r\n            top: '40px', right: '40px',\r\n            transform: `translate(${LgAlertPropsPosition?.xOffset || 0}, ${LgAlertPropsPosition?.yOffset || 0})`,\r\n            alignItems: 'flex-start',\r\n            justifyContent: 'flex-end'\r\n        }; positionType = 3; break;\r\n        case '12': style = {\r\n            zIndex: zIndexNumber,\r\n            top: '50%', left: '40px',\r\n            transform: `translate(${LgAlertPropsPosition?.xOffset || 0}, ${LgAlertPropsPosition?.yOffset || '-50%'})`,\r\n            alignItems: 'center',\r\n            justifyContent: 'flex-start'\r\n\r\n        }; positionType = 4; break;\r\n        case '22': style = {\r\n            zIndex: zIndexNumber,\r\n            top: '50%', left: '50%',\r\n            transform: `translate(${LgAlertPropsPosition?.xOffset || '-50%'}, ${LgAlertPropsPosition?.yOffset || '-50%'})`,\r\n            alignItems: 'center',\r\n            justifyContent: 'center'\r\n\r\n        }; positionType = 5; break;\r\n        case '32': style = {\r\n            zIndex: zIndexNumber,\r\n            top: '50%', right: '40px',\r\n            transform: `translate(${LgAlertPropsPosition?.xOffset || 0}, ${LgAlertPropsPosition?.yOffset || '-50%'})`,\r\n            alignItems: 'center',\r\n            justifyContent: 'flex-end'\r\n\r\n        }; positionType = 6; break;\r\n        case '13': style = {\r\n            zIndex: zIndexNumber,\r\n            bottom: '40px', left: '40px',\r\n            transform: `translate(${LgAlertPropsPosition?.xOffset || 0}, ${LgAlertPropsPosition?.yOffset || 0})`,\r\n            alignItems: 'flex-end',\r\n            justifyContent: 'flex-start'\r\n\r\n        }; positionType = 7; break;\r\n        case '23': style = {\r\n            zIndex: zIndexNumber,\r\n            bottom: '40px', left: '50%',\r\n            transform: `translate(${LgAlertPropsPosition?.xOffset || '-50%'}, ${LgAlertPropsPosition?.yOffset || 0})`,\r\n            alignItems: 'flex-end',\r\n            justifyContent: 'center'\r\n\r\n        }; positionType = 8; break;\r\n        case '33': style = {\r\n            zIndex: zIndexNumber,\r\n            right: '40px', bottom: '40px',\r\n            transform: `translate(${LgAlertPropsPosition?.xOffset || 0}, ${LgAlertPropsPosition?.yOffset || 0})`,\r\n            alignItems: 'flex-end',\r\n            justifyContent: 'flex-end',\r\n\r\n        }; positionType = 9; break;\r\n        default: style = {\r\n            zIndex: zIndexNumber,\r\n            alignItems, justifyContent,\r\n            top: LgAlertPropsPosition?.yAxis || 0,\r\n            left: LgAlertPropsPosition?.xAxis || 0,\r\n            transform: `translate(${LgAlertPropsPosition?.xOffset || 0}, ${LgAlertPropsPosition?.yOffset || 0})`,\r\n        }; positionType = 0; break;\r\n    }\r\n    return { style, type, positionType }\r\n}\r\n/**\r\n * @description  : 初始化提示的类型\r\n * @param         { type typeModel_A }  tipType 需要提示的类型\r\n * @param         { type tipModel }  model alert的提示类型\r\n * @return        { type * } \r\n */\r\nexport function initTipType(tipType: typeModel_A | typeModel_E | TipType = 'info', model?: tipModel) {\r\n    let type: number = -1;\r\n    switch (model) {\r\n        case 'A':\r\n            switch (tipType) {\r\n                case 'info': type = 0; break;//展示信息\r\n                case 'error': type = 1; break;//报错信息\r\n                case 'warning': type = 2; break;//警告提示框\r\n                case 'success': type = 3; break;//成功提示框\r\n                case 'question': type = 4; break;//询问提示框\r\n                default: type = -1; break;//\r\n            };\r\n            break;\r\n        case 'E':\r\n            switch (tipType) {\r\n                case 'info': type = 0; break;//展示信息\r\n                case 'error': type = 1; break;//报错信息\r\n                case 'warning': type = 2; break;//警告提示框\r\n                case 'success': type = 3; break;//成功提示框\r\n                default: type = -1; break;//\r\n            };\r\n            if (type == -1) { type = 6 };\r\n            break;\r\n\r\n        default:\r\n            switch (tipType) {\r\n                case 'info': type = 0; break;//展示信息\r\n                case 'error': type = 1; break;//报错信息\r\n                case 'warning': type = 2; break;//警告提示框\r\n                case 'success': type = 3; break;//成功提示框\r\n                case 'loading': type = 4; break;//加载提示框\r\n                case 'question': type = 5; break;//询问提示框\r\n                case 'closeAll': type = 6; break;//关闭所有提示框\r\n                default: type = -1; break;//\r\n            };\r\n            if (type == -1) { type = 6 };\r\n            break;\r\n    }\r\n    return type;\r\n}\r\n\r\n/**\r\n * @description  :初始化A款的必要className名称\r\n * @param         { type string }  tipSize\r\n * @return        { type * } \r\n */\r\nexport function initLgAlertTypeAClass(tipSize: string): { miniClass: string, layerContainerClass: string, showDom: boolean[] } {\r\n    let miniClass = '';\r\n    let layerContainerClass = '';\r\n    let showDom: boolean[] = [false, false, false];\r\n    switch (tipSize) {\r\n        case 'big':\r\n            miniClass = ' lg_alert_body_box_big '\r\n            layerContainerClass = ' lg_alert_body_A_size_big '\r\n            showDom = showDom.map(o => o = true);\r\n            break;\r\n        case 'small':\r\n            miniClass = ' lg_alert_body_box_small '\r\n            layerContainerClass = ' lg_alert_body_A_size_small '\r\n            showDom = showDom.map((o, i) => { if (i > 0) { return true; } return false })\r\n            break;\r\n        case 'mini':\r\n            miniClass = ' lg_alert_body_box_mini '\r\n            layerContainerClass = ' lg_alert_body_A_size_mini '\r\n            showDom = showDom.map((o, i) => { if (i > 1) { return true } return false })\r\n            break;\r\n        default:\r\n            showDom = showDom.map((o, i) => { if (i > 1) { return true } return false })\r\n            break;\r\n    }\r\n    return { miniClass, layerContainerClass, showDom }\r\n}\r\n/**\r\n * @description  : 初始化提示框A的参数\r\n * @param         { type LgAlertProps }  o 需初始化的参数\r\n * @return        { type * } \r\n */\r\nexport function initAlertParamsA(o: LgAlertProps): ElementAlert {\r\n    let initOption = { title: o.content, type: 'info', closable: true, showIcon: false }\r\n    initOption = Object.assign(initOption, o)\r\n    let options: ElementAlert = initOption as ElementAlert;\r\n    options.showIcon = o?.isShowIcon ? true : false;\r\n    options.closable = o?.isShowCloseBtn ? true : false;\r\n    options.className = o.className;\r\n    options.closeText = o.closeText;\r\n    options.style = o.style\r\n    let tipType = o.tipType;\r\n    switch (tipType) {\r\n        case 'info': tipType = 'info'; break;\r\n        case 'success': tipType = 'success'; break;\r\n        case 'warning': tipType = 'warning'; break;\r\n        case 'error': tipType = 'error'; break;\r\n        default: tipType = 'info'; break;\r\n    }\r\n    initOption.type = tipType\r\n    return options\r\n}\r\n\r\n/**\r\n * @description  : 初始化E款的参数\r\n * @param         { type LgAlertProps }  o\r\n * @return        { type * } \r\n */\r\nexport function initAlertParams(o: LgAlertProps): ElementAlert {\r\n    let initOption = {\r\n        title: o.content,\r\n        type: 'info',\r\n        closable: true,\r\n        showIcon: false,\r\n    }\r\n    initOption = Object.assign(initOption, o)\r\n    let options: ElementAlert = initOption as ElementAlert;\r\n    options.showIcon = o?.isShowIcon ? true : false;\r\n    options.closable = o?.isShowCloseBtn ? true : false;\r\n    options.className = o.className;\r\n    options.closeText = o.closeText;\r\n    let tipType = o.tipType;\r\n    switch (tipType) {\r\n        case 'info': tipType = 'info'; break;\r\n        case 'success': tipType = 'success'; break;\r\n        case 'warning': tipType = 'warning'; break;\r\n        case 'error': tipType = 'error'; break;\r\n        default: tipType = 'info'; break;\r\n    }\r\n    initOption.type = tipType\r\n    return options\r\n}","/*\r\n * @Author       : super-J\r\n * @Date         : 2021-12-31 16:25:37\r\n * @LastEditTime : 2022-02-21 14:22:48\r\n * @LastEditors  : super-J\r\n * @Description  : Alert组件的封装\r\n */\r\nimport './index.scss';\r\nimport { Alert } from 'element-react';\r\nimport React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { initAlertParams, initAlertParamsA, initContainerPosition, initLgAlertTypeAClass, initTipType } from './util';\r\n// lgAlert使用的工具\r\nlet globalState: (state: any, callback?: () => void) => void;// 将tip的容器的setState转变到外部函数\r\nlet zIndexNumber = 19000;\r\nlet mapList = new Map();// 存储10个不同位置上的数据\r\nlet timeoutMap = new Map();// 存储销毁提示的定时器标识\r\n\r\n/**\r\n * @summary 通用的类型\r\n */\r\nexport type tipModel = 'A' | 'E' | undefined;// lgAlert的提示模式\r\nexport type tipMouldType = 'A' | 'E' | undefined;// lgAlert的提示模式\r\nexport type xOffsetType = \"left\" | \"center\" | \"right\" | undefined;// X轴上偏移的位置 0点在屏幕左上角\r\nexport type yOffsetType = \"top\" | \"center\" | \"bottom\" | undefined;// Y轴上偏移的位置 0点在屏幕左上角\r\nexport type showAlign = \"top\" | 'center' | 'bottom';// Y轴方向上的flex布局方式\r\nexport type showDirection = \"left\" | 'center' | 'right';// X轴方向上的flex布局方式\r\n/**\r\n * @summary default的类型\r\n */\r\nexport type TipType = \"info\" | \"error\" | \"warning\" | \"success\" | \"loading\" | \"question\" | \"closeAll\";// 默认的款式的提示类型\r\n\r\n/**\r\n * @summary A的类型\r\n */\r\nexport type typeModel_A = 'success' | 'info' | 'warning' | 'error' | \"question\";// A款的提示类型\r\nexport type tipSize = 'big' | 'small' | 'mini' | undefined;// A款lgAlert的大小\r\n/**\r\n * @summary E的类型\r\n */\r\nexport type typeModel_E = 'success' | 'info' | 'warning' | \"error\";// E款的提示类型\r\n\r\n/**\r\n * @summary lgAlert通用参数\r\n */\r\nexport interface LgAlertProps extends LgAlertDefaultProps, ElementAlert, LgAlertModelAProps {\r\n\r\n    tipMouldType?: tipMouldType;// lgAlert的款式 | 默认值：undefined\r\n\r\n    tipType?: TipType | typeModel_A | typeModel_E;// lgAlert展示的类型 | 默认值: -- |/| 兼容款式：default \\ A \\ E \r\n\r\n    position?: LgAlertPropsPosition;// 设置lgAlert弹出的位置 | 默认值: -- |/| 兼容款式：default \\ A \\ E \r\n\r\n    duration?: number;// lgAlert展示后消失的时间 | 0:长时间停留在屏幕上面不消失 | 默认值: -- |/| 兼容款式：default \\ A \\ E \r\n    positionIndex?: number// 创建lgAlert后,执行的show函数返回每个提示实例的下标，用于关闭单个弹窗 | 默认值: -- |/| 兼容款式：default \\ A \\ E \r\n\r\n    content?: string;// 展示的内容 | 默认值: -- |/| 兼容款式：default \\ A \\ E \r\n\r\n    isShow?: boolean;// 是否展示弹框 | 默认值: -- |/| 兼容款式：default \\ A \\ E \r\n\r\n    isShowCloseBtn?: boolean;// 是否展示关闭按钮 | 默认值: false |/| 兼容款式：default \\ A \\ E \r\n    isShowIcon?: boolean;// 是否显示小图标 | 默认值: true |/| 兼容款式：default \\ A \\ E\\\r\n\r\n    customIcon?: React.ReactDOM | React.ReactElement;// 自定义的小图标 | 默认值: -- |/| 兼容款式：default \\ A \r\n    customClose?: React.ReactDOM | React.ReactElement;// 自定义关闭按钮的HTML元素  | 默认值: false |/| 兼容款式：default \\ A \r\n\r\n    // 提示框上的容器\r\n    containerClassName?: string;// 单个lgAlert的类名 | 默认值: -- |/| 兼容款式：default \\ A \\ E \r\n    containerStyle?: React.CSSProperties;// lgAlert的样式(10个窗口位置上的样式) | 默认值: -- |/| 兼容款式：default \\ A \\ E \r\n\r\n    onClose?(): void// 关闭alert时触发的事件 | 兼容款式：default \\ A \\ E \r\n}\r\n/**\r\n * @summary 默认款式的参数\r\n */\r\nexport interface LgAlertDefaultProps {\r\n\r\n    className?: string// 修改样式的类名 | 默认值: --\r\n    style?: React.CSSProperties// 修改样式的对象 | 默认值: --\r\n\r\n    // ------------------------------------不对外使用---------------------------------------\r\n    showIdNumber?: number;// 标示单个lgAlert的数字\r\n    showIdName?: string;// 标示单个lgAlert的id类名\r\n    closeTip?: (type: number, positionIndex: string) => void;// 关闭lgAlert | 注：不对外使用\r\n}\r\n/**\r\n * @summary A款样式的参数 仅适用于A款\r\n */\r\nexport interface LgAlertModelAProps {\r\n    confirmText?: string;// 确认按钮显示的文字 | 默认值: \"确定\"\r\n    closeText?: string;// 关闭按钮显示的文字 | 默认值: \"再想想\"\r\n    reverse?: boolean;// 确认按钮与取消按钮是否反转 | 默认值: false\r\n    tipSize?: tipSize;// 弹窗尺寸 | 默认值: small\r\n\r\n    className?: string// 修改样式的类名 | 默认值: --\r\n    style?: React.CSSProperties// 修改样式的对象 | 默认值: --\r\n\r\n    onConfirm?: () => void;// 点击确认按钮\r\n    onCancel?: (type: number, positionIndex: string) => void;// 点击关闭按钮\r\n    iconCloseAlert?: () => void;// 右上角关闭按钮\r\n}\r\n\r\n/**\r\n * @summary E款样式的参数 elementUI中需要传入的变量\r\n * \r\n * @see https://elemefe.github.io/element-react/#/zh-CN/alert\r\n */\r\nexport interface ElementAlert {\r\n    title?: string// 标题，必选参数 | 默认值: --\r\n    description?: string// \t辅助性文字 | 默认值: --\r\n    closable?: boolean// 是否可关闭 | 默认值: false\r\n    closeText?: string// 关闭按钮自定义文本 | 默认值: --\r\n    showIcon?: boolean// 是否显示图标  | 默认值: false\r\n\r\n    className?: string// 修改样式的类名  | 默认值: --\r\n    style?: React.CSSProperties// 修改样式的对象 | 默认值: --\r\n\r\n    onClose?(): void// 关闭alert时触发的事件\r\n}\r\n\r\n\r\n\r\n\r\n/**\r\n * @example \r\n * 打开:\r\n * let showIndex = lgAlert.show({ tipType: 'success', content: \"加载成功\", duration: 1000, })\r\n * \r\n * 修改,1s后删除:\r\n * lgAlert.show({ tipType: 'success', content: \"加载成功\", duration: 1000, }, showIndex.index);\r\n * \r\n * 长驻窗口:\r\n * let showIndex = lgAlert.show({ tipType: 'success', content: \"加载成功\", duration: 0, });\r\n * \r\n * 删除单个:\r\n *  lgAlert.close(showIndex.index);\r\n * \r\n * 删除所有\r\n * lgAlert.show({ tipType: 'closeAll' })\r\n *  \r\n */\r\nexport interface lgAlert {\r\n    showIdNumber: number;// \r\n    // -------------------------------------------对外使用的接口--------------------------------------------------\r\n    show: (e?: LgAlertShowProps, showIdIndex?: string) => { index: string, options: LgAlertShowProps };// 返回一个数字用于关闭已经打开的弹窗\r\n    close: (index: string) => void;// 关闭一个lgAlert\r\n    closeAll: () => void;// 关闭所有的lgAlert\r\n}\r\n/**\r\n * @summary lgAlert上的位置信息以及修改的精度值等\r\n */\r\nexport interface LgAlertPropsPosition {\r\n    xAxis?: xOffsetType | number | string;// lgAlert在X轴上的相对位置 | \"left\" | \"center\" | \"right\" | undefined(默认值) \r\n    yAxis?: yOffsetType | number | string;// lgAlert在y轴上的相对位置 | \"top\" | \"center\" | \"bottom\" | undefined(默认值)\r\n    xOffset?: number | string;// lgAlert在x轴上的偏移量 | 默认值:--\r\n    yOffset?: number | string;// lgAlert在y轴上的偏移量 | 默认值:--\r\n    showAlign?: showAlign;// lgAlert数据展示的起始方向 |  \"center\" | \"top\"(默认值) | \"bottom\"\r\n    showDirection?: showDirection;// lgAlert数据展示的水平对齐方向 \"left\" | \"center\"(默认值) | \"right\" \r\n}\r\n// 使用的lgAlert时需要传的参数\r\nexport interface LgAlertShowProps extends LgAlertProps { }\r\n\r\nexport interface LgAlertCloseProps { }\r\nexport interface LgAlertContainerProps extends LgAlertProps { }\r\nexport interface LgAlertContainerState {\r\n    alertMessageListPosition: LgAlertShowProps[][];// 10个位置上的lgAlert需要显示的文字信息\r\n    alertPositionStylePosition: React.CSSProperties[];// 10个位置上的lgAlertStyle样式\r\n    containerClassName: string[];// 10个位置上的lgAlerts类名\r\n    containerStyle: React.CSSProperties[];// 10个位置上的lgAlertStyle样式\r\n}\r\n\r\nexport interface LgAlertState { }\r\nexport const lgAlert: lgAlert = {\r\n    showIdNumber: 0,//创建的次数\r\n    /**\r\n     * @description  : 创建或者修改一个lgAlert\r\n     * @param         { type LgAlertShowProps }  e 传入创建的参数或者需要修改的参数\r\n     * @param         { type string }  showIdIndex 需要修改属性指定值的下标\r\n     * @return        { type * } \r\n     */\r\n    show: (e?: LgAlertShowProps, showIdIndex?: string) => {\r\n        let alertPositionStylePosition: React.CSSProperties[] = mapList.get('alertPositionStylePosition') || mapList.set('alertPositionStylePosition', [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}]).get('alertPositionStylePosition');\r\n        let alertMessageListPosition: LgAlertShowProps[][] = mapList.get('alertMessageListPosition') || mapList.set('alertMessageListPosition', [[], [], [], [], [], [], [], [], [], []]).get('alertMessageListPosition');\r\n        let containerClassName: string[] = mapList.get('containerClassName') || mapList.set('containerClassName', ['', '', '', '', '', '', '', '', '', '']).get('containerClassName');\r\n        let containerStyle: React.CSSProperties[] = mapList.get('containerStyle') || mapList.set('containerStyle', [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}]).get('containerStyle');\r\n        let closeTimeoutMap: NodeJS.Timeout[] = timeoutMap.get('closeTimeoutMap') || timeoutMap.set('closeTimeoutMap', []).get('closeTimeoutMap');\r\n        let positionIndex: number = 0;// 弹窗的位置\r\n        let showIdNumber: number = 0;// 弹窗的位置上的第几条数据\r\n        let tipItemOption: LgAlertShowProps = e as LgAlertShowProps;\r\n        // 设置对象的默认值\r\n        let initOptions: LgAlertShowProps = { tipType: \"info\", isShow: true, duration: 3000, isShowIcon: true, content: 'lgAlert~', tipMouldType: undefined, position: { xAxis: '50%', yAxis: 32, showDirection: 'center', xOffset: '-50%' }, tipSize: 'small', containerClassName: '', description: '' };\r\n        tipItemOption = Object.assign(initOptions, tipItemOption);\r\n        let returnOptionsIndex: string = (showIdNumber + '-' + positionIndex).toString();\r\n        // 关闭所有的\r\n        if (e?.tipType == 'closeAll') {\r\n            lgAlert.closeAll();\r\n            closeTimeoutMap.forEach((o, i) => { clearTimeout(o); })\r\n            mapList.set('closeTimeoutMap', [])\r\n            alertMessageListPosition = [[], [], [], [], [], [], [], [], [], []]\r\n            globalState({ alertMessageListPosition })\r\n            return { index: null as any, options: null as any };\r\n        }\r\n\r\n        if (showIdIndex) {\r\n            // 去修改指定下标上lgAlert的属性值\r\n            clearTimeout(timeoutMap.get(showIdIndex));\r\n            let positionIndexClose: number = parseInt(showIdIndex.split('-')[1]);// 关闭弹窗的位置\r\n            let showIdNumberClose: number = parseInt(showIdIndex.split('-')[0]);// 关闭弹窗的位置上的第几条数据\r\n            let replaceIndex: number | null = null;\r\n            if (alertMessageListPosition[positionIndexClose] && alertMessageListPosition[positionIndexClose].length) {\r\n                alertMessageListPosition[positionIndexClose].forEach((o, i) => {\r\n                    if (o.showIdNumber == showIdNumberClose) { tipItemOption = Object.assign(initOptions, tipItemOption); o = Object.assign(o, tipItemOption); tipItemOption = o; replaceIndex = i; }\r\n                })\r\n            };\r\n            globalState({ alertMessageListPosition }, () => {\r\n                // 定时销毁刚刚修改的lgAlert\r\n                if (tipItemOption?.duration == 0) return;\r\n                let timeOutIndex = setTimeout(() => {\r\n                    let spliceIndexClose = null;\r\n                    alertMessageListPosition[positionIndexClose] = alertMessageListPosition[positionIndexClose] || []\r\n                    if (alertMessageListPosition[positionIndexClose].length) {\r\n                        alertMessageListPosition[positionIndexClose].forEach((o, i) => {\r\n                            let item: LgAlertShowProps = o; if (item.showIdNumber == showIdNumberClose && item.duration != 0) { spliceIndexClose = i; }\r\n                        })\r\n                    }\r\n                    if (spliceIndexClose == null) { return }\r\n                    else if (alertMessageListPosition[positionIndexClose]) {\r\n                        alertMessageListPosition[positionIndexClose]?.splice(spliceIndexClose, 1)\r\n                    };\r\n                    globalState({ alertMessageListPosition }, () => {\r\n                        mapList.set('alertMessagesListPosition', alertMessageListPosition)\r\n                    })\r\n\r\n                }, tipItemOption.duration);\r\n                timeoutMap.set('afterReplace' + returnOptionsIndex, timeOutIndex)\r\n            });\r\n        } else {\r\n            // 创建一个lgAlert\r\n            tipItemOption.showIdName = 'lg_alert_number';\r\n            showIdNumber = parseInt((++lgAlert.showIdNumber).toString());\r\n            tipItemOption.showIdNumber = showIdNumber;\r\n            let alertPositionOptions = initContainerPosition(tipItemOption.position, ++zIndexNumber);\r\n            positionIndex = alertPositionOptions.positionType;\r\n            tipItemOption.positionIndex = positionIndex\r\n            if (tipItemOption.isShow) {\r\n                (alertMessageListPosition[positionIndex] as LgAlertShowProps[]).push(tipItemOption);\r\n                alertMessageListPosition = alertMessageListPosition as LgAlertShowProps[][];\r\n                alertPositionStylePosition[positionIndex] = alertPositionOptions.style;\r\n            }\r\n            if (initTipType(tipItemOption.tipType, tipItemOption.tipMouldType) == 4) {\r\n                tipItemOption.duration = 0;\r\n            }\r\n            if (tipItemOption.tipMouldType == \"A\" && tipItemOption.tipSize == 'mini') {\r\n                tipItemOption.duration = 3000;\r\n            }\r\n            let positionIndexPosition: number = parseInt(positionIndex as any)\r\n            containerClassName[positionIndexPosition] = tipItemOption.containerClassName as string;\r\n            containerStyle[positionIndexPosition] = tipItemOption.containerStyle as React.CSSProperties;\r\n            returnOptionsIndex = showIdNumber + '-' + alertPositionOptions.positionType\r\n            globalState({ alertMessageListPosition, alertPositionStylePosition, containerClassName, containerStyle }, () => {\r\n                // 定时销毁刚刚创建的lgAlert\r\n                if (tipItemOption?.duration == 0) return;\r\n                let timeoutId = setTimeout(() => {\r\n                    timeoutMap.delete(returnOptionsIndex)\r\n                    let spliceIndex = null;\r\n                    if (alertMessageListPosition[positionIndex].length) {\r\n                        alertMessageListPosition[positionIndex].forEach((o, i) => {\r\n                            let item: LgAlertShowProps = o; if (item.showIdNumber == showIdNumber && item.duration != 0) { spliceIndex = i }\r\n                        })\r\n                    }\r\n                    if (spliceIndex == null) return;\r\n                    alertMessageListPosition[positionIndex].splice(spliceIndex, 1);\r\n                    console.log(alertMessageListPosition)\r\n                    globalState({ alertMessageListPosition }, () => {\r\n                        mapList.set('alertMessageListPosition', alertMessageListPosition);\r\n                    })\r\n                }, tipItemOption?.duration);\r\n                timeoutMap.set(returnOptionsIndex, timeoutId);\r\n                closeTimeoutMap.push(timeoutId);\r\n            })\r\n        };\r\n\r\n        if (showIdIndex) { returnOptionsIndex = showIdIndex };\r\n        let option: { index: string, options: LgAlertShowProps } = { index: returnOptionsIndex, options: tipItemOption };\r\n        return option;\r\n    },\r\n    /**\r\n     * @description  : 关闭下标指定的的lgAlert\r\n     * @param         {string} showIdIndex 指定lgAlert的下标\r\n     * @return        {*}\r\n     */\r\n    close: (showIdIndex: string) => {\r\n        let positionIndexClose: number = parseInt(showIdIndex.split('-')[1]);// 关闭弹窗的位置\r\n        let showIdNumberClose: number = parseInt(showIdIndex.split('-')[0]);// 关闭弹窗的位置上的第几条数据\r\n        let alertMessageListPosition: LgAlertShowProps[][] = mapList.get('alertMessageListPosition') || mapList.set('alertMessageListPosition', [[], [], [], [], [], [], [], [], [], []]).get('alertMessageListPosition');\r\n        let replaceIndex: number | null = null;\r\n        if (alertMessageListPosition[positionIndexClose] && alertMessageListPosition[positionIndexClose].length) {\r\n            alertMessageListPosition[positionIndexClose].forEach((o, i) => { if (o.showIdNumber == showIdNumberClose) { replaceIndex = i; } })\r\n        };\r\n        if (replaceIndex != null) {\r\n            alertMessageListPosition[positionIndexClose].splice(replaceIndex, 1)\r\n        };\r\n        globalState({ alertMessageListPosition })\r\n    },\r\n    /**\r\n     * @description  : 关闭所有的lgAlert\r\n     * @param         { type * } \r\n     * @return        { type * } \r\n     */\r\n    closeAll: () => {\r\n        let alertMessageListPosition: LgAlertShowProps[][] = [[], [], [], [], [], [], [], [], []];\r\n        let alertPositionStylePosition: React.CSSProperties[] = [];\r\n        let containerClassName: string[] = [];\r\n        let containerStyle: React.CSSProperties[] = []\r\n        timeoutMap.set('closeTimeoutMap', [])\r\n        globalState({ alertMessageListPosition, alertPositionStylePosition, containerClassName, containerStyle }, () => {\r\n            mapList.delete('alertMessageListPosition')\r\n            mapList.delete('alertPositionStylePosition')\r\n        })\r\n    },\r\n}\r\n/**\r\n * @summary 所有弹窗的的容器\r\n */\r\nexport class LgAlertContainer extends Component<LgAlertContainerProps, LgAlertContainerState> {\r\n\r\n    constructor(props: LgAlertContainerProps | Readonly<LgAlertContainerProps>) {\r\n        super(props);\r\n        this.state = { alertMessageListPosition: [], alertPositionStylePosition: [], containerClassName: [], containerStyle: [], }\r\n        globalState = this.setState.bind(this)\r\n        this.initAlertElement = this.initAlertElement.bind(this)\r\n        this.closeTip = this.closeTip.bind(this)\r\n    }\r\n    /**\r\n     * @description lgAlert中的显示的层级\r\n     * @param {*} positionZIndex\r\n     */\r\n    positionZIndex: number = 19000;\r\n    /**\r\n     * @description: 判断使用何种lgAlert显示到网页 \\ default | A | E\r\n     * @param {number} type\r\n     * @param {LgAlertShowProps} alertMessageList\r\n     * @return {*}\r\n     */\r\n    initAlertElement(alertMessageList: LgAlertShowProps[]) {\r\n        return alertMessageList.map((o, i) => {\r\n            o.closeTip = this.closeTip\r\n            if (o.tipMouldType == 'E') {\r\n                let alertParams = initAlertParams(o);\r\n                return (<div className={'elementUi_tip_box ' + alertParams.className} style={alertParams.style} key={i}><Alert {...alertParams} title={alertParams.title as string} /></div>)\r\n            } else if (o.tipMouldType == 'A') {\r\n                let alertParams = initAlertParamsA(o);\r\n                return <LgAlertMouldA {...alertParams} key={i} />\r\n            } else {\r\n                return (<LgAlertMouldDefault {...o} key={i} />)\r\n            }\r\n        })\r\n    }\r\n    /**\r\n     * @description: 关闭显示在网页上的lgAlert\r\n     * @param {number} type \\ 1 关闭单个lgAlert 0 关闭所有的lgAlert \r\n     * @param {string} tipIndex \\ 关闭lgAlert中的标识的下标\r\n     * @return {*}\r\n     */\r\n    closeTip(type: number = 1, tipIndex?: string) {\r\n        let alertMessageListPosition: LgAlertShowProps[][] = mapList.get('alertMessageListPosition') || mapList.set('alertMessageListPosition', [[], [], [], [], [], [], [], [], [], []]).get('alertMessageListPosition');\r\n        if (type == 1 && !tipIndex) { return }\r\n        if (type) {\r\n            let positionIndexClose: number = parseInt((tipIndex as string).split('-')[1]);// 关闭弹窗的位置\r\n            let showIdNumberClose: number = parseInt((tipIndex as string).split('-')[0]);// 关闭弹窗的位置上的第几条数据\r\n            let replaceIndex: number | null = null;\r\n            if (alertMessageListPosition[positionIndexClose] && alertMessageListPosition[positionIndexClose].length) {\r\n                alertMessageListPosition[positionIndexClose].forEach((o, i) => {\r\n                    if (o.showIdNumber == showIdNumberClose) {\r\n                        replaceIndex = i\r\n                    }\r\n                })\r\n            };\r\n            if (replaceIndex != null) {\r\n                alertMessageListPosition[positionIndexClose].splice(replaceIndex, 1)\r\n            }\r\n            this.setState({ alertMessageListPosition })\r\n        } else {\r\n            let alertMessageListPosition: LgAlertShowProps[][] = [[], [], [], [], [], [], [], [], []];\r\n            let alertPositionStylePosition: React.CSSProperties[] = []\r\n            this.setState({ alertMessageListPosition, alertPositionStylePosition }, () => {\r\n                mapList.delete('alertMessageListPosition')\r\n                mapList.delete('alertPositionStylePosition')\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        const { state, props } = this;\r\n        return (\r\n            <>\r\n                {this.state.alertMessageListPosition.map((o, i) => {\r\n                    // lgAlerts的style和props\r\n                    let stylePosition: React.CSSProperties = Object.assign(this.state.alertPositionStylePosition[i] || {}, this.state.containerStyle[i] || {})\r\n                    return (\r\n                        <div style={{ display: o.length ? 'block' : 'none' }} data-index={i} key={i} className={'lg_alert_container_box_outside'}>\r\n                            <div id='' className={'lg_alert_container_box lg_alert_container_box_right_bottom ' + ((state.containerClassName as string[])[i] as string)} style={stylePosition}>\r\n                                {this.initAlertElement(o)}\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n/**\r\n * @msg 默认使用的提示\r\n */\r\nexport class LgAlertMouldDefault extends Component<LgAlertProps, LgAlertState> {\r\n    constructor(props: LgAlertProps | Readonly<LgAlertProps>) {\r\n        super(props);\r\n        this.state = {};\r\n        this.closeTip = this.closeTip.bind(this);\r\n    }\r\n    componentWillReceiveProps(nextProps: any) {\r\n        if (nextProps == this.props) return;\r\n    }\r\n    /**\r\n     * @description  : \r\n     * @param         { type React}  e\r\n     * @param         { type *}  MouseEvent\r\n     * @return        { type *} \r\n     */\r\n    closeTip(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\r\n        let parentNode = e.currentTarget.parentNode as HTMLElement;\r\n        let index = parseInt(parentNode.getAttribute('data-index') as string);\r\n        let positionIndex = parseInt(parentNode.getAttribute('data-position-index') as string);\r\n        let spliceIndex = (index + '-' + positionIndex)\r\n        this.props.closeTip && this.props.closeTip(1, spliceIndex);\r\n        this.props.onClose && this.props.onClose();\r\n    }\r\n    render() {\r\n        const { state, props } = this;\r\n        let hasHasDescriptionClassName = props.description ? ' lg_alert_body_close_icon lg_alert_body_close_box lg_alert_body_close_box_description ' : ' lg_alert_body_close_icon lg_alert_body_close_box  '\r\n        let iconFontSizeClassName = props.description ? ' tip_icon_type_item_has_description ' : '  '\r\n\r\n        return (\r\n            <div className={'lg_alert_body ' + props.className} style={props.style} id={this.props.showIdName as string + this.props.showIdNumber} data-index={props.showIdNumber} data-position-index={props.positionIndex} >\r\n                <div className='lg_alert_body_box'>\r\n                    <div className={'lg_alert_body_icon tip_icon_type_item tip_icon_type' + initTipType(props?.tipType, props?.tipMouldType) + iconFontSizeClassName} style={{ display: props.isShowIcon ? 'block' : 'none' }}><div className='lg_alert_body_icon_small'></div>{props.customIcon}</div>\r\n                    <div className='lg_alert_body_text_container'>\r\n                        <div className={props.description ? 'lg_alert_body_title' : 'lg_alert_body_title lg_alert_body_title_default'}>{props?.content}</div>\r\n                        <div className={props.description ? 'lg_alert_body_description lg_alert_body_description_show' : 'lg_alert_body_description'} style={{ display: props.description ? 'flex' : \"none\" }}>\r\n                            {props.description}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='lg_alert_body_close_container_box ' style={{ display: props.isShowCloseBtn ? 'flex' : 'none' }} onClick={(e) => { this.closeTip(e) }}>\r\n                    {props.customClose}\r\n                    <div className={hasHasDescriptionClassName} style={{ display: props.customClose ? 'none' : 'block' }}></div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\n// A款弹窗样式的提示\r\nexport class LgAlertMouldA extends Component<LgAlertProps, LgAlertState> {\r\n    constructor(props: LgAlertProps | Readonly<LgAlertProps>) {\r\n        super(props);\r\n        this.state = {};\r\n        this.closeTip = this.closeTip.bind(this);\r\n        this.confirmTip = this.confirmTip.bind(this);\r\n    }\r\n    componentWillReceiveProps(nextProps: any) { if (nextProps == this.props) return; }\r\n    // 点击关闭按钮，icon关闭按钮\r\n    closeTip(e: React.MouseEvent<HTMLDivElement, MouseEvent>, type: number = 1, isRunFun: boolean = true) {\r\n        let parentNode = e.currentTarget.parentNode as HTMLElement;\r\n        if (type == 2) { parentNode = (e.currentTarget.parentNode as HTMLElement).parentNode as HTMLElement; }\r\n        if (type == 1) { this.props.iconCloseAlert && this.props.iconCloseAlert(); }\r\n        let index = parseInt(parentNode.getAttribute('data-index') as string);\r\n        let positionIndex = parseInt(parentNode.getAttribute('data-position-index') as string);\r\n        let spliceIndex = (index + '-' + positionIndex)\r\n        if (isRunFun) {\r\n            this.props.onCancel && this.props.onCancel(1, spliceIndex);\r\n            this.props.closeTip && this.props.closeTip(1, spliceIndex)\r\n            this.props.onClose && this.props.onClose();\r\n        }\r\n    }\r\n    // 点击确认按钮\r\n    confirmTip(e: React.MouseEvent<HTMLDivElement, MouseEvent>) { this.props.onConfirm && this.props.onConfirm(); this.closeTip(e, 2); }\r\n    render() {\r\n        const { state, props } = this;\r\n        let rowRevers = props.reverse ? 'lg_alert_body_selection lg_alert_body_selection_reverse' : \"lg_alert_body_selection\";\r\n        let { miniClass, layerContainerClass, showDom } = initLgAlertTypeAClass(props.tipSize as string);\r\n        console.log(props);\r\n        return (\r\n            <div className={'lg_alert_body lg_alert_body_A ' + layerContainerClass + props.className} style={props.style} id={this.props.showIdName as string + this.props.showIdNumber} data-index={props.showIdNumber} data-position-index={props.positionIndex} >\r\n                <div className={'lg_alert_body_box ' + miniClass}>\r\n\r\n                    <div className={props.tipSize == 'big' ? 'lg_alert_body_A_big_body' : props.tipSize == 'mini' ? 'lg_alert_body_A_mini_body' : 'lg_alert_body_A_small_body'}>\r\n                        <div className={'lg_alert_body_icon tip_icon_type_item_none tip_icon_type_A' + initTipType(props?.tipType, props?.tipMouldType)} style={{ display: props.isShowIcon ? 'block' : 'none' }}>\r\n                            <div className='lg_alert_body_icon_small'></div>\r\n                            {props.customIcon}\r\n                        </div>\r\n                    </div>\r\n                    <div className='lg_alert_body_title'>{props?.content}</div>\r\n                    <div className={'lg_alert_body_description'} style={{ display: props?.description && showDom[0] ? 'block' : 'none' }}>{props?.description}</div>\r\n                </div>\r\n                <div className={rowRevers} style={{ display: showDom[1] ? 'flex' : 'none' }}>\r\n                    <div className='lg_alert_body_selection_box lg_alert_body_selection_confirmText' onClick={(e) => { this.confirmTip(e) }}>{props.confirmText || '确定'}</div>\r\n                    <div className='lg_alert_body_selection_box lg_alert_body_selection_closeText' onClick={(e) => { this.closeTip(e, 2) }}>{props.closeText || '再想想'}</div>\r\n                </div>\r\n                <div className='lg_alert_body_close_container_box' style={{ display: props.isShowCloseBtn && showDom[0] || props.isShowCloseBtn && showDom[1] ? 'block' : 'none' }} onClick={(e) => { this.closeTip(e) }}>\r\n                    {props.customClose}\r\n                    <div className='lg_alert_body_close_icon lg_alert_body_close_box' style={{ display: props.customClose ? 'none' : 'block' }}></div>\r\n                </div>\r\n            </div >\r\n        )\r\n    };\r\n};\r\n\r\n// =========================================================================================================================================\r\n// =========================================================================================================================================\r\n// ===========================================================生成lgAlert的Dom节点===========================================================\r\n// =========================================================================================================================================\r\n// =========================================================================================================================================\r\n\r\n\r\nlet instance: LgAlertContainer | null;\r\n// 创建弹窗的根节点\r\nlet popLayerCreateIndex = 0;\r\n/**\r\n * @description  : 创建传送门的根节点\r\n * @param         { type *} popLayerCreateIndex 创建的根节点的次数\r\n * @return        { type *} \r\n */\r\n; (() => { if (popLayerCreateIndex) return; let alert = document.getElementById('Lg_alert_root'); let root = document.getElementById('root'); if (alert) { document.removeChild(alert) }; let popLayerDom = document.createElement('div'); popLayerDom.setAttribute('id', 'Lg_alert_root'); popLayerDom.style.position = 'absolute'; root?.appendChild(popLayerDom); ++popLayerCreateIndex; ReactDOM.render(<LgAlertContainer ref={e => instance = e} />, document.getElementById('Lg_alert_root')) })();\r\n\r\n\r\nlet LgPopLayerCreatCount: number = 0;\r\n// class LgPopLayer {\r\n//     private lgAlertInstance!: LgAlertContainer | null;\r\n//     private popLayerCreateIndex: number\r\n//     constructor(_options?: any) {\r\n//         this.popLayerCreateIndex = popLayerCreateIndex\r\n//         this.initRootEle()\r\n//     }\r\n//     initRootEle() {\r\n//         this.popLayerCreateIndex = ++LgPopLayerCreatCount;\r\n//         let alert = document.getElementById('Lg_alert_root' + this.popLayerCreateIndex);\r\n//         let root = document.getElementById('root');\r\n//         if (alert) { document.removeChild(alert) };\r\n//         let popLayerDom = document.createElement('div');\r\n//         popLayerDom.setAttribute('id', 'Lg_alert_root' + this.popLayerCreateIndex);\r\n//         popLayerDom.style.position = 'absolute';\r\n//         root?.appendChild(popLayerDom);\r\n//         ReactDOM.render(<LgAlertContainer ref={e => this.lgAlertInstance = e} />, document.getElementById('Lg_alert_root' + this.popLayerCreateIndex));\r\n//     }\r\n\r\n//     show(e?: LgAlertShowProps, showIdIndex?: string) {\r\n//         let alertPositionStylePosition: React.CSSProperties[] = mapList.get('alertPositionStylePosition') || mapList.set('alertPositionStylePosition', [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}]).get('alertPositionStylePosition');\r\n//         let alertMessageListPosition: LgAlertShowProps[][] = mapList.get('alertMessageListPosition') || mapList.set('alertMessageListPosition', [[], [], [], [], [], [], [], [], [], []]).get('alertMessageListPosition');\r\n//         let containerClassName: string[] = mapList.get('containerClassName') || mapList.set('containerClassName', ['', '', '', '', '', '', '', '', '', '']).get('containerClassName');\r\n//         let containerStyle: React.CSSProperties[] = mapList.get('containerStyle') || mapList.set('containerStyle', [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}]).get('containerStyle');\r\n//         let closeTimeoutMap: NodeJS.Timeout[] = timeoutMap.get('closeTimeoutMap') || timeoutMap.set('closeTimeoutMap', []).get('closeTimeoutMap');\r\n//         let positionIndex: number = 0;// 弹窗的位置\r\n//         let showIdNumber: number = 0;// 弹窗的位置上的第几条数据\r\n//         let tipItemOption: LgAlertShowProps = e as LgAlertShowProps;\r\n//         // 设置对象的默认值\r\n//         let initOptions: LgAlertShowProps = { tipType: \"info\", isShow: true, duration: 3000, isShowIcon: true, content: 'lgAlert~', tipMouldType: undefined, position: { xAxis: '50%', yAxis: 32, showDirection: 'center', xOffset: '-50%' }, tipSize: 'small', containerClassName: '', description: '' };\r\n//         tipItemOption = Object.assign(initOptions, tipItemOption);\r\n//         let returnOptionsIndex: string = (showIdNumber + '-' + positionIndex).toString();\r\n//         // 关闭所有的\r\n//         if (e?.tipType == 'closeAll') {\r\n//             lgAlert.closeAll();\r\n//             closeTimeoutMap.forEach((o, i) => { clearTimeout(o); })\r\n//             mapList.set('closeTimeoutMap', [])\r\n//             alertMessageListPosition = [[], [], [], [], [], [], [], [], [], []]\r\n//             this.lgAlertInstance?.setState({ alertMessageListPosition })\r\n//             return { index: null as any, options: null as any };\r\n//         }\r\n\r\n//         if (showIdIndex) {\r\n//             // 去修改指定下标上lgAlert的属性值\r\n//             clearTimeout(timeoutMap.get(showIdIndex));\r\n//             let positionIndexClose: number = parseInt(showIdIndex.split('-')[1]);// 关闭弹窗的位置\r\n//             let showIdNumberClose: number = parseInt(showIdIndex.split('-')[0]);// 关闭弹窗的位置上的第几条数据\r\n//             let replaceIndex: number | null = null;\r\n//             if (alertMessageListPosition[positionIndexClose] && alertMessageListPosition[positionIndexClose].length) {\r\n//                 alertMessageListPosition[positionIndexClose].forEach((o, i) => {\r\n//                     if (o.showIdNumber == showIdNumberClose) { tipItemOption = Object.assign(initOptions, tipItemOption); o = Object.assign(o, tipItemOption); tipItemOption = o; replaceIndex = i; }\r\n//                 })\r\n//             };\r\n//             this.lgAlertInstance?.setState({ alertMessageListPosition }, () => {\r\n//                 if (tipItemOption?.duration == 0) return;\r\n//                 let timeOutIndex = setTimeout(() => {\r\n//                     let spliceIndexClose = null;\r\n//                     alertMessageListPosition[positionIndexClose] = alertMessageListPosition[positionIndexClose] || []\r\n//                     if (alertMessageListPosition[positionIndexClose].length) {\r\n//                         alertMessageListPosition[positionIndexClose].forEach((o, i) => {\r\n//                             let item: LgAlertShowProps = o; if (item.showIdNumber == showIdNumberClose && item.duration != 0) { spliceIndexClose = i; }\r\n//                         })\r\n//                     }\r\n//                     if (spliceIndexClose == null) { return }\r\n//                     else if (alertMessageListPosition[positionIndexClose]) {\r\n//                         alertMessageListPosition[positionIndexClose]?.splice(spliceIndexClose, 1)\r\n//                     };\r\n//                     this.lgAlertInstance?.setState({ alertMessageListPosition }, () => {\r\n//                         mapList.set('alertMessagesListPosition', alertMessageListPosition)\r\n//                     })\r\n\r\n//                 }, tipItemOption.duration);\r\n//                 timeoutMap.set('afterReplace' + returnOptionsIndex, timeOutIndex)\r\n//             });\r\n//         } else {\r\n//             // 创建一个lgAlert\r\n//             tipItemOption.showIdName = 'lg_alert_number';\r\n//             showIdNumber = parseInt((++lgAlert.showIdNumber).toString());\r\n//             tipItemOption.showIdNumber = showIdNumber;\r\n//             let alertPositionOptions = initContainerPosition(tipItemOption.position, ++zIndexNumber);\r\n//             positionIndex = alertPositionOptions.positionType;\r\n//             tipItemOption.positionIndex = positionIndex\r\n//             if (tipItemOption.isShow) {\r\n//                 (alertMessageListPosition[positionIndex] as LgAlertShowProps[]).push(tipItemOption);\r\n//                 alertMessageListPosition = alertMessageListPosition as LgAlertShowProps[][];\r\n//                 alertPositionStylePosition[positionIndex] = alertPositionOptions.style;\r\n//             }\r\n//             if (initTipType(tipItemOption.tipType, tipItemOption.tipMouldType) == 4) {\r\n//                 tipItemOption.duration = 0;\r\n//             }\r\n//             let positionIndexPosition: number = parseInt(positionIndex as any)\r\n//             containerClassName[positionIndexPosition] = tipItemOption.containerClassName as string;\r\n//             containerStyle[positionIndexPosition] = tipItemOption.containerStyle as React.CSSProperties;\r\n//             returnOptionsIndex = showIdNumber + '-' + alertPositionOptions.positionType\r\n//             this.lgAlertInstance?.setState({ alertMessageListPosition, alertPositionStylePosition, containerClassName, containerStyle }, () => {\r\n//                 if (tipItemOption?.duration == 0) return;\r\n//                 let timeoutId = setTimeout(() => {\r\n//                     timeoutMap.delete(returnOptionsIndex)\r\n//                     let spliceIndex = null;\r\n//                     if (alertMessageListPosition[positionIndex].length) {\r\n//                         alertMessageListPosition[positionIndex].forEach((o, i) => {\r\n//                             let item: LgAlertShowProps = o; if (item.showIdNumber == showIdNumber && item.duration != 0) { spliceIndex = i }\r\n//                         })\r\n//                     }\r\n//                     if (spliceIndex == null) return;\r\n//                     alertMessageListPosition[positionIndex].splice(spliceIndex, 1);\r\n//                     console.log(alertMessageListPosition)\r\n//                     this.lgAlertInstance?.setState({ alertMessageListPosition }, () => {\r\n//                         mapList.set('alertMessageListPosition', alertMessageListPosition);\r\n//                     })\r\n//                 }, tipItemOption?.duration);\r\n//                 timeoutMap.set(returnOptionsIndex, timeoutId);\r\n//                 closeTimeoutMap.push(timeoutId);\r\n//             })\r\n//         };\r\n\r\n//         if (showIdIndex) { returnOptionsIndex = showIdIndex };\r\n//         let option: { index: string, options: LgAlertShowProps } = { index: returnOptionsIndex, options: tipItemOption };\r\n//         return option;\r\n//     }\r\n// }\r\n// let superJ = new LgPopLayer();\r\n// let superJ1 = new LgPopLayer();\r\n// let superJ2 = new LgPopLayer();\r\n// console.log(superJ.show({\r\n//     duration: 0\r\n// }))\r\n// console.log(superJ1.show({\r\n//     duration: 0, content: 'superJ1~~~', position: { xAxis: 'center', yAxis: 'center', }\r\n// }))\r\n","import { lgAlert } from '@/components/alert';\r\nimport React, { Component } from 'react'\r\nimport './index.scss'\r\nimport { CodeView } from '@/components/CodeView'\r\nimport { DemoView } from '@/components/demoView';\r\nimport { DemoPage } from '../demoPage';\r\ninterface AlertState {\r\n    num: number,\r\n    successLoading: boolean\r\n}\r\n\r\nexport default class alert extends Component<{}, AlertState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = { num: 0, successLoading: false }\r\n        this.alertMsg = this.alertMsg.bind(this)\r\n        this.alertMsg2 = this.alertMsg2.bind(this)\r\n        this.alertMsg3 = this.alertMsg3.bind(this)\r\n        this.alertMsg4 = this.alertMsg4.bind(this)\r\n        this.alertMsg5 = this.alertMsg5.bind(this)\r\n        this.alertMsg6 = this.alertMsg6.bind(this)\r\n        this.alertMsg7 = this.alertMsg7.bind(this)\r\n        this.alertMsg8 = this.alertMsg8.bind(this)\r\n        this.alertMsg9 = this.alertMsg9.bind(this)\r\n        this.alertMsgCustom = this.alertMsgCustom.bind(this)\r\n    }\r\n    alertMsg() {\r\n        let alert = lgAlert.show({ content: \"用户操作的基本提示\", tipType: 'info', position: { xAxis: 'left', yAxis: 'top' } });\r\n        // setTimeout(() => {\r\n        //     lgAlert.show({ tipType: 'success', content: \"加载成功\", duration: 1000 * 2 }, alert.index);\r\n        // }, 1000 * 3);\r\n    }\r\n    alertMsg2() {\r\n        let alert = lgAlert.show({ content: \"用户操作的询问提示\", tipType: 'question', position: { xAxis: 'center', yAxis: 'top' } });\r\n        // setTimeout(() => {\r\n        //     lgAlert.show({ tipType: 'question', content: \"加载成功\", }, alert.index);\r\n        // }, 1000 * 3);\r\n    }\r\n    alertMsg3() {\r\n        let alert = lgAlert.show({ content: \"用户操作的警告提示\", tipType: 'warning', position: { xAxis: 'right', yAxis: 'top' } });\r\n        // setTimeout(() => {\r\n        //     lgAlert.show({ tipType: 'warning', content: \"加载成功\", }, alert.index);\r\n        // }, 1000 * 3)\r\n    }\r\n    alertMsg4() {\r\n        let alert = lgAlert.show({ content: \"用户操作的错误提示\", tipType: 'error', position: { xAxis: 'left', yAxis: 'center' } });\r\n        // setTimeout(() => {\r\n        //     lgAlert.show({ tipType: 'error', content: \"加载成功\",}, alert.index);\r\n        // }, 1000 * 3)\r\n    }\r\n    alertMsg5() {\r\n        let alert = lgAlert.show({ content: \"用户操作的成功提示\", tipType: 'success', position: { xAxis: 'center', yAxis: 'center' } });\r\n        // setTimeout(() => {\r\n        //     lgAlert.show({ tipType: 'success', content: \"加载成功\", duration: 0 }, alert.index);\r\n        // }, 1000 * 3)\r\n    }\r\n    alertMsg6() {\r\n        let alert = lgAlert.show({ content: '用户操作的基本提示', tipType: 'info', position: { xAxis: 'right', yAxis: 'center' }, description: '给时光以生命，给岁月以文明。' });\r\n        setTimeout(() => {\r\n            lgAlert.show({ tipType: 'success', content: \"加载成功\", description: \"You should be self-esteem, do not be arrogant\" }, alert.index);\r\n        }, 1000 * 3)\r\n    }\r\n    alertMsg7() {\r\n        let alert = lgAlert.show({ content: '数据加载中', tipType: 'loading', position: { xAxis: 'left', yAxis: 'bottom' }, });\r\n        setTimeout(() => {\r\n            lgAlert.show({ tipType: 'success', content: \"加载成功\", }, alert.index);\r\n        }, 1000 * 3)\r\n    }\r\n    alertMsg8() {\r\n        let alert = lgAlert.show({ content: '数据加载中', tipType: 'loading', position: { xAxis: 'center', yAxis: 'bottom' } });\r\n        setTimeout(() => {\r\n            lgAlert.show({ tipType: 'warning', content: \"数据为空\", }, alert.index);\r\n        }, 1000 * 3)\r\n    }\r\n    alertMsg9() {\r\n        let alert = lgAlert.show({ content: '数据加载中', tipType: 'loading', position: { xAxis: 'right', yAxis: 'bottom' } });\r\n        setTimeout(() => {\r\n            lgAlert.show({ tipType: 'error', content: \"数据加载失败\", }, alert.index);\r\n        }, 1000 * 3)\r\n    }\r\n    alertMsgCustom() {\r\n        let alert = lgAlert.show({ content: \"数据加载中(自定义位置)\", tipType: 'loading', position: { xOffset: '-50%', xAxis: '50%', yAxis: 32, showDirection: 'center', showAlign: 'top' } });\r\n        setTimeout(() => {\r\n            lgAlert.show({ tipType: 'error', content: \"加载失败(自定义位置)\", }, alert.index);\r\n        }, 1000 * 3)\r\n    }\r\n    clearAlertMsgCustom() {\r\n        lgAlert.show({ tipType: 'closeAll' })\r\n    }\r\n\r\n\r\n\r\n    alertSuccess() {\r\n        let alert = lgAlert.show({ content: '用户操作的成功提示', tipType: 'success', tipMouldType: 'E', closable: true, description: \"这是一个操作成功的描述\" });\r\n    }\r\n    alertWarning() {\r\n        let alert = lgAlert.show({ content: '用户操作的警告提示', tipType: 'warning', tipMouldType: 'E', isShowCloseBtn: true, description: \"You should be self-esteem, do not be arrogant\" });\r\n    }\r\n    alertInfo() {\r\n        let alert = lgAlert.show({ content: '用户操作的基本提示', tipType: 'info', tipMouldType: 'E', });\r\n    }\r\n    alertError() {\r\n        let alert = lgAlert.show({ content: '用于表示操作然后操作失败的', tipType: 'error', tipMouldType: 'E', });\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    alertASuccess() {\r\n        let alert = lgAlert.show({ content: \"用于表示操作然后操作成功的\", tipType: 'success', tipSize: 'big', tipMouldType: 'A', description: `这是一个操作成功的描述` });\r\n    }\r\n    alertAWarning() {\r\n        let alert = lgAlert.show({ content: '用于表示操作引起严重的后果', tipType: 'warning', tipSize: 'big', tipMouldType: 'A', description: `这是一个后果信息描述` });\r\n    }\r\n    alertAInfo() {\r\n        let alert = lgAlert.show({ content: '用户表示普通操作信息提示', tipType: 'info', tipSize: 'big', description: \"这是一个普通提示描述\", reverse: true, tipMouldType: 'A', });\r\n    }\r\n    alertAError() {\r\n        let alert = lgAlert.show({ content: '用于表示操作然后操作失败的', tipType: 'error', tipMouldType: 'A', tipSize: 'big', description: `这是一个操作失败的原因` });\r\n    }\r\n    alertAQuestion() {\r\n        let alert = lgAlert.show({ duration: 0, content: '用于帮助用户操作的信息提示', isShowCloseBtn: true, tipType: 'question', tipMouldType: 'A', tipSize: 'big', description: `这是一个帮助提示描述` });\r\n    }\r\n    alertASuccess2() {\r\n        let alert = lgAlert.show({ content: '操作成功', tipType: 'success', tipSize: 'small', tipMouldType: 'A', });\r\n    }\r\n    alertAWarning2() {\r\n        let alert = lgAlert.show({ content: '该操作无法执行', tipType: 'warning', tipSize: 'small', tipMouldType: 'A', });\r\n    }\r\n    alertAInfo2() {\r\n        let alert = lgAlert.show({ content: '该操作无法执行', tipType: 'info', tipSize: 'small', description: \"You should be self-esteem, do not be arrogant\", reverse: true, tipMouldType: 'A', });\r\n\r\n    }\r\n    alertAError2() {\r\n        let alert = lgAlert.show({ content: '操作失败', tipType: 'error', tipMouldType: 'A', tipSize: 'small', description: `You should be self-esteem, do not be arrogant` });\r\n    }\r\n    alertAQuestion2() {\r\n        let alert = lgAlert.show({ duration: 0, content: '是否执行操作？ ', isShowCloseBtn: true, tipType: 'question', tipMouldType: 'A', tipSize: 'small', description: `You should be self-esteem, do not be arrogant` });\r\n    }\r\n    alertASuccess3() {\r\n        let alert = lgAlert.show({ content: '操作成功', tipType: 'success', tipSize: 'mini', tipMouldType: 'A', });\r\n    }\r\n    alertAWarning3() {\r\n        let alert = lgAlert.show({ content: '该操作无法执行', tipType: 'warning', tipSize: 'mini', tipMouldType: 'A', });\r\n    }\r\n    alertAInfo3() {\r\n        let alert = lgAlert.show({ content: '该操作无法执行', tipType: 'info', tipSize: 'mini', description: \"You should be self-esteem, do not be arrogant\", reverse: true, tipMouldType: 'A', });\r\n    }\r\n    alertAError3() {\r\n        let alert = lgAlert.show({ content: '操作失败', tipType: 'error', tipMouldType: 'A', tipSize: 'mini', description: `You should be self-esteem, do not be arrogant` });\r\n    }\r\n\r\n\r\n    componentDidMount() { }\r\n    render() {\r\n        return (\r\n            < >\r\n                <div className='components-show-box'>\r\n\r\n                    <DemoPage title=\"G004 提示层\" subtitle=\"\" className=\"lg-breadcrumb-demo-page\"\r\n                        importCode={`import { lgAlert } from '@/components/alert';`}\r\n                    >\r\n                        <DemoView title='默认-LgUI-Alert:弹窗位置与所有样式展示' className='props_container' code={`\r\nalertMsg() {let alert = lgAlert.show({ content: \"用户操作的基本提示\", tipType: 'info', position: { xAxis: 'left', yAxis: 'top' } });}\r\nalertMsg2() {let alert = lgAlert.show({ content: \"用户操作的询问提示\", tipType: 'question', position: { xAxis: 'center', yAxis: 'top' } });}\r\nalertMsg3() {let alert = lgAlert.show({ content: \"用户操作的警告提示\", tipType: 'warning', position: { xAxis: 'right', yAxis: 'top' } });}\r\nalertMsg4() {let alert = lgAlert.show({ content: \"用户操作的错误提示\", tipType: 'error', position: { xAxis: 'left', yAxis: 'center' } });}\r\nalertMsg5() {\r\n    let alert = lgAlert.show({ content: \"用户操作的成功提示\", tipType: 'success', position: { xAxis: 'center', yAxis: 'center' } });\r\n}\r\nalertMsg6() {\r\n    let alert = lgAlert.show({ content: '用户操作的基本提示', tipType: 'info', position: { xAxis: 'right', yAxis: 'center' }, description: '给时光以生命，给岁月以文明。' });\r\n    setTimeout(() => {\r\n        lgAlert.show({ tipType: 'success', content: \"加载成功\", description: \"You should be self-esteem, do not be arrogant\" }, alert.index);\r\n    }, 1000 * 3)\r\n}\r\nalertMsg7() {\r\n    let alert = lgAlert.show({ content: '数据加载中', tipType: 'loading', position: { xAxis: 'left', yAxis: 'bottom' }, });\r\n    setTimeout(() => {\r\n        lgAlert.show({ tipType: 'success', content: \"加载成功\", }, alert.index);\r\n    }, 1000 * 3)\r\n}\r\nalertMsg8() {\r\n    let alert = lgAlert.show({ content: '数据加载中', tipType: 'loading', position: { xAxis: 'center', yAxis: 'bottom' } });\r\n    setTimeout(() => {\r\n        lgAlert.show({ tipType: 'warning', content: \"数据为空\", }, alert.index);\r\n    }, 1000 * 3)\r\n}\r\nalertMsg9() {\r\n    let alert = lgAlert.show({ content: '数据加载中', tipType: 'loading', position: { xAxis: 'right', yAxis: 'bottom' } });\r\n    setTimeout(() => {\r\n        lgAlert.show({ tipType: 'error', content: \"数据加载失败\", }, alert.index);\r\n    }, 1000 * 3)\r\n}\r\nalertMsgCustom() {\r\n    let alert = lgAlert.show({ content: \"数据加载中(自定义位置)\", tipType: 'loading', position: { xOffset: '-50%', xAxis: '50%', yAxis: 32, showDirection: 'center', showAlign: 'top' } });\r\n    setTimeout(() => {\r\n        lgAlert.show({ tipType: 'error', content: \"加载失败(自定义位置)\", }, alert.index);\r\n    }, 1000 * 3)\r\n}\r\nclearAlertMsgCustom() {lgAlert.show({ tipType: 'closeAll' })}\r\n<div>\r\n    <div>\r\n        <input type=\"button\" value=\"左上\" onClick={this.alertMsg} className='comment_position alert_position_left_top' />\r\n        <input type=\"button\" value=\"中上\" onClick={this.alertMsg2} className='comment_position alert_position_left_top' />\r\n        <input type=\"button\" value=\"右上\" onClick={this.alertMsg3} className='comment_position alert_position_left_top' />\r\n        <input type=\"button\" value=\"中左\" onClick={this.alertMsg4} className='comment_position alert_position_left_top' />\r\n        <input type=\"button\" value=\"中中\" onClick={this.alertMsg5} className='comment_position alert_position_left_top' />\r\n        <input type=\"button\" value=\"中右\" onClick={this.alertMsg6} className='comment_position alert_position_left_top' />\r\n        <input type=\"button\" value=\"下左\" onClick={this.alertMsg7} className='comment_position alert_position_left_top' />\r\n        <input type=\"button\" value=\"下中\" onClick={this.alertMsg8} className='comment_position alert_position_left_top' />\r\n        <input type=\"button\" value=\"下右\" onClick={this.alertMsg9} className='comment_position alert_position_left_top' />\r\n    </div>\r\n    <div>\r\n        <input type=\"button\" value=\"自定义位置\" onClick={this.alertMsgCustom} className='comment_position alert_position_left_top' />\r\n    </div>\r\n    <div>\r\n        <input type=\"button\" value=\"清除所有的弹窗\" onClick={this.clearAlertMsgCustom} className='comment_position alert_position_left_top' />\r\n    </div>\r\n<div>\r\n                                        `}>\r\n                            <div>\r\n                                <input type=\"button\" value=\"左上\" onClick={this.alertMsg} className='comment_position alert_position_left_top' />\r\n                                <input type=\"button\" value=\"中上\" onClick={this.alertMsg2} className='comment_position alert_position_left_top' />\r\n                                <input type=\"button\" value=\"右上\" onClick={this.alertMsg3} className='comment_position alert_position_left_top' />\r\n                                <input type=\"button\" value=\"中左\" onClick={this.alertMsg4} className='comment_position alert_position_left_top' />\r\n                                <input type=\"button\" value=\"中中\" onClick={this.alertMsg5} className='comment_position alert_position_left_top' />\r\n                                <input type=\"button\" value=\"中右\" onClick={this.alertMsg6} className='comment_position alert_position_left_top' />\r\n                                <input type=\"button\" value=\"下左\" onClick={this.alertMsg7} className='comment_position alert_position_left_top' />\r\n                                <input type=\"button\" value=\"下中\" onClick={this.alertMsg8} className='comment_position alert_position_left_top' />\r\n                                <input type=\"button\" value=\"下右\" onClick={this.alertMsg9} className='comment_position alert_position_left_top' />\r\n                            </div>\r\n                            <div>\r\n                                <input type=\"button\" value=\"自定义位置\" onClick={this.alertMsgCustom} className='comment_position alert_position_left_top' />\r\n                            </div>\r\n                            <div>\r\n                                <input type=\"button\" value=\"清除所有的弹窗\" onClick={this.clearAlertMsgCustom} className='comment_position alert_position_left_top' />\r\n                            </div>\r\n                        </DemoView>\r\n\r\n                        <DemoView className='props_container' title={'A款-LgUI-Alert'} code=\r\n                            {`\r\nalertASuccess() {\r\nlet alert = lgAlert.show({ content: \"用于表示操作然后操作成功的\", tipType: 'success', tipSize: 'big', tipMouldType: 'A', description: \"这是一个操作成功的描述\" });\r\n}\r\nalertAWarning() {\r\nlet alert = lgAlert.show({ content: '用于表示操作引起严重的后果', tipType: 'warning', tipSize: 'big', tipMouldType: 'A', description: \"这是一个后果信息描述\" });\r\n}\r\nalertAInfo() {\r\nlet alert = lgAlert.show({ content: '用户表示普通操作信息提示', tipType: 'info', tipSize: 'big', description: \"这是一个普通提示描述\", reverse: true, tipMouldType: 'A', });\r\n}\r\nalertAError() {\r\nlet alert = lgAlert.show({ content: '用于表示操作然后操作失败的', tipType: 'error', tipMouldType: 'A', tipSize: 'big', description: \"这是一个操作失败的原因\" });\r\n}\r\nalertAQuestion() {\r\nlet alert = lgAlert.show({ content: '用于帮助用户操作的信息提示', tipType: 'question', tipMouldType: 'A', tipSize: 'big', description: \"这是一个帮助提示描述\" });\r\n}\r\nalertASuccess2() {\r\nlet alert = lgAlert.show({ content: '操作成功', tipType: 'success', tipSize: 'small', tipMouldType: 'A', });\r\n}\r\nalertAWarning2() {\r\nlet alert = lgAlert.show({ content: '该操作无法执行', tipType: 'warning', tipSize: 'small', tipMouldType: 'A', });\r\n}\r\nalertAInfo2() {\r\nlet alert = lgAlert.show({ content: '该操作无法执行', tipType: 'info', tipSize: 'small',  reverse: true, tipMouldType: 'A', });\r\n}\r\nalertAError2() {\r\nlet alert = lgAlert.show({ content: '操作失败', tipType: 'error', tipMouldType: 'A', tipSize: 'small',  });\r\n}\r\nalertAQuestion2() {\r\nlet alert = lgAlert.show({ content: '是否执行操作？ ', tipType: 'question', tipMouldType: 'A', tipSize: 'small', });\r\n}\r\nalertASuccess3() {\r\nlet alert = lgAlert.show({ content: '操作成功', tipType: 'success', tipSize: 'mini', tipMouldType: 'A', });\r\n}\r\nalertAWarning3() {\r\nlet alert = lgAlert.show({ content: '该操作无法执行', tipType: 'warning', tipSize: 'mini', tipMouldType: 'A', });\r\n}\r\nalertAInfo3() {\r\nlet alert = lgAlert.show({ content: '该操作无法执行', tipType: 'info', tipSize: 'mini', reverse: true, tipMouldType: 'A', });\r\n}\r\nalertAError3() {\r\nlet alert = lgAlert.show({ content: '操作失败', tipType: 'error', tipMouldType: 'A', tipSize: 'mini',  });\r\n}\r\n\r\n\r\n<div className='components-show-example-title-text'>大尺寸</div>\r\n<input type=\"button\" value=\"success\" onClick={this.alertASuccess} className='comment_position alert_position_left_top' />\r\n<input type=\"button\" value=\"warning\" onClick={this.alertAWarning} className='comment_position alert_position_left_top' />\r\n<input type=\"button\" value=\"info\" onClick={this.alertAInfo} className='comment_position alert_position_left_top' />\r\n<input type=\"button\" value=\"question\" onClick={this.alertAQuestion} className='comment_position alert_position_left_top' />\r\n<input type=\"button\" value=\"error\" onClick={this.alertAError} className='comment_position alert_position_left_top' />\r\n\r\n<div className='components-show-example-title-text'>中等尺寸</div>\r\n<input type=\"button\" value=\"success\" onClick={this.alertASuccess2} className='comment_position alert_position_left_top' />\r\n<input type=\"button\" value=\"warning\" onClick={this.alertAWarning2} className='comment_position alert_position_left_top' />\r\n<input type=\"button\" value=\"info\" onClick={this.alertAInfo2} className='comment_position alert_position_left_top' />\r\n<input type=\"button\" value=\"question\" onClick={this.alertAQuestion2} className='comment_position alert_position_left_top' />\r\n<input type=\"button\" value=\"error\" onClick={this.alertAError2} className='comment_position alert_position_left_top' />\r\n\r\n<div className='components-show-example-title-text'>小尺寸</div>\r\n<input type=\"button\" value=\"success\" onClick={this.alertASuccess3} className='comment_position alert_position_left_top' />\r\n<input type=\"button\" value=\"warning\" onClick={this.alertAWarning3} className='comment_position alert_position_left_top' />\r\n<input type=\"button\" value=\"info\" onClick={this.alertAInfo3} className='comment_position alert_position_left_top' />\r\n<input type=\"button\" value=\"error\" onClick={this.alertAError3} className='comment_position alert_position_left_top' />\r\n    `}>\r\n                            <div>\r\n                                <div className='components-show-example-title-text'>大尺寸</div>\r\n                                <input type=\"button\" value=\"success\" onClick={this.alertASuccess} className='comment_position alert_position_left_top' />\r\n                                <input type=\"button\" value=\"warning\" onClick={this.alertAWarning} className='comment_position alert_position_left_top' />\r\n                                <input type=\"button\" value=\"info\" onClick={this.alertAInfo} className='comment_position alert_position_left_top' />\r\n                                <input type=\"button\" value=\"question\" onClick={this.alertAQuestion} className='comment_position alert_position_left_top' />\r\n                                <input type=\"button\" value=\"error\" onClick={this.alertAError} className='comment_position alert_position_left_top' />\r\n                            </div>\r\n                            <div>\r\n                                <div className='components-show-example-title-text'>中等尺寸</div>\r\n                                <input type=\"button\" value=\"success\" onClick={this.alertASuccess2} className='comment_position alert_position_left_top' />\r\n                                <input type=\"button\" value=\"warning\" onClick={this.alertAWarning2} className='comment_position alert_position_left_top' />\r\n                                <input type=\"button\" value=\"info\" onClick={this.alertAInfo2} className='comment_position alert_position_left_top' />\r\n                                <input type=\"button\" value=\"question\" onClick={this.alertAQuestion2} className='comment_position alert_position_left_top' />\r\n                                <input type=\"button\" value=\"error\" onClick={this.alertAError2} className='comment_position alert_position_left_top' />\r\n                            </div>\r\n                            <div>\r\n                                <div className='components-show-example-title-text'>小尺寸</div>\r\n                                <input type=\"button\" value=\"success\" onClick={this.alertASuccess3} className='comment_position alert_position_left_top' />\r\n                                <input type=\"button\" value=\"warning\" onClick={this.alertAWarning3} className='comment_position alert_position_left_top' />\r\n                                <input type=\"button\" value=\"info\" onClick={this.alertAInfo3} className='comment_position alert_position_left_top' />\r\n                                <input type=\"button\" value=\"error\" onClick={this.alertAError3} className='comment_position alert_position_left_top' />\r\n                            </div>\r\n                        </DemoView>\r\n\r\n                        <DemoView className='props_container' title={'E款-ElementUI-Alert:'} code=\r\n                            {`\r\nalertSuccess() {let alert = lgAlert.show({ content: '用户操作的成功提示', tipType: 'success', tipMouldType: 'E', closable: true, description: \"这是一个操作成功的描述\" });}\r\nalertWarning() {let alert = lgAlert.show({ content: '用户操作的警告提示', tipType: 'warning', tipMouldType: 'E', \r\nisShowCloseBtn: true, description: \"You should be self-esteem, do not be arrogant\" });}\r\nalertInfo() {let alert = lgAlert.show({ content: '用户操作的基本提示', tipType: 'info', tipMouldType: 'E', });}\r\nalertError() {let alert = lgAlert.show({ content: '用于表示操作然后操作失败的', tipType: 'error', tipMouldType: 'E', });}\r\n\r\n<input type=\"button\" value=\"success\" onClick={this.alertSuccess} className='comment_position alert_position_left_top' />\r\n<input type=\"button\" value=\"warning\" onClick={this.alertWarning} className='comment_position alert_position_left_top' />\r\n<input type=\"button\" value=\"info\" onClick={this.alertInfo} className='comment_position alert_position_left_top' />\r\n<input type=\"button\" value=\"error\" onClick={this.alertError} className='comment_position alert_position_left_top' />\r\n                                        `}>\r\n                            <div>\r\n                                <input type=\"button\" value=\"success\" onClick={this.alertSuccess} className='comment_position alert_position_left_top' />\r\n                                <input type=\"button\" value=\"warning\" onClick={this.alertWarning} className='comment_position alert_position_left_top' />\r\n                                <input type=\"button\" value=\"info\" onClick={this.alertInfo} className='comment_position alert_position_left_top' />\r\n                                <input type=\"button\" value=\"error\" onClick={this.alertError} className='comment_position alert_position_left_top' />\r\n                            </div>\r\n                        </DemoView>\r\n\r\n                        <CodeView className=''>\r\n                            {\r\n                                `\r\n                                    /**\r\n                                     * @description  : 创建或者修改一个lgAlert\r\n                                     * @param         { type LgAlertShowProps }  e 传入创建的参数或者需要修改的参数\r\n                                     * @param         { type string }  showIdIndex 需要修改属性指定值的下标\r\n                                     * @return        { type * } \r\n                                     */\r\n\r\n                                    /**\r\n                                     * @description  : 关闭下标指定的的lgAlert\r\n                                     * @param         { type string } showIdIndex 指定lgAlert的下标\r\n                                     * @return        { type * }\r\n                                     */\r\n\r\n                                     /**\r\n                                      * @description  : 关闭所有的lgAlert\r\n                                      * @param         { type * } \r\n                                      * @return        { type * } \r\n                                      */\r\n                                    \r\n                                     /**\r\n                                      * @param LgAlertShowProps:在打开提示窗时提示的配置项,默认是3s后会消失\r\n                                      * \r\n                                      */\r\n\r\n                                     /**\r\n                                      * @description 在打开提示窗时提示的\r\n                                      * @example \r\n                                      * 打开:\r\n                                      * let showIndex = lgAlert.show({ tipType: 'success', content: \"加载成功\", duration: 1000, })\r\n                                      * \r\n                                      * 修改,1s后删除:\r\n                                      * lgAlert.show({ tipType: 'success', content: \"加载成功\", duration: 1000, }, showIndex.index);\r\n                                      * \r\n                                      * 长驻窗口:\r\n                                      * let showIndex = lgAlert.show({ tipType: 'success', content: \"加载成功\",  });\r\n                                      * \r\n                                      * 删除单个:\r\n                                      *  lgAlert.close(showIndex.index);\r\n                                      * \r\n                                      * 删除所有\r\n                                      * lgAlert.show({ tipType: 'closeAll' })\r\n                                      *  \r\n                                      */\r\n                                \r\n                                    \r\n                                     interface lgAlert {\r\n                                        show: (e?:LgAlertShowProps, showIdIndex?: string) => { index: string, options: LgAlertShowProps }; // 返回一个数字用于关闭已经打开的弹窗\r\n                                        close: (index: string) => void; // 关闭一个lgAlert\r\n                                        closeAll: () => void; // 关闭所有的lgAlert\r\n                                     }\r\n                                    `\r\n                            }\r\n                        </CodeView>\r\n\r\n                        <CodeView className='props_container'>\r\n                            {\r\n                                `\r\n\r\n                                    /**\r\n                                     * @summary 通用的类型\r\n                                     */\r\n                                      type tipModel = 'A' | 'E' | undefined;// lgAlert的提示模式\r\n                                      type tipMouldType = 'A' | 'E' | undefined;// lgAlert的提示模式\r\n                                      type xOffsetType = \"left\" | \"center\" | \"right\" | undefined;// X轴上偏移的位置 0点在屏幕左上角\r\n                                      type yOffsetType = \"top\" | \"center\" | \"bottom\" | undefined;// Y轴上偏移的位置 0点在屏幕左上角\r\n                                      type showAlign = \"top\" | 'center' | 'bottom';// Y轴方向上的flex布局方式\r\n                                      type showDirection = \"left\" | 'center' | 'right';// X轴方向上的flex布局方式\r\n                                    /**\r\n                                     * @summary default的类型\r\n                                     */\r\n                                      type TipType = \"info\" | \"error\" | \"warning\" | \"success\" | \"loading\" | \"question\" | \"closeAll\";// 默认的款式的提示类型\r\n                                    \r\n                                    /**\r\n                                     * @summary A的类型\r\n                                     */\r\n                                      type typeModel_A = 'success' | 'info' | 'warning' | 'error' | \"question\";// A款的提示类型\r\n                                      type tipSize = 'big' | 'small' | 'mini' | undefined;// A款lgAlert的大小\r\n                                    /**\r\n                                     * @summary E的类型\r\n                                     */\r\n                                      type typeModel_E = 'success' | 'info' | 'warning' | \"error\";// E款的提示类型\r\n                                  `\r\n                            }\r\n                        </CodeView>\r\n\r\n                        <CodeView className='props_container'>\r\n                            {\r\n                                `\r\n                                        // 打开提示框中的配置项,通用样式 default | A | E\r\n                                        interface LgAlertShowProps {\r\n\r\n                                            tipMouldType?: tipMouldType;// lgAlert的款式 | 默认值：undefined | 必传性: false\r\n                                        \r\n                                            tipType?: TipType | typeModel_A | typeModel_E;// lgAlert展示的类型 | 默认值: -- |/| 兼容款式：default \\\\ A \\\\ E  | 必传性: false\r\n                                        \r\n                                            position?: {\r\n                                                xAxis?: xOffsetType | number | string;// lgAlert在X轴上的相对位置 | \"left\" | \"center\" | \"right\" | undefined(默认值)  | 必传性:false\r\n                                                yAxis?: yOffsetType | number | string;// lgAlert在y轴上的相对位置 | \"top\" | \"center\" | \"bottom\" | undefined(默认值) | 必传性:false\r\n                                                xOffset?: number | string;// lgAlert在x轴上的偏移量 | 默认值:-- | 必传性:false\r\n                                                yOffset?: number | string;// lgAlert在y轴上的偏移量 | 默认值:-- | 必传性:false\r\n                                                showAlign?: showAlign;// lgAlert数据展示的起始方向 |  \"center\" | \"top\"(默认值) | \"bottom\" | 必传性:false\r\n                                                showDirection?: showDirection;// lgAlert数据展示的水平对齐方向 \"left\" | \"center\"(默认值) | \"right\"  | 必传性:false\r\n\r\n                                            };// 设置lgAlert弹出的位置 | 默认值: -- |/| 兼容款式：default \\\\ A \\\\ E  | 必传性: false\r\n                                        \r\n                                            duration?: number;// lgAlert展示后消失的时间 | 0:长时间停留在屏幕上面不消失 | 默认值: -- |/| 兼容款式：default \\\\ A \\\\ E  | 必传性: false\r\n                                            positionIndex?: number// 创建lgAlert后,执行的show函数返回每个提示实例的下标，用于关闭单个弹窗 | 默认值: -- |/| 兼容款式：default \\\\ A \\\\ E  | 必传性: false\r\n                                        \r\n                                            content?: string;// 展示的内容 | 默认值: -- |/| 兼容款式：default \\\\ A \\\\ E  | 必传性: false\r\n                                        \r\n                                            isShow?: boolean;// 是否展示弹框 | 默认值: -- |/| 兼容款式：default \\\\ A \\\\ E  | 必传性: false\r\n                                        \r\n                                            isShowCloseBtn?: boolean;// 是否展示关闭按钮 | 默认值: false |/| 兼容款式：default \\\\ A \\\\ E  | 必传性: false\r\n                                            isShowIcon?: boolean;// 是否显示小图标 | 默认值: true |/| 兼容款式：default \\\\ A \\\\ E\\\\ | 必传性: false\r\n                                        \r\n                                            customIcon?: React.ReactDOM | React.ReactElement;// 自定义的小图标 | 默认值: -- |/| 兼容款式：default \\\\ A  | 必传性: false\r\n                                            customClose?: React.ReactDOM | React.ReactElement;// 自定义关闭按钮的HTML元素  | 默认值: false |/| 兼容款式：default \\\\ A  | 必传性: false\r\n                                        \r\n                                            // 提示框上的容器\r\n                                            containerClassName?: string;// 单个lgAlert的类名 | 默认值: -- |/| 兼容款式：default \\\\ A \\\\ E  | 必传性: false\r\n                                            containerStyle?: React.CSSProperties;// lgAlert的样式(10个窗口位置上的样式) | 默认值: -- |/| 兼容款式：default \\\\ A \\\\ E  | 必传性: false\r\n                                        \r\n                                            onClose?(): void// 关闭alert时触发的事件 | 兼容款式：default \\\\ A \\\\ E  | 必传性: false\r\n\r\n                                            className?: string// 修改样式的类名 | 默认值: -- |/| 兼容款式：default \\\\ A \\\\ E  | 必传性: false\r\n                                            style?: React.CSSProperties// 修改样式的对象 | 默认值: -- |/| 兼容款式：default \\\\ A \\\\ E  | 必传性: false\r\n                                        }\r\n                                  `\r\n                            }\r\n                        </CodeView>\r\n                        <CodeView className=''>\r\n                            {\r\n                                `\r\n                                    /**\r\n                                     * @summary A款样式的配置项 仅适用于A款\r\n                                     */\r\n                                    export interface LgAlertModelAProps {\r\n                                        confirmText?: string;// 确认按钮显示的文字 | 默认值: \"确定\" | 必传性: false\r\n                                        closeText?: string;// 关闭按钮显示的文字 | 默认值: \"再想想\" | 必传性: false\r\n                                        reverse?: boolean;// 确认按钮与取消按钮是否反转 | 默认值: false | 必传性: false\r\n                                        tipSize?: tipSize;// 弹窗尺寸 | 默认值: small | 必传性: false\r\n                                    \r\n                                        onConfirm?: () => void;// 点击确认按钮 | 必传性: false\r\n                                        onCancel?: (type: number, positionIndex: string) => void;// 点击关闭按钮 | 必传性: false\r\n                                        iconCloseAlert?: () => void;// 右上角关闭按钮 | 必传性: false\r\n                                    }\r\n                                  `\r\n                            }\r\n                        </CodeView>\r\n                        <CodeView className=''>\r\n                            {\r\n                                `\r\n                                    /**\r\n                                     * @summary E款样式的配置项 elementUI中需要传入的变量\r\n                                     * \r\n                                     * @see 详见可参考: https://elemefe.github.io/element-react/#/zh-CN/alert\r\n                                     */\r\n                                    export interface ElementAlert {\r\n                                        title?: string// 标题，必选参数 | 默认值: -- | 必传性: false\r\n                                        description?: string// \t辅助性文字 | 默认值: -- | 必传性: false\r\n                                        closable?: boolean// 是否可关闭 | 默认值: false | 必传性: false\r\n                                        closeText?: string// 关闭按钮自定义文本 | 默认值: -- | 必传性: false\r\n                                        showIcon?: boolean// 是否显示图标  | 默认值: false | 必传性: false\r\n                                    }\r\n\r\n                                  `\r\n                            }\r\n                        </CodeView>\r\n                    </DemoPage>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n","import {BaseComponent} from \"../../type/BaseComponent\";\r\nimport {BaseProps} from \"../../type/BaseProps\";\r\nimport classNames from \"classnames\";\r\nimport \"./index.scss\"\r\nimport {CodeView} from \"@/components/CodeView\";\r\n\r\nexport interface DemoPageProps {\r\n  title: string\r\n  subtitle?: string\r\n  importCode?: string\r\n  interfaceCode?: string\r\n}\r\n\r\n\r\nexport class DemoPage extends BaseComponent<DemoPageProps> {\r\n\r\n  private readonly classNamePrefix: string\r\n\r\n  constructor(props: (DemoPageProps & BaseProps) | Readonly<DemoPageProps & BaseProps>) {\r\n    super(props);\r\n    this.classNamePrefix = \"lg-demo-page\"\r\n  }\r\n\r\n  render() {\r\n\r\n    const className = classNames(\r\n      `${this.classNamePrefix}-root`,\r\n      {\r\n        [`${this.props.className}`]: !!this.props.className\r\n      }\r\n    )\r\n\r\n    return (\r\n      <div className={className}>\r\n        <div className={`${this.classNamePrefix}-header`}>\r\n          <div className={`${this.classNamePrefix}-title`}>{this.props.title}</div>\r\n          {\r\n            !this.props.subtitle ? \"\" :\r\n              < div className={`${this.classNamePrefix}-subtitle`}>{this.props.subtitle}</div>\r\n          }\r\n          {\r\n            !this.props.importCode ? \"\" : (\r\n              <div className={`${this.classNamePrefix}-import`}>\r\n                <div className={`${this.classNamePrefix}-import-title`}>在页面中引入组件</div>\r\n                <CodeView>\r\n                  {this.props.importCode}\r\n                </CodeView>\r\n              </div>\r\n            )\r\n\r\n          }\r\n        </div>\r\n        <div className={`${this.classNamePrefix}-body`}>\r\n          {\r\n            this.props.children\r\n          }\r\n        </div>\r\n        <div className={`${this.classNamePrefix}-footer`}>\r\n          {\r\n            !this.props.interfaceCode ? \"\" : (\r\n              <div className={`${this.classNamePrefix}-interface`}>\r\n                <div className={`${this.classNamePrefix}-interface-title`}>标签属性解析</div>\r\n                <CodeView>\r\n                  {this.props.interfaceCode}\r\n                </CodeView>\r\n              </div>\r\n            )\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import {Component} from \"react\";\r\nimport {BaseProps} from \"./BaseProps\";\r\n\r\nexport class BaseComponent<T = {}, S = {}, SS = any> extends Component<T & BaseProps, S, SS>{\r\n  constructor(props: (T & BaseProps) | Readonly<T & BaseProps>) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.onRef && this.props.onRef(this)\r\n  }\r\n}","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 26291;\nmodule.exports = webpackEmptyContext;"],"names":["CodeView","props","codeViewAreaRef","areaMaxHeight","state","isShowCode","createRef","window","PR","prettyPrint","this","current","clientHeight","setState","canHidden","defaultShow","result","prettier","children","parser","plugins","parserTypeScript","parserHtml","e","console","error","className","classNames","style","ref","height","onClick","Component","defaultProps","language","DemoView","classNamePrefix","title","subtitle","code","BaseComponent","initTipType","tipType","model","type","globalState","zIndexNumber","mapList","Map","timeoutMap","lgAlert","showIdNumber","show","showIdIndex","alertPositionStylePosition","get","set","alertMessageListPosition","containerClassName","containerStyle","closeTimeoutMap","positionIndex","tipItemOption","initOptions","isShow","duration","isShowIcon","content","tipMouldType","undefined","position","xAxis","yAxis","showDirection","xOffset","tipSize","description","Object","assign","returnOptionsIndex","toString","closeAll","forEach","o","i","clearTimeout","index","options","positionIndexClose","parseInt","split","showIdNumberClose","length","timeOutIndex","setTimeout","spliceIndexClose","item","splice","showIdName","alertPositionOptions","LgAlertPropsPosition","tipPositionXType","tipPositionYType","positionType","showAlign","alignItems","justifyContent","zIndex","top","left","transform","yOffset","right","bottom","initContainerPosition","push","positionIndexPosition","timeoutId","delete","spliceIndex","log","close","replaceIndex","LgAlertContainer","positionZIndex","bind","initAlertElement","closeTip","alertMessageList","map","alertParams","initOption","closable","showIcon","isShowCloseBtn","closeText","initAlertParams","Alert","initAlertParamsA","LgAlertMouldA","key","LgAlertMouldDefault","tipIndex","stylePosition","display","id","nextProps","parentNode","currentTarget","getAttribute","onClose","hasHasDescriptionClassName","iconFontSizeClassName","customIcon","customClose","confirmTip","isRunFun","iconCloseAlert","onCancel","onConfirm","rowRevers","reverse","miniClass","layerContainerClass","showDom","initLgAlertTypeAClass","confirmText","popLayerCreateIndex","alert","document","getElementById","root","removeChild","popLayerDom","createElement","setAttribute","appendChild","ReactDOM","num","successLoading","alertMsg","alertMsg2","alertMsg3","alertMsg4","alertMsg5","alertMsg6","alertMsg7","alertMsg8","alertMsg9","alertMsgCustom","importCode","value","clearAlertMsgCustom","alertASuccess","alertAWarning","alertAInfo","alertAQuestion","alertAError","alertASuccess2","alertAWarning2","alertAInfo2","alertAQuestion2","alertAError2","alertASuccess3","alertAWarning3","alertAInfo3","alertAError3","alertSuccess","alertWarning","alertInfo","alertError","DemoPage","interfaceCode","onRef","webpackEmptyContext","req","Error","keys","resolve","module","exports"],"sourceRoot":""}