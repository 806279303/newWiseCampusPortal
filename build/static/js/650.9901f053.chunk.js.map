{"version":3,"file":"static/js/650.9901f053.chunk.js","mappings":"+TAwBaA,EAAb,0CAWE,WAAYC,GAAiD,IAAD,yBAC1D,cAAMA,IAVSC,qBAS2C,IARpDC,mBAQoD,EAE1D,EAAKC,MAAQ,CACXC,YAAY,GAEd,EAAKH,iBAAkBI,EAAAA,EAAAA,aACvB,EAAKH,cAAgB,cANqC,EAX9D,iDAoBE,WACGI,OAAeC,GAAGC,gBArBvB,+BAwBE,WAAqB,IAAD,EACjBF,OAAeC,GAAGC,cACnBC,KAAKP,eAAgB,UAAAO,KAAKR,gBAAgBS,eAArB,eAA8BC,cAAe,MAAQ,EAC1EF,KAAKG,SAAS,CACZR,YAAaK,KAAKT,MAAMa,aAAeJ,KAAKT,MAAMc,gBA5BxD,oBAgCE,WAAU,IAAD,SACHC,EAAS,GACb,IACEA,EAASC,IAAAA,OAAgBP,KAAKT,MAAMiB,SAAU,CAC5CC,OAAQ,aACRC,QAAS,CAACC,IAAkBC,OAE9B,MAAOC,GACPC,QAAQC,MAAM,sEACdT,EAASN,KAAKT,MAAMiB,SAGtB,IAAIQ,EAAYC,GAAAA,CACd,qBADwB,yBAGlBjB,KAAKT,MAAMyB,aAAgBhB,KAAKT,MAAMyB,YAHpB,SAItB,0BAA2BhB,KAAKT,MAAMa,WAJhB,IAQ1B,OACE,iBAAKY,UAAWA,EAAWE,MAAOlB,KAAKT,MAAM2B,MAA7C,WACE,gBAAKC,IAAKnB,KAAKR,gBAAiBwB,UAAU,oBACrCE,MAAO,CAACE,OAAQpB,KAAKN,MAAMC,WAAaK,KAAKP,cAAgB,KADlE,UAEE,gBAAKuB,UAAS,sBAAd,UACI,gBAAKA,UAAU,aAAf,UACE,iBAAMA,UAAU,YAAhB,SAA6BV,UAKlCN,KAAKT,MAAMa,WACV,gBAAKiB,QAAS,kBAAM,EAAKlB,SAAS,CAACR,YAAa,EAAKD,MAAMC,cACtDqB,UAAU,2BADf,UAEE,iBAAKA,UAAS,iCAA4BhB,KAAKN,MAAMC,WAAa,UAAY,IAA9E,UACIK,KAAKN,MAAMC,WAAoB,eAAP,eAD5B,oBAHoB,UA/DlC,GAA8B2B,EAAAA,WAAjBhC,EAKJiC,aAA8B,CACnCf,SAAU,GACVgB,SAAU,KACVpB,WAAW,I,gLCnBFqB,EAAb,0CAIE,WAAYlC,GAA2E,IAAD,yBACpF,cAAMA,IAHSmC,qBAEqE,EAEpF,EAAKA,gBAAkB,eAF6D,EAJxF,qCASE,WACE,IAAIV,EAAYC,GAAAA,CAAW,GAAD,OACrBjB,KAAK0B,gBADgB,8BAGlB1B,KAAKT,MAAMyB,aAAgBhB,KAAKT,MAAMyB,YAG9C,OACE,iBAAKA,UAAWA,EAAWE,MAAOlB,KAAKT,MAAM2B,MAA7C,WACE,gBAAKF,UAAS,UAAKhB,KAAK0B,gBAAV,UAAd,SAAkD1B,KAAKT,MAAMoC,QAE1D3B,KAAKT,MAAMqC,UACV,gBAAKZ,UAAS,UAAKhB,KAAK0B,gBAAV,aAAd,SAAqD1B,KAAKT,MAAMqC,WAD3C,IAGzB,gBAAKZ,UAAS,UAAKhB,KAAK0B,gBAAV,mBAAd,SAEI1B,KAAKT,MAAMiB,WAIZR,KAAKT,MAAMsC,MACV,SAACvC,EAAA,EAAD,CAAUc,WAAW,EAArB,SAA4BJ,KAAKT,MAAMsC,OADvB,UA7B5B,GAA8BC,EAAAA,I,gLCCjBC,EAAb,0CAIE,WAAYxC,GAA2E,IAAD,yBACpF,cAAMA,IAHSmC,qBAEqE,EAEpF,EAAKA,gBAAkB,eAF6D,EAJxF,qCASE,WAEE,IAAMV,EAAYC,GAAAA,CAAW,GAAD,OACvBjB,KAAK0B,gBADkB,8BAGpB1B,KAAKT,MAAMyB,aAAgBhB,KAAKT,MAAMyB,YAI9C,OACE,iBAAKA,UAAWA,EAAhB,WACE,iBAAKA,UAAS,UAAKhB,KAAK0B,gBAAV,WAAd,WACE,gBAAKV,UAAS,UAAKhB,KAAK0B,gBAAV,UAAd,SAAkD1B,KAAKT,MAAMoC,QAE1D3B,KAAKT,MAAMqC,UACV,gBAAMZ,UAAS,UAAKhB,KAAK0B,gBAAV,aAAf,SAAsD1B,KAAKT,MAAMqC,WAD5C,GAItB5B,KAAKT,MAAMyC,YACV,iBAAKhB,UAAS,UAAKhB,KAAK0B,gBAAV,WAAd,WACE,gBAAKV,UAAS,UAAKhB,KAAK0B,gBAAV,iBAAd,+DACA,SAACpC,EAAA,EAAD,UACGU,KAAKT,MAAMyC,gBAJO,OAW7B,gBAAKhB,UAAS,UAAKhB,KAAK0B,gBAAV,SAAd,SAEI1B,KAAKT,MAAMiB,YAGf,gBAAKQ,UAAS,UAAKhB,KAAK0B,gBAAV,WAAd,SAEK1B,KAAKT,MAAM0C,eACV,iBAAKjB,UAAS,UAAKhB,KAAK0B,gBAAV,cAAd,WACE,gBAAKV,UAAS,UAAKhB,KAAK0B,gBAAV,oBAAd,mDACA,SAACpC,EAAA,EAAD,UACGU,KAAKT,MAAM0C,mBAJU,YA7CxC,GAA8BH,EAAAA,I,uLCJ1BI,EAAyB,EACzBC,EAAiB,IACjBC,EAA6B,GA+CpBC,EAAb,0CACI,WAAY9C,GAAiD,IAAD,yBACxD,cAAMA,IAUF4C,eAAiB,EAXmC,EAYpDD,uBAAyB,EAZ2B,EA+J5DI,gBAA0B,EA/JkC,EAgK5DC,aAAuB,EAhKqC,EAiK5DC,aAAuB,EAjKqC,EAkK5DC,aAAuB,EAlKqC,EAmK5DC,cAAwB,EAnKoC,EAoK5DC,WAA8C,KApKc,EAmOpDC,aAAe,EAnOqC,EAoOpDC,YAAc,EAlOlB,EAAKnD,MAAQ,CAAEoD,QAAQ,EAAOC,sBAAuB,IACrD,EAAKC,eAAiB,EAAKA,eAAeC,MAApB,WACtB,EAAKC,kBAAoB,EAAKA,kBAAkBD,MAAvB,WACzB,EAAKE,kBAAoB,EAAKA,kBAAkBF,MAAvB,WACzB,EAAKG,gBAAkB,EAAKA,gBAAgBH,MAArB,WACvB,EAAKI,cAAgB,EAAKA,cAAcJ,MAAnB,WACrB,EAAKK,gBAAkB,EAAKA,gBAAgBL,MAArB,WACvB,EAAKM,gBAAkB,EAAKA,gBAAgBN,MAArB,WATiC,EADhE,4CAkCI,WAAkE,IAAD,OAAnDO,EAAmD,uDAApC,EAAGC,EAAiC,uCAC7D3C,QAAQ4C,IAAI,4BACZC,SAASC,gBAAgB1C,MAAM2C,SAAW,OAC1C7D,KAAKG,SAAS,CACV2C,QAAQ,IACT,WACC,EAAKvD,MAAMuE,aAAe,EAAKvE,MAAMuE,cACrC,EAAKd,eAAe,EAAG,EAAKd,wBAChB,GAARsB,EACJ,EAAKjE,MAAMwE,SAAW,EAAKxE,MAAMwE,QAAQ,EAAKrE,MAAMoD,QADnCW,GAAOA,EAAI,EAAK/D,MAAMoD,aA1CnD,6BAmDI,WACI9C,KAAKqD,cAAc,EAAGrD,KAAKT,MAAMyE,aApDzC,uBA2DI,WACIhE,KAAKqD,cAAc,EAAGrD,KAAKT,MAAM0E,eA5DzC,8CA8DI,SAAiCC,GAA2B,IAAD,OACvD,GAAIlE,KAAKT,MAAMuD,QAAUoB,EAAUpB,OAAnC,CACA,IAAIqB,EAA6BD,EAAUpB,OAAS,EAAI,EACxD9C,KAAKG,SAAS,CAAE2C,OAAQoB,EAAUpB,SAAU,WACpCoB,EAAUpB,SACVa,SAASC,gBAAgB1C,MAAM2C,SAAW,UAE9C,IAAId,EAAwBmB,EAAUpB,OAAS,0DAA4D,iCAC3GsB,YAAW,WAAQ,EAAKjE,SAAS,CAAE4C,sBAAAA,MAA6B,KAChE,EAAKC,eAAemB,EAAoB,EAAKjC,uBAAwBgC,EAAUG,wBAvE3F,kCA0EI,WACIrE,KAAKqD,kBA3Eb,oBAkFI,SAAOiB,GACH,IAAKC,MAAMC,QAAQF,GAAQ,MAAO,GAElC,IADA,IAAIG,EAAQ,GACHC,EAAI,EAAGA,EAAIJ,EAAIK,OAAQD,KACG,IAA3BD,EAAMG,QAAQN,EAAII,KAClBD,EAAMI,KAAKP,EAAII,IAGvB,OAAOD,IA1Ff,4BAmGI,SAAeK,EAAwB5C,GAAoE,IAAD,OAAnCmC,EAAmC,wDACtGjC,EAAmBpC,KAAK+E,OAAO3C,GAC/B,IAAI4C,EAAgBrB,SAASsB,iBAAiB,qCAE9C,IAAKH,GAAkB1C,EAAiBuC,OAAQ,CAE5C,IAAIO,GADJ9C,EAAmBpC,KAAK+E,OAAO3C,IACFwC,QAAQO,SAASjD,KAChC,GAAVgD,GACA9C,EAAiBgD,OAAOF,EAAO,GAGvC,IAAKJ,GAAkB1C,EAAiBuC,OAAQ,CAC5CvC,EAAmBpC,KAAK+E,OAAO3C,GAC/B,IAAIiD,GAAoB,EACxBjD,EAAiBkD,SAAQ,SAAAC,GACrBF,EAAWE,EAAIF,EAAWE,EAAIF,MAElCnD,EAAyBmD,IACK,IAC1BhB,IAAmBrE,KAAKT,MAAM8E,iBAC9BS,EAAiB,GAGrBE,EAAcL,QACdK,EAAcM,SAAQ,SAACC,EAAsBb,GACzC,GAAII,EAAgB,CAChB,IAAIU,EAAgBD,EAAEE,aAAa,oBAC/BD,GAAiBtD,GAA0BmC,EAC3CD,YAAW,WACPmB,EAAErE,MAAMwE,QAAU,MAClBH,EAAErE,MAAMyE,OAAS,oBACjBJ,EAAErE,MAAM0E,OAAS,IACjBL,EAAErE,MAAM2E,MAAQ,yEAChBN,EAAEO,uBAAuB5E,MAAM0E,OAAS,KAAS,EAAK1D,uBAAyB,GAC/EqD,EAAE5C,WAAWzB,MAAM0E,OAAS,IAC5BxD,EAAiByC,KAAKM,SAASK,MAChC,MAEHD,EAAErE,MAAMwE,QAAU,IAClBH,EAAErE,MAAM2E,MAAQ,mCAChBN,EAAErE,MAAMyE,OAAS,mBACjBJ,EAAErE,MAAM0E,OAAS,EAAKzD,eACtBoD,EAAEO,uBAAuB5E,MAAM0E,OAAS,EAAKzD,gBAAkB,EAAKD,uBAAyB,GAC7FqD,EAAE5C,WAAWzB,MAAM0E,OAAS,EAAKzD,qBAGrCC,EAAiBgD,OAAOlD,EAAwB,QAjJpE,+BAsJI,SAAkBrB,GAAkD,IAAD,EAC3D8B,EAAa9B,EAAEkF,cAAcpD,WAC7BqD,EAAmB,UAAGnF,EAAEkF,cAAcpD,kBAAnB,aAAG,EAA4BA,WACtD3C,KAAKyC,aAAeuD,EAAoBC,YAActD,EAAWsD,YACjEjG,KAAK0C,cAAgBsD,EAAoBE,aAAevD,EAAWuD,aACnElG,KAAKuC,aAAe1B,EAAEsF,MAAQxD,EAAWyD,WACzCpG,KAAKwC,aAAe3B,EAAEwF,MAAQ1D,EAAW2D,UACzCtG,KAAK2C,WAAaA,EAClB3C,KAAKsC,gBAAiB,IA9J9B,+BA4KI,SAAkBzB,GACd,GAAIb,KAAKsC,eAAgB,CACrB,IAAIK,EAAa3C,KAAK2C,WAClB4D,EAAO1F,EAAEsF,MAAQnG,KAAKuC,aACtBiE,EAAM3F,EAAEwF,MAAQrG,KAAKwC,aACrB+D,GAAQ,IAAKA,EAAO,GACpBA,GAAQvG,KAAKyC,eAAgB8D,EAAOvG,KAAKyC,aAAe,GACxD+D,GAAO,IAAKA,EAAM,GAClBA,GAAOxG,KAAK0C,gBAAiB8D,EAAMxG,KAAK0C,cAAgB,GAC5DC,EAAWzB,MAAMqF,KAAOA,EAAKE,WAAa,KAC1C9D,EAAWzB,MAAMsF,IAAMA,EAAIC,WAAa,QAtLpD,6BA+LI,SAAgB5F,GACZA,EAAE6F,iBACF1G,KAAKsC,gBAAiB,IAjM9B,+BAmMI,WAAqB,IAAD,OAChBH,GAAkC,EAClCnC,KAAKmC,eAAiBA,EACtBnC,KAAKkC,uBAAyBA,IAC9BlC,KAAK2G,uBACL9G,OAAO+G,SAAW,WACd,EAAKD,wBAETvC,YAAW,cACR,KACHT,SAASkD,KAAKC,iBAAiB,YAAY,SAACC,GACnCA,IAAKA,EAAMlH,OAAOmH,OACvB,IAAIC,EAAKF,EAAIG,eAAkBH,EAAYI,UACtCF,GAAqB,QAAfA,EAAGG,WACV,EAAK9E,gBAAiB,QAjNtC,sBA2NI,SAAS+E,EAAUC,GACf,OAAID,EAAIE,aACGF,EAAIE,aAAaD,GAGjBE,iBAAiBH,GAAKC,KAhOzC,kCA2OI,WACItH,KAAK4C,aAAiBe,SAASC,gBAAgB6D,YAAc,EAAMC,WAAW1H,KAAKT,MAAMoI,OAAgB,EACzG3H,KAAK6C,YAAgBc,SAASC,gBAAgB1D,aAAe,EAAMwH,WAAW1H,KAAKT,MAAM6B,QAAiB,IA7OlH,6BAoPI,WAAwBpB,KAAKT,MAAMqI,wBAA0B5H,KAAKqD,kBApPtE,oBAqPI,WAAU,IAAD,OACG9D,EAAiBS,KAAjBT,MAAOG,EAAUM,KAAVN,MACXmI,EAAgBC,OAAOC,OAAO,CAAExB,KAAMvG,KAAK4C,aAAc4D,IAAKxG,KAAK6C,YAAa8E,MAAOpI,EAAMoI,MAAOvG,OAAQ1B,EAAMoD,OAASvD,EAAM6B,OAAS,EAAGwE,OAAQ5F,KAAKmC,eAAiB,GAAKnC,KAAKT,MAAM2B,OAAS,IAWxM,OAAO8G,EAAAA,cACH,iBAAKhH,UAAU,6BAA6BiH,UAAWjI,KAAKoD,gBAAiB8E,YAAalI,KAAKmD,kBAAmBjC,MAAO,CAAE0E,OAAQ5F,KAAKmC,eAAgBgG,QAASzI,EAAMoD,OAAS,QAAU,QAA1L,WAEI,iBAAK9B,UAAW,0BAA4BtB,EAAMqD,uBAAyB,IAAM,KAAOxD,EAAMyB,WAAa,IAAKE,MAAO2G,EAAeO,GAAI,wBAA0BpI,KAAKkC,uBAAzK,WACI,iBAAKlB,UAAU,kBAAkBqH,YAAarI,KAAKkD,kBAAmBgF,YAAalI,KAAKmD,kBAAmB8E,UAAWjI,KAAKoD,gBAA3H,WACI,gBAAKpC,UAAU,wBAAwBE,MAAO,CAAEiH,QAAUnI,KAAKT,MAAM+I,eAA2B,OAAV,SAAtF,SAA2G/I,EAAMoC,SACjH,gBAAKX,UAAU,wBAAwBK,QAAS,WAAQ,EAAKkH,aAAerH,MAAO,CAAEiH,QAAS5I,EAAMiJ,eAAmBxI,KAAKT,MAAM+I,eAA2B,OAAV,QAAoB,WACvK,gBAAKtH,UAAW,iCAAmCzB,EAAMkJ,iBAAmB,EAAIvH,MAAO,CAAEiH,QAASnI,KAAKT,MAAM+I,eAAiB,QAAU,QAAxI,SAAmJ/I,EAAM+I,qBAE7J,gBAAKtH,UAAW,qBAAuBzB,EAAMmJ,gBAAkB,IAA/D,SAAqEnJ,EAAMiB,YAC3E,iBAAKQ,UAAU,sBAAsBE,MAAO,CAAEiH,QAAc,OAAL5I,QAAK,IAALA,GAAAA,EAAOoJ,aAAe,OAAS,QAAtF,WACI,iBAAK3H,UAAU,6BAA6BE,MAAO,CAAEiH,QAAU5I,EAAMqJ,eAA0B,OAAT,QAAtF,WACI,gBAAK5H,UAAW,mCAAqCzB,EAAMsJ,cAAgB,IAA3E,UAAgF,kBAAOxH,QAAS,WAAQ,EAAKiC,mBAAqBtC,UAAU,8CAA8C8H,MAAOvJ,EAAMwJ,YAAavF,KAAM,cAC1N,gBAAKxC,UAAW,iCAAmCzB,EAAMyJ,YAAc,IAAvE,UAA4E,kBAAO3H,QAAS,WAAQ,EAAKgC,cAAc,IAAMrC,UAAU,4CAA4C8H,MAAOvJ,EAAM0J,UAAWzF,KAAM,iBAErN,gBAAKxC,UAAW,6CAA+CzB,EAAM2J,iBAAmB,IAAKhI,MAAO,CAAEiH,QAAS5I,EAAMqJ,eAAiB,QAAU,QAAhJ,SACKrJ,EAAMqJ,wBAKnB,gBAAK5H,UAAW,oCAAsCzB,EAAM4J,iBAAmB,EAAI,aAAYnJ,KAAKmC,eAAgB,mBAAkBnC,KAAKkC,uBAAwBhB,MAAO,CAAE0E,OAAQ5F,KAAKmC,gBAAmBd,QAASrB,KAAKuD,qBAE9NI,SAASyF,eAAe,yBAzRpC,GAAgC9H,EAAAA,WAAnBe,EAeFd,aAAe,CAClBqG,wBAAwB,EACxBvD,kBAAkB,EAClB1C,MAAO,gDACP6G,gBAAgB,EAChBG,cAAc,EACdI,YAAa,eACbE,UAAW,eACXrD,OAAQzD,EACRwF,MAAO,IACPvG,OAAQ,KAqQhB,IAAIiI,EAAsB,GACxB,WACE,IAAIA,EAAJ,CACA,IAAIC,EAAW3F,SAASyF,eAAe,oBACnCE,GAAY3F,SAAS4F,YAAYD,GACrC,IAAIE,EAAc7F,SAAS8F,cAAc,OACzCD,EAAYtI,MAAMiH,QAAU,OAC5BqB,EAAYE,aAAa,KAAM,oBAC/B/F,SAASkD,KAAK8C,YAAYH,KACxBH,EACFjF,YAAW,WAAuBT,SAASyF,eAAe,oBAA6ClI,MAAMiH,QAAU,UAAY,OATrI,G,eC1UmBmB,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACjB,WAAY/J,GAAa,IAAD,yBACpB,cAAMA,IACDG,MAAQ,CAAEkK,gBAAgB,EAAMtC,KAAM,eAAMuC,SAAS,EAAOC,SAAS,EAAOC,SAAS,EAAOC,SAAS,GAC1G,EAAKC,iBAAmB,EAAKA,iBAAiBhH,MAAtB,WACxB,EAAKiH,iBAAmB,EAAKA,iBAAiBjH,MAAtB,WACxB,EAAKkH,iBAAmB,EAAKA,iBAAiBlH,MAAtB,WACxB,EAAKmH,iBAAmB,EAAKA,iBAAiBnH,MAAtB,WACxB,EAAKoH,SAAW,EAAKA,SAASpH,MAAd,WAChB,EAAKqH,SAAW,EAAKA,SAASrH,MAAd,WAChB,EAAKsH,SAAW,EAAKA,SAAStH,MAAd,WAChB,EAAKuH,SAAW,EAAKA,SAASvH,MAAd,WAChB,EAAKwH,SAAW,EAAKA,SAASxH,MAAd,WAChB,EAAKyH,UAAY,EAAKA,UAAUzH,MAAf,WACjB,EAAK0H,UAAY,EAAKA,UAAU1H,MAAf,WAbG,EAuVvB,OAzUA,gCACD,WACI,IAAI2H,GAAO,IAAIC,MAAOC,eAItB,OAHA9K,KAAKG,SAAS,CACV4K,QAASH,IAENA,IACV,sBACD,WACI,OACI,iBAAK5J,UAAU,sBAAf,WACI,eAAIE,MAAO,CAAE8J,OAAQ,EAAGC,WAAY,GAApC,uCACA,iFAGA,oQAGA,wOAGA,2kBAGA,2SAKA,+FAKA,+IAGA,udAKA,cAAG/J,MAAO,CAAEgK,aAAc,GAA1B,ibAIX,sBACD,WACI,IAAIC,EAA4B,CAAC,ohEAAD,keAM5B,oVACJ,OACI,0BACI,eAAIjK,MAAO,CAAE8J,OAAQ,GAArB,gBACKG,QADL,IACKA,OADL,EACKA,EAAMC,KAAI,SAAC7F,EAAGb,GACX,OACI,wBAAKa,aAK5B,sBACD,WAAY,IAAD,OACP,OACI,iBAAKvE,UAAU,sBAAf,WACI,eAAIE,MAAO,CAAE8J,OAAQ,EAAGC,WAAY,GAApC,uCACA,+FACA,kBAAOzH,KAAK,SAASsF,MAAM,2BAAO9H,UAAU,mBAAmBK,QAAS,WAAQ,EAAK+I,2BAEhG,sBACD,WACI,OACI,iBAAKpJ,UAAU,sBAAf,WACI,gBAAKA,UAAU,wBAAf,ylBAGA,gBAAKA,UAAU,0BAA0BqK,IAAI,4EAA4EC,IAAI,kCAExI,8BAED,WACItL,KAAKG,SAAS,CACV0J,SAAU7J,KAAKN,MAAMmK,YAE5B,8BACD,SAAiB/G,GACbhC,QAAQ4C,IAAIZ,GACZ9C,KAAKG,SAAS,CACV2J,SAAU9J,KAAKN,MAAMoK,YAE5B,8BACD,WACI9J,KAAKG,SAAS,CACV4J,SAAU/J,KAAKN,MAAMqK,YAE5B,8BACD,WACI/J,KAAKG,SAAS,CAAE6J,SAAUhK,KAAKN,MAAMsK,YACxC,+BACD,cAEC,uBACD,SAAUlH,GACN9C,KAAKG,SAAS,CACV0J,QAAS/G,MAEhB,uBACD,WACI9C,KAAKG,SAAS,CAAE6J,SAAS,IAAS,WAAQrG,SAASC,gBAAgB1C,MAAM2C,SAAW,YAEvF,wBACD,SAAWf,MACV,sBACD,SAASA,MACR,0BACD,SAAaA,MACZ,oBAED,WAAU,IAAD,OACL,OACI,iCACI,gBAAK9B,UAAU,sBAAf,UACI,UAAC,IAAD,CAAUW,MAAM,oBAAUC,SAAS,GAAGZ,UAAU,0BAC5CgB,WAAU,sDACVC,cAAa,w3JAFjB,WAgDI,SAAC,IAAD,CAAUN,MAAM,sCAAkBE,KAAI,u9BAAtC,UAgCI,kBAAO2B,KAAK,SAASsF,MAAM,4BAAQ9H,UAAU,mBAAmBK,QAASrB,KAAKiK,sBAGlF,SAAC,IAAD,CAAUjJ,UAAU,GAAGW,MAAO,sCAC1BE,KAAI,+fADR,UAkBI,kBAAO2B,KAAK,SAASsF,MAAM,4BAAQ9H,UAAU,mBAAmBK,QAAS,WAAQ,EAAK6I,8BAkDlG,SAAC7H,EAAD,CACI8G,gBAAiB,qBACjBX,gBAAc,EACd1F,OAAQ9C,KAAKN,MAAMmK,QACnBlC,MAAO,IACPvG,OAAQ,IACRO,MAAM,2BACN0C,kBAAkB,EAClBN,QAAS/D,KAAKiK,iBACdnG,YAAa9D,KAAKiK,iBATtB,SAWKjK,KAAKsK,cAEV,SAACjI,EAAD,CACIS,OAAQ9C,KAAKN,MAAMoK,QACnBhG,YAAa9D,KAAKkK,iBAClBtC,wBAAsB,EACtBjG,MAAM,2BACNgG,MAAO,IACPvG,OAAQ,IACR2C,QAAS/D,KAAKuL,SACdvH,UAAWhE,KAAKwL,WAChBvH,YAAajE,KAAKyL,aATtB,SAWKzL,KAAKuK,cAEV,SAAClI,EAAD,CACIS,OAAQ9C,KAAKN,MAAMqK,QACnBjG,YAAa9D,KAAKmK,iBAClBxI,MAAM,4BACNiG,wBAAsB,EAJ1B,SAMK5H,KAAKwK,cAEV,SAACnI,EAAD,CACIsF,MAAO,IACPvG,OAAQ,IACR0B,OAAQ9C,KAAKN,MAAMsK,QACnBlG,YAAa9D,KAAKoK,iBAClBzI,MAAM,4BACN2G,gBAAgB,gBAAKtH,UAAU,0BAAf,gFAChB4H,gBACI,gBAAKvH,QAASrB,KAAK2K,UAAW3J,UAAU,8BAAxC,UACI,gBAAKA,UAAU,0BAAf,UACI,kBAAOwC,KAAK,SAASsF,MAAM,2BAAO9H,UAAU,uCAGxD4G,wBAAsB,EAb1B,SAcE5H,KAAKyK,oBAIlB,EAxVgBnB,CAAiBhI,EAAAA,Y,mHCbzBQ,EAAb,0CACE,WAAYvC,GAAmD,kCACvDA,GAFV,gDAKE,WACES,KAAKT,MAAMmM,OAAS1L,KAAKT,MAAMmM,MAAM1L,UANzC,G,SAA6DsB,Y,kBCH7D,SAASqK,EAAoBC,GAC5B,IAAI/K,EAAI,IAAIgL,MAAM,uBAAyBD,EAAM,KAEjD,MADA/K,EAAEgB,KAAO,mBACHhB,EAEP8K,EAAoBG,KAAO,WAAa,MAAO,IAC/CH,EAAoBI,QAAUJ,EAC9BA,EAAoBvD,GAAK,MACzB4D,EAAOC,QAAUN","sources":["components/CodeView/index.tsx","components/demoView/index.tsx","pages/demoPage/index.tsx","components/popLayer/index.tsx","pages/popLayer/index.tsx","type/BaseComponent.ts","../node_modules/prettier|sync"],"sourcesContent":["import \"code-prettify\";\r\nimport \"code-prettify/src/prettify.css\";\r\n\r\nimport parserTypeScript from 'prettier/parser-typescript';\r\nimport prettier from 'prettier/standalone';\r\nimport parserHtml from \"prettier/parser-html\";\r\nimport {Component, createRef, CSSProperties, RefObject} from \"react\";\r\nimport \"./index.scss\";\r\nimport classNames from \"classnames\";\r\n\r\ninterface CodeViewProps {\r\n  children: string\r\n  className?: string\r\n  style?: CSSProperties\r\n  language?: \"ts\" | \"html\"\r\n  defaultShow?: boolean\r\n  canHidden?: boolean\r\n}\r\n\r\n\r\ninterface CodeViewState {\r\n  isShowCode: boolean\r\n}\r\n\r\nexport class CodeView extends Component<CodeViewProps, CodeViewState> {\r\n\r\n  private readonly codeViewAreaRef: RefObject<HTMLDivElement>\r\n  private areaMaxHeight: string\r\n\r\n  static defaultProps: CodeViewProps = {\r\n    children: \"\",\r\n    language: \"ts\",\r\n    canHidden: false\r\n  }\r\n\r\n  constructor(props: CodeViewProps | Readonly<CodeViewProps>) {\r\n    super(props);\r\n    this.state = {\r\n      isShowCode: true\r\n    }\r\n    this.codeViewAreaRef = createRef<HTMLDivElement>();\r\n    this.areaMaxHeight = \"fit-content\"\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    (window as any).PR.prettyPrint();\r\n  }\r\n\r\n  componentDidMount() {\r\n    (window as any).PR.prettyPrint();\r\n    this.areaMaxHeight = this.codeViewAreaRef.current?.clientHeight + \"px\" || \"fit-content\"\r\n    this.setState({\r\n      isShowCode: !this.props.canHidden || !!this.props.defaultShow\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let result = \"\";\r\n    try {\r\n      result = prettier.format(this.props.children, {\r\n        parser: \"typescript\",\r\n        plugins: [parserTypeScript, parserHtml]\r\n      });\r\n    } catch (e) {\r\n      console.error(\"代码格式有误，无法解析\")\r\n      result = this.props.children\r\n    }\r\n\r\n    let className = classNames(\r\n      \"lg-code-view-root\",\r\n      {\r\n        [`${this.props.className}`]: !!this.props.className,\r\n        \"lg-code-view-can-hidden\": this.props.canHidden\r\n      }\r\n    )\r\n\r\n    return (\r\n      <div className={className} style={this.props.style}>\r\n        <div ref={this.codeViewAreaRef} className=\"lg-code-view-area\"\r\n             style={{height: this.state.isShowCode ? this.areaMaxHeight : \"0\"}}>\r\n          <pre className={`prettyprint lang-js`}>\r\n              <div className=\"code_block\">\r\n                <code className=\"code_text\">{result}</code>\r\n              </div>\r\n          </pre>\r\n        </div>\r\n        {\r\n          !this.props.canHidden ? \"\" :\r\n            <div onClick={() => this.setState({isShowCode: !this.state.isShowCode})}\r\n                 className=\"lg-code-view-show-button\">\r\n              <div className={`lg-code-view-show-text ${this.state.isShowCode ? \"on-show\" : \"\"}`}>\r\n                {!this.state.isShowCode ? \"显示\" : \"隐藏\"}代码\r\n              </div>\r\n            </div>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import \"./index.scss\"\r\nimport {BaseComponent} from \"../../type/BaseComponent\";\r\nimport classNames from \"classnames\";\r\nimport { BaseProps } from \"../../type/BaseProps\";\r\nimport {CodeView} from \"@/components/CodeView\";\r\n\r\n\r\nexport interface DemoViewProps {\r\n  title: string\r\n  subtitle?: string\r\n  code?: string\r\n}\r\n\r\nexport class DemoView extends BaseComponent<DemoViewProps> {\r\n\r\n  private readonly classNamePrefix: string\r\n\r\n  constructor(props: (DemoViewProps & BaseProps) | Readonly<DemoViewProps & BaseProps>) {\r\n    super(props);\r\n    this.classNamePrefix = \"lg-demo-view\"\r\n  }\r\n\r\n  render() {\r\n    let className = classNames(\r\n      `${this.classNamePrefix}-root`,\r\n      {\r\n        [`${this.props.className}`]: !!this.props.className\r\n      }\r\n    )\r\n    return (\r\n      <div className={className} style={this.props.style}>\r\n        <div className={`${this.classNamePrefix}-title`}>{this.props.title}</div>\r\n        {\r\n          !this.props.subtitle ? \"\" :\r\n            <div className={`${this.classNamePrefix}-subtitle`}>{this.props.subtitle}</div>\r\n        }\r\n        <div className={`${this.classNamePrefix}-component-area`}>\r\n          {\r\n            this.props.children\r\n          }\r\n        </div>\r\n        {\r\n          !this.props.code? \"\":\r\n            <CodeView canHidden={true}>{this.props.code}</CodeView>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}","import {BaseComponent} from \"../../type/BaseComponent\";\r\nimport {BaseProps} from \"../../type/BaseProps\";\r\nimport classNames from \"classnames\";\r\nimport \"./index.scss\"\r\nimport {CodeView} from \"@/components/CodeView\";\r\n\r\nexport interface DemoPageProps {\r\n  title: string\r\n  subtitle?: string\r\n  importCode?: string\r\n  interfaceCode?: string\r\n}\r\n\r\n\r\nexport class DemoPage extends BaseComponent<DemoPageProps> {\r\n\r\n  private readonly classNamePrefix: string\r\n\r\n  constructor(props: (DemoPageProps & BaseProps) | Readonly<DemoPageProps & BaseProps>) {\r\n    super(props);\r\n    this.classNamePrefix = \"lg-demo-page\"\r\n  }\r\n\r\n  render() {\r\n\r\n    const className = classNames(\r\n      `${this.classNamePrefix}-root`,\r\n      {\r\n        [`${this.props.className}`]: !!this.props.className\r\n      }\r\n    )\r\n\r\n    return (\r\n      <div className={className}>\r\n        <div className={`${this.classNamePrefix}-header`}>\r\n          <div className={`${this.classNamePrefix}-title`}>{this.props.title}</div>\r\n          {\r\n            !this.props.subtitle ? \"\" :\r\n              < div className={`${this.classNamePrefix}-subtitle`}>{this.props.subtitle}</div>\r\n          }\r\n          {\r\n            !this.props.importCode ? \"\" : (\r\n              <div className={`${this.classNamePrefix}-import`}>\r\n                <div className={`${this.classNamePrefix}-import-title`}>在页面中引入组件</div>\r\n                <CodeView>\r\n                  {this.props.importCode}\r\n                </CodeView>\r\n              </div>\r\n            )\r\n\r\n          }\r\n        </div>\r\n        <div className={`${this.classNamePrefix}-body`}>\r\n          {\r\n            this.props.children\r\n          }\r\n        </div>\r\n        <div className={`${this.classNamePrefix}-footer`}>\r\n          {\r\n            !this.props.interfaceCode ? \"\" : (\r\n              <div className={`${this.classNamePrefix}-interface`}>\r\n                <div className={`${this.classNamePrefix}-interface-title`}>标签属性解析</div>\r\n                <CodeView>\r\n                  {this.props.interfaceCode}\r\n                </CodeView>\r\n              </div>\r\n            )\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","/*\r\n* @Author       : super-J\r\n* @Date         : 2021-12-29 08:41:58\r\n * @LastEditTime : 2022-02-22 21:21:34\r\n * @LastEditors  : super-J\r\n* @Description  : 弹窗组件\r\n*/\r\nimport React, { Component } from 'react'\r\nimport ReactDOM from 'react-dom';\r\nimport \"./index.scss\";\r\nlet popLayerCreateNumIndex = 0;//创建弹窗实例的次数\r\nlet popLayerZIndex = 1000;//弹出成是否拥有遮罩层\r\nlet _hasPopLayerOpen: number[] = [];//保存打多个弹窗的下标\r\n\r\n/**\r\n * @summary 使用的弹出层传入的props\r\n */\r\nexport interface PopLayerProps {\r\n    // popLayerBox\r\n    isOpen: boolean;//是否打开弹窗 | 默认值：———— \r\n    width?: number;//弹窗的总宽度 | 默认值: 400\r\n    height?: number;//弹窗的总高度 | 默认值: 300\r\n    title?: string;//弹窗头部的标题 | 默认值: Lg弹出层-默认标题\r\n    className?: string;//弹窗最外层的类名 | 默认值：————\r\n    style?: React.CSSProperties;//弹窗最外层的样式类型 | 默认值：————  | 注： 不建议使用,在本组件初始化使用后，部分样式（zIndex）有可能会被覆盖掉导致不生效。推荐使用className去修改样式\r\n\r\n    // coverLayer\r\n    isShowCoverLayer?: boolean;//是否展示遮罩层 | 默认值：true\r\n    coverLayerClass?: string;//遮罩层类名 | 默认值：————\r\n    isCoverLayerClickClose?: boolean;//是否点击遮罩层关闭弹窗 | 默认值：false\r\n\r\n    // top\r\n    isShowTopClose?: boolean;//是否显示头部的关闭按钮 | 默认值:true\r\n\r\n    // bottom\r\n    isShowBottom?: boolean;//是否显示底部的 | 默认值:true\r\n    confirmText?: string;//确认按钮需要显示的文本 | 默认值：确认\r\n    confirmClass?: string;//确认按钮元素上的类名 | 默认值：————\r\n    closeText?: string;//关闭按钮需要显示的文本 | 默认值：取消\r\n    closeClass?: string;//关闭按钮元素上的类名 | 默认值：————\r\n\r\n    // customHtml\r\n    customOfHeader?: (React.ReactDOM | React.ReactChild | React.ReactElement) | (() => React.ReactElement);//弹窗头部添加的自定义Dom | 默认值：————\r\n    headerClassName?: string;//弹窗头部添加的自定义Dom容器的类名 | 默认值：————\r\n    children?: (React.ReactDOM | React.ReactChild | React.ReactElement) | (() => React.ReactElement);// 弹窗中部添加的自定义Dom | 默认值：————\r\n    childClassName?: string;//自定义弹窗容器的类名 | 默认值：————\r\n    customOfBottom?: (React.ReactDOM | React.ReactChild | React.ReactElement) | (() => React.ReactElement);//弹窗低部添加的自定义Dom | 默认值：————\r\n    bottomClassName?: string;//弹窗低部添加的自定义Dom的类名 | 默认值：————\r\n\r\n    // function\r\n    onConfirm?: (isOpen?: boolean) => void;//点击确认按钮时触发的函数 \r\n    onClose?: (isOpen?: boolean) => void;//点击关闭按钮时触发的函数\r\n    onIconClose?: (isOpen?: boolean) => void;//点击顶部的关闭小图标时触发的函数\r\n    onShowLayer: (isOpen?: boolean) => void;//必传的弹窗开关函数打开和关闭都必执行的函数，可以在打开前和关闭后触发父组件逻辑的函数\r\n}\r\nexport interface PopLayerState {\r\n    isOpen: boolean;//弹窗是否打开\r\n    popLayerMainClassName: string;//弹窗打开的动画\r\n}\r\nexport class LgPopLayer extends Component<PopLayerProps, PopLayerState, { isOpen: boolean }> {\r\n    constructor(props: PopLayerProps | Readonly<PopLayerProps>) {\r\n        super(props);\r\n        this.state = { isOpen: false, popLayerMainClassName: '' };\r\n        this.initCoverLayer = this.initCoverLayer.bind(this);\r\n        this.popLayerMouseDown = this.popLayerMouseDown.bind(this);\r\n        this.popLayerMouseMove = this.popLayerMouseMove.bind(this);\r\n        this.popLayerMouseUp = this.popLayerMouseUp.bind(this);\r\n        this.closePopLayer = this.closePopLayer.bind(this);\r\n        this.confirmPopLayer = this.confirmPopLayer.bind(this);\r\n        this.coverLayerClose = this.coverLayerClose.bind(this);\r\n    }\r\n    private popLayerZIndex = 0;//弹出层默认层级数\r\n    private popLayerCreateNumIndex = 0//弹窗实例创建的次数\r\n    // 给props设置默认值\r\n    static defaultProps = {\r\n        isCoverLayerClickClose: false,//是否点击遮罩层关闭弹窗\r\n        isShowCoverLayer: true,//是否展示遮罩层 | 默认值：true\r\n        title: 'Lg弹出层-默认标题',//弹窗头部的标题 | 默认值:\r\n        isShowTopClose: true,//是否显示头部的关闭按钮 | 默认值:false\r\n        isShowBottom: true,//是否显示底部的 | 默认值:true\r\n        confirmText: '确定',//确认按钮需要显示的文本\r\n        closeText: '取消',//关闭按钮需要显示的文本\r\n        zIndex: popLayerZIndex,//弹窗的层级\r\n        width: 400,//弹窗的总宽度 | 默认值: 500\r\n        height: 300,//弹窗的总高度 | 默认值: 400\r\n    }\r\n\r\n    /**\r\n     * @description  : 关闭当前弹窗\r\n     * @param         { type function }  fun 点击确认时需要触发的函数\r\n     * @param         { type number }  type 0: 点击确认按钮 1: 点击关闭按钮或者取消 \r\n     * @return        { type * } \r\n     */\r\n    closePopLayer(type: number = 0, fun?: (isOpen?: boolean) => any) {\r\n        console.log('关闭页面');\r\n        document.documentElement.style.overflow = 'auto';\r\n        this.setState({\r\n            isOpen: false\r\n        }, () => {\r\n            this.props.onShowLayer && this.props.onShowLayer();\r\n            this.initCoverLayer(0, this.popLayerCreateNumIndex);\r\n            if (type == 0) { fun && fun(this.state.isOpen); return };\r\n            this.props.onClose && this.props.onClose(this.state.isOpen);\r\n        })\r\n    }\r\n    /**\r\n     * @description  : 点击确认按钮时关闭当前弹窗`\r\n     * @param         { type *}  \r\n     * @return        { type *} \r\n     */\r\n    confirmPopLayer() {\r\n        this.closePopLayer(0, this.props.onConfirm);\r\n    }\r\n    /**\r\n     * @description  : 点击顶部小图标关闭弹窗\r\n     * @param         { type * } \r\n     * @return        { type * } \r\n     */\r\n    iconClose() {\r\n        this.closePopLayer(0, this.props.onIconClose);\r\n    }\r\n    UNSAFE_componentWillReceiveProps(nextProps: PopLayerProps) {\r\n        if (this.props.isOpen == nextProps.isOpen) return;\r\n        let initCoverLayerType: number = nextProps.isOpen ? 1 : 0;// 0: 无弹窗 1:有弹窗\r\n        this.setState({ isOpen: nextProps.isOpen }, () => {\r\n            if (nextProps.isOpen) {\r\n                document.documentElement.style.overflow = 'hidden';\r\n            }\r\n            let popLayerMainClassName = nextProps.isOpen ? ' lg_popLayer_container_show lg_popLayer_main_hasBottom ' : ' lg_popLayer_main_noHasBottom ';\r\n            setTimeout(() => { this.setState({ popLayerMainClassName, }) }, 200);\r\n            this.initCoverLayer(initCoverLayerType, this.popLayerCreateNumIndex, nextProps.isShowCoverLayer);\r\n        })\r\n    }\r\n    componentWillUnmount() {\r\n        this.closePopLayer()\r\n    }\r\n    /**\r\n     * @description  : 数组去重\r\n     * @param         { type number[]}  arr 初始化的去重前的数组\r\n     * @return        { type number[]}  arr 初始化的去重后的数组\r\n     */\r\n    unique(arr: number[]): number[] {\r\n        if (!Array.isArray(arr)) { return [] }\r\n        let array = [];\r\n        for (var i = 0; i < arr.length; i++) {\r\n            if (array.indexOf(arr[i]) === -1) {\r\n                array.push(arr[i])\r\n            }\r\n        }\r\n        return array;\r\n    }\r\n    /**\r\n     * @description  : 设置遮罩层的显示与隐藏\r\n     * @param         { type number}  CoverLayerType 0: 无弹窗显示 1：有弹窗显示\r\n     * @param         { type number}  popLayerCreateNumIndex\r\n     * @param         { type boolean}  isShowCoverLayer\r\n     * @return        { type *} \r\n     */\r\n    initCoverLayer(CoverLayerType: number, popLayerCreateNumIndex: number, isShowCoverLayer: boolean = false) {\r\n        _hasPopLayerOpen = this.unique(_hasPopLayerOpen)\r\n        let coverLayerDom = document.querySelectorAll('.lg_popLayer_container_coverLayer');\r\n        // 处理有弹窗关闭的情况\r\n        if (!CoverLayerType && _hasPopLayerOpen.length) {\r\n            _hasPopLayerOpen = this.unique(_hasPopLayerOpen)\r\n            let index = _hasPopLayerOpen.indexOf(parseInt(popLayerCreateNumIndex as any))\r\n            if (index != -1) {\r\n                _hasPopLayerOpen.splice(index, 1)\r\n            }\r\n        }\r\n        if (!CoverLayerType && _hasPopLayerOpen.length) {\r\n            _hasPopLayerOpen = this.unique(_hasPopLayerOpen)\r\n            let maxIndex: number = -1;\r\n            _hasPopLayerOpen.forEach(o => {\r\n                maxIndex = o > maxIndex ? o : maxIndex;\r\n            })\r\n            popLayerCreateNumIndex = maxIndex\r\n            if (popLayerCreateNumIndex > -1) {\r\n                isShowCoverLayer = this.props.isShowCoverLayer ? true : false\r\n                CoverLayerType = 1\r\n            }\r\n        }\r\n        if (coverLayerDom.length) {\r\n            coverLayerDom.forEach((o: HTMLElement | any, i) => {\r\n                if (CoverLayerType) {\r\n                    let coverNumIndex = o.getAttribute('data-cover-index');\r\n                    if (coverNumIndex == popLayerCreateNumIndex && isShowCoverLayer) {\r\n                        setTimeout(() => {\r\n                            o.style.opacity = '0.6'\r\n                            o.style.filter = 'alpha(opacity=60)'\r\n                            o.style.zIndex = 10000;\r\n                            o.style.class = 'lg_popLayer_container_coverLayer lg_popLayer_container_coverLayer_show'\r\n                            o.previousElementSibling.style.zIndex = 10000 + (this.popLayerCreateNumIndex + 1);\r\n                            o.parentNode.style.zIndex = 10000;\r\n                            _hasPopLayerOpen.push(parseInt(coverNumIndex))\r\n                        }, 100);\r\n                    } else {\r\n                        o.style.opacity = '0'\r\n                        o.style.class = 'lg_popLayer_container_coverLayer'\r\n                        o.style.filter = 'alpha(opacity=0)'\r\n                        o.style.zIndex = this.popLayerZIndex;;\r\n                        o.previousElementSibling.style.zIndex = this.popLayerZIndex + (this.popLayerCreateNumIndex + 1);\r\n                        o.parentNode.style.zIndex = this.popLayerZIndex;\r\n                    }\r\n                } else {\r\n                    _hasPopLayerOpen.splice(popLayerCreateNumIndex, 1)\r\n                }\r\n            })\r\n        }\r\n    }\r\n    popLayerMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\r\n        let parentNode = e.currentTarget.parentNode as ParentNode as HTMLElement\r\n        let parentContainerNode = e.currentTarget.parentNode?.parentNode as ParentNode as HTMLElement;\r\n        this.maxMoveWidth = parentContainerNode.offsetWidth - parentNode.offsetWidth\r\n        this.maxMoveHeight = parentContainerNode.offsetHeight - parentNode.offsetHeight\r\n        this.divLeftWidth = e.pageX - parentNode.offsetLeft;\r\n        this.divTopHeight = e.pageY - parentNode.offsetTop;\r\n        this.parentNode = parentNode\r\n        this.isPopLayerMove = true;\r\n    }\r\n    isPopLayerMove: boolean = false;//是否开启移动\r\n    divLeftWidth: number = 0;//鼠标距离容器左边的宽度\r\n    divTopHeight: number = 0;//鼠标距离容器顶部的高度\r\n    maxMoveWidth: number = 0;//容器移动的最大距离\r\n    maxMoveHeight: number = 0;//容器移动的最大高度\r\n    parentNode: ParentNode | HTMLElement | null = null;//弹窗的Dom\r\n    /**\r\n     * @description  : popLayer移动的时候改变popLayer的left和top\r\n     * @param         { type React }  e\r\n     * @param         { type * }  MouseEvent\r\n     * @return        { type * } \r\n     */\r\n    popLayerMouseMove(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\r\n        if (this.isPopLayerMove) {\r\n            let parentNode = this.parentNode as ParentNode as HTMLElement;\r\n            let left = e.pageX - this.divLeftWidth;\r\n            let top = e.pageY - this.divTopHeight;\r\n            if (left <= 0) { left = 1; }\r\n            if (left >= this.maxMoveWidth) { left = this.maxMoveWidth - 2 }\r\n            if (top <= 0) { top = 0; }\r\n            if (top >= this.maxMoveHeight) { top = this.maxMoveHeight - 1 }\r\n            parentNode.style.left = left.toString() + 'px';\r\n            parentNode.style.top = top.toString() + 'px';\r\n        }\r\n    }\r\n    /**\r\n     * @description  : 鼠标弹起时popLayer停止移动\r\n     * @param         { type React }  e\r\n     * @param         { type * }  MouseEvent\r\n     * @return        { type * } \r\n     */\r\n    popLayerMouseUp(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\r\n        e.preventDefault();\r\n        this.isPopLayerMove = false\r\n    }\r\n    componentDidMount() {\r\n        popLayerZIndex = popLayerZIndex + 2;\r\n        this.popLayerZIndex = popLayerZIndex;\r\n        this.popLayerCreateNumIndex = popLayerCreateNumIndex++;\r\n        this.initPopLayerPosition();\r\n        window.onresize = () => {\r\n            this.initPopLayerPosition();\r\n        }\r\n        setTimeout(() => {\r\n        }, 1000 * 2);\r\n        document.body.addEventListener('mouseout', (evt: MouseEvent) => {\r\n            if (!evt) evt = window.event as any\r\n            let to = evt.relatedTarget || (evt as any).toElement\r\n            if (!to || to.nodeName == \"HTML\") {\r\n                this.isPopLayerMove = false\r\n            }\r\n        })\r\n    }\r\n    /**\r\n     * @description  : 获取非行内样式\r\n     * @param         { type any }  obj\r\n     * @param         { type string }  name\r\n     * @return        { type * } \r\n     */\r\n    getStyle(obj: any, name: string) {\r\n        if (obj.currentStyle) {\r\n            return obj.currentStyle[name]; /*仅支持IE*/\r\n        }\r\n        else {\r\n            return getComputedStyle(obj)[name as any]; /*w3c 标准*/\r\n            //兼容IE和火狐  return window.getComputedStyle.getPropertyValue(name);\r\n        }\r\n    }\r\n    private popLayerLeft = 0;//弹窗相对窗口左侧的位置\r\n    private popLayerTop = 0;//弹窗相对窗口顶部的位置\r\n    /**\r\n     * @description  : 初始化弹窗的初始位置\r\n     * @param         { type * } \r\n     * @return        { type * } \r\n     */\r\n    initPopLayerPosition() {\r\n        this.popLayerLeft = ((document.documentElement.clientWidth / 2) - (parseFloat(this.props.width as any) / 2));\r\n        this.popLayerTop = ((document.documentElement.clientHeight / 2) - (parseFloat(this.props.height as any) / 2));\r\n    }\r\n    /**\r\n     * @description  : 点击遮罩层进行关闭弹窗\r\n     * @param         { type * }  \r\n     * @return        { type * } \r\n     */\r\n    coverLayerClose() { if (this.props.isCoverLayerClickClose) { this.closePopLayer() } }\r\n    render() {\r\n        const { props, state } = this;\r\n        let popLayerStyle = Object.assign({ left: this.popLayerLeft, top: this.popLayerTop, width: props.width, height: state.isOpen ? props.height : 0, zIndex: this.popLayerZIndex + 1 }, this.props.style || {})\r\n        /**\r\n         * @description  : 使用react中的传送门\r\n         * @param         { type * } ReactDOM.createPortal 使用的传送门来建立一个不同HTML的根节点的 \r\n         * @return        { type * } \r\n         *  return ReactDOM.createPortal(\r\n         *   <div></div>,\r\n         *   document.getElementById('Lg_popLayer_root') as any\r\n         *   )\r\n         * \r\n         */\r\n        return ReactDOM.createPortal(\r\n            <div className='lg_popLayer_big_container ' onMouseUp={this.popLayerMouseUp} onMouseMove={this.popLayerMouseMove} style={{ zIndex: this.popLayerZIndex, display: state.isOpen ? 'block' : 'none' }}>\r\n                {/* 弹窗的窗体 */}\r\n                <div className={'lg_popLayer_container ' + (state.popLayerMainClassName || '') + ' ' + (props.className || '')} style={popLayerStyle} id={'lg_popLayer_container' + this.popLayerCreateNumIndex}>\r\n                    <div className='lg_popLayer_top' onMouseDown={this.popLayerMouseDown} onMouseMove={this.popLayerMouseMove} onMouseUp={this.popLayerMouseUp}>\r\n                        <div className='lg_popLayer_top_title' style={{ display: !this.props.customOfHeader ? 'block' : 'none' }}>{props.title}</div>\r\n                        <div className='lg_popLayer_top_close' onClick={() => { this.iconClose() }} style={{ display: props.isShowTopClose ? (!this.props.customOfHeader ? 'block' : 'none') : 'none' }}></div>\r\n                        <div className={'lg_popLayer_top_custom_header ' + props.headerClassName || ''} style={{ display: this.props.customOfHeader ? 'block' : 'none' }}>{props.customOfHeader}</div>\r\n                    </div>\r\n                    <div className={'lg_popLayer_main ' + (props.childClassName || '')}>{props.children}</div>\r\n                    <div className='lg_popLayer_bottom ' style={{ display: props?.isShowBottom ? \"flex\" : \"none\" }}>\r\n                        <div className='lg_popLayer_bottom_cho_box' style={{ display: !props.customOfBottom ? 'flex' : 'none' }}>\r\n                            <div className={'lg_popLayer_bottom_confirm_box ' + (props.confirmClass || '')}><input onClick={() => { this.confirmPopLayer() }} className='lg_popLayer_bottom_confirm_input input_item' value={props.confirmText} type={'button'} /></div>\r\n                            <div className={'lg_popLayer_bottom_close_box ' + (props.closeClass || '')}><input onClick={() => { this.closePopLayer(1) }} className='lg_popLayer_bottom_close_input input_item' value={props.closeText} type={'button'} /></div>\r\n                        </div>\r\n                        <div className={'lg_popLayer_bottom_cho_box_custom_bottom ' + (props.bottomClassName || '')} style={{ display: props.customOfBottom ? 'block' : 'none' }}>\r\n                            {props.customOfBottom}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* 遮罩层 */}\r\n                <div className={'lg_popLayer_container_coverLayer ' + props.coverLayerClass || ''} data-index={this.popLayerZIndex} data-cover-index={this.popLayerCreateNumIndex} style={{ zIndex: this.popLayerZIndex, }} onClick={this.coverLayerClose}></div>\r\n            </div>,\r\n            document.getElementById('Lg_popLayer_root') as any\r\n        )\r\n    }\r\n}\r\n// 创建弹窗的挂载点\r\nlet popLayerCreateIndex = 0;\r\n; (() => {\r\n    if (popLayerCreateIndex) return;\r\n    let popLayer = document.getElementById('Lg_popLayer_root');\r\n    if (popLayer) { document.removeChild(popLayer); }\r\n    let popLayerDom = document.createElement('div');\r\n    popLayerDom.style.display = 'none';\r\n    popLayerDom.setAttribute('id', 'Lg_popLayer_root');\r\n    document.body.appendChild(popLayerDom);\r\n    ++popLayerCreateIndex;\r\n    setTimeout(() => { let popLayer = document.getElementById('Lg_popLayer_root') as HTMLElement; popLayer.style.display = 'block'; }, 1000 * 1.5);\r\n})();\r\n","import { CodeView } from '@/components/CodeView';\r\nimport { DemoView } from '@/components/demoView';\r\nimport { LgPopLayer } from '@/components/popLayer';\r\nimport React, { Component } from 'react'\r\nimport { DemoPage } from '../demoPage';\r\nimport './index.scss'\r\ninterface PopLayerState {\r\n    isOpenPopLayer: boolean;\r\n    name?: string | null;\r\n    nowTime?: Date | string;\r\n    isOpen1: boolean;\r\n    isOpen2: boolean;\r\n    isOpen3: boolean;\r\n    isOpen4: boolean;\r\n}\r\n\r\nexport default class popLayer extends Component<{}, PopLayerState> {\r\n    constructor(props: any) {\r\n        super(props)\r\n        this.state = { isOpenPopLayer: true, name: '弹窗', isOpen1: false, isOpen2: false, isOpen3: false, isOpen4: false, }\r\n        this.showPopLayerFun1 = this.showPopLayerFun1.bind(this)\r\n        this.showPopLayerFun2 = this.showPopLayerFun2.bind(this)\r\n        this.showPopLayerFun3 = this.showPopLayerFun3.bind(this)\r\n        this.showPopLayerFun4 = this.showPopLayerFun4.bind(this)\r\n        this.initTime = this.initTime.bind(this)\r\n        this.initDom1 = this.initDom1.bind(this)\r\n        this.initDom2 = this.initDom2.bind(this)\r\n        this.initDom3 = this.initDom3.bind(this)\r\n        this.initDom4 = this.initDom4.bind(this)\r\n        this.closePop1 = this.closePop1.bind(this)\r\n        this.closePop4 = this.closePop4.bind(this)\r\n    }\r\n    initTime() {\r\n        let time = new Date().toTimeString();\r\n        this.setState({\r\n            nowTime: time\r\n        })\r\n        return time\r\n    }\r\n    initDom1() {\r\n        return (\r\n            <div className='popLayer1_container'>\r\n                <h3 style={{ margin: 0, lineHeight: 1 }}>春运快讯</h3>\r\n                <p>\r\n                    2022年春运正式开启！\r\n                </p>\r\n                <p>\r\n                    2022年铁路春运自1月17日开始，2月25日结束，共40天，全国铁路旅客发送量预计达到2.8亿人次。\r\n                </p>\r\n                <p>\r\n                    铁路部门表示，今年春运每日可提供客座席位1050万个以上，较2019年提高10%以上。\r\n                </p>\r\n                <p>\r\n                    按照“适需安排、应急有备，精准匹配、梯次投放”原则，铁路部门根据客流变化和车票预售情况，更加精准地实施“一日一图”，动态安排运力投放和客车开行，全力满足保障旅客出行和疫情防控的双重需要。\r\n                </p>\r\n                <p>\r\n                    此外，如果局部地区出现疫情，将快速调整运输组织，停开、减开涉疫地区旅客列车，减少人员流动。\r\n                </p>\r\n\r\n\r\n                <p>\r\n                    这些目的地或成“最热”\r\n                </p>\r\n\r\n\r\n                <p>\r\n                    此前有平台预测了今年春运的热门目的地。\r\n                </p>\r\n                <p>\r\n\r\n                    去哪儿大数据显示，2022年春运铁路出行十大热门目的地为：重庆、武汉、哈尔滨、长沙、贵阳、成都、南昌、沈阳、长春、阜阳。西南、东北地区人群购票积极性较高。\r\n                </p>\r\n\r\n                <p style={{ marginBottom: 0 }}>\r\n                    而十大热门出发城市为：广州，北京，上海，杭州，成都，苏州，南京，东莞，武汉，长沙。其中东莞相较往年增幅较为明显，第一次跻身春运十大出发地。\r\n                </p>\r\n            </div>)\r\n    }\r\n    initDom2() {\r\n        let list: (string | number)[] = [\r\n            `北京交通大学中国综合交通研究中心执行主任 教授 毛保华：按照年龄更加合理，咱们国家现在一个是管理水平提高了，我们现在可以有信息化的管理水平。国家的治理水平提高了，我们现在几乎所有的人都有身份证，都能知道他的年龄。我们的国家也富强了，把福利更多地给老百姓，给孩子成长，我觉得是非常及时的一个政策。\r\n        专家：避免身高一刀切，让优惠票普惠儿童\r\n        近年来，社会不同领域都对“一刀切”的火车儿童票规定提出了意见和建议，此次国家铁路局拟修订原有的规章，可谓是恰逢其时。\r\n        在2018年全国两会期间，有全国人大代表和全国政协委员曾分别就“儿童票”制度提出了建议。建议避免采用按身高“一刀切”的规定，以保障“大个子儿童”应有的福利，体现公平。\r\n        2019年，安徽的11岁儿童小刘因身高超出1.5米的标准而被要求补票后，起诉铁路部门。`, `小刘的父亲：我的孩子是通过12306购票时，身份证号码上是有他的出生年月日，也就是说他是法律规定的一个儿童，后来在火车上要求以身高要求进行测量，我当时在这上面提出异议。`,\r\n            '你好，我们的时候的说法华东数控就回复是肯定发哈删掉卡或付扩所多军军军军军就看看看时间多喝几杯浮点数富士达会计法好']\r\n        return (\r\n            <div>\r\n                <ul style={{ margin: 0 }}>\r\n                    {list?.map((o, i) => {\r\n                        return (\r\n                            <li>{o}</li>\r\n                        )\r\n                    })}\r\n                </ul>\r\n            </div>)\r\n    }\r\n    initDom3() {\r\n        return (\r\n            <div className='popLayer3_container'>\r\n                <h4 style={{ margin: 0, lineHeight: 1 }}>热点新闻</h4>\r\n                <p>冬奥会上的激情庆祝瞬间</p>\r\n                <input type=\"button\" value=\"查看新闻\" className='comment_position' onClick={() => { this.showPopLayerFun4() }} />\r\n            </div>)\r\n    }\r\n    initDom4() {\r\n        return (\r\n            <div className='popLayer4_container'>\r\n                <div className='popLayer4_container_p'>\r\n                    北京2022年冬奥会正如火如荼地进行。运动员们脚踩冰刀雪板，驰骋冰雪赛场，演绎出冰天雪地里炙热的活力与激情。戳图↓看北京冬奥会赛场上运动员们激情庆祝的精彩瞬间，总有一张触动你的心弦。（新华社冬奥报道团）\r\n                </div>\r\n                <img className='popLayer4_container_img' src=\"https://iknow-pic.cdn.bcebos.com/e850352ac65c1038597fbe50a0119313b07e891a\" alt=\"体育运动\" />\r\n            </div>)\r\n    }\r\n\r\n    showPopLayerFun1() {\r\n        this.setState({\r\n            isOpen1: !this.state.isOpen1\r\n        })\r\n    }\r\n    showPopLayerFun2(isOpen?: boolean) {\r\n        console.log(isOpen)\r\n        this.setState({\r\n            isOpen2: !this.state.isOpen2\r\n        })\r\n    }\r\n    showPopLayerFun3() {\r\n        this.setState({\r\n            isOpen3: !this.state.isOpen3\r\n        })\r\n    }\r\n    showPopLayerFun4() {\r\n        this.setState({ isOpen4: !this.state.isOpen4 })\r\n    }\r\n    componentDidMount() {\r\n\r\n    }\r\n    closePop1(isOpen: boolean) {\r\n        this.setState({\r\n            isOpen1: isOpen\r\n        })\r\n    }\r\n    closePop4() {\r\n        this.setState({ isOpen4: false }, () => { document.documentElement.style.overflow = 'auto' })\r\n\r\n    }\r\n    isConfirm2(isOpen?: boolean) {\r\n    }\r\n    isClose2(isOpen?: boolean) {\r\n    }\r\n    isIconClose2(isOpen?: boolean) {\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className='components-show-box'>\r\n                    <DemoPage title=\"G003 弹窗\" subtitle=\"\" className=\"lg-breadcrumb-demo-page\"\r\n                        importCode={`import { LgPopLayer } from '@/components/popLayer';`}\r\n                        interfaceCode={`\r\n/**\r\n * @summary 使用的弹出层传入的props\r\n */\r\nexport interface PopLayerProps {\r\n    // popLayerBox\r\n    isOpen: boolean;//是否打开弹窗 | 默认值：-- | 是否必传:true\r\n    width?: number;//弹窗的总宽度 | 默认值: 400 | 是否必传:false\r\n    height?: number;//弹窗的总高度 | 默认值: 300 | 是否必传:false\r\n    title?: string;//弹窗头部的标题 | 默认值: Lg弹出层-默认标题 | 是否必传:false\r\n    className?: string;//弹窗最外层的类名 | 默认值：-- | 是否必传:false\r\n    style?: React.CSSProperties;//弹窗最外层的样式类型 | 默认值：--  | 注： 不建议使用,在本组件初始化使用后，\r\n    部分样式（zIndex）有可能会被覆盖掉导致不生效。推荐使用className去修改样式 | 是否必传:false\r\n\r\n    // coverLayer\r\n    isShowCoverLayer?: boolean;//是否展示遮罩层 | 默认值：true | 是否必传:false\r\n    coverLayerClass?: string;//遮罩层类名 | 默认值：-- | 是否必传:false\r\n    isCoverLayerClickClose?: boolean;//是否点击遮罩层关闭弹窗 | 默认值：false | 是否必传:false\r\n\r\n    // top\r\n    isShowTopClose?: boolean;//是否显示头部的关闭按钮 | 默认值:true | 是否必传:false\r\n\r\n    // bottom\r\n    isShowBottom?: boolean;//是否显示底部的 | 默认值:true | 是否必传:false\r\n    confirmText?: string;//确认按钮需要显示的文本 | 默认值：确认 | 是否必传:false\r\n    confirmClass?: string;//确认按钮元素上的类名 | 默认值：-- | 是否必传:false\r\n    closeText?: string;//关闭按钮需要显示的文本 | 默认值：取消 | 是否必传:false\r\n    closeClass?: string;//关闭按钮元素上的类名 | 默认值：-- | 是否必传:false\r\n\r\n    // customHtml\r\n    customOfHeader?: (React.ReactDOM | React.ReactChild | React.ReactElement) | (() => React.ReactElement);//弹窗头部添加的自定义Dom | 默认值：-- | 是否必传:false\r\n    headerClassName?: string;//弹窗头部添加的自定义Dom容器的类名 | 默认值：-- | 是否必传:false\r\n    children?: (React.ReactDOM | React.ReactChild | React.ReactElement) | (() => React.ReactElement);// 弹窗中部添加的自定义Dom | 默认值：-- | 是否必传:false\r\n    childClassName?: string;//自定义弹窗容器的类名 | 默认值：-- | 是否必传:false\r\n    customOfBottom?: (React.ReactDOM | React.ReactChild | React.ReactElement) | (() => React.ReactElement);//弹窗低部添加的自定义Dom | 默认值：-- \r\n    | 是否必传:false (注:在关闭弹窗时若出现无法滚动需要在关闭的时候设置:document.documentElement.style.overflow = 'auto')\r\n    bottomClassName?: string;//弹窗低部添加的自定义Dom的类名 | 默认值：-- | 是否必传:false\r\n\r\n    // function\r\n    onConfirm?: (isOpen?: boolean) => void;//点击确认按钮时触发的函数  | 是否必传:false\r\n    onClose?: (isOpen?: boolean) => void;//点击关闭按钮时触发的函数 | 是否必传:false\r\n    onIconClose?: (isOpen?: boolean) => void;//点击顶部的关闭小图标时触发的函数 | 是否必传:false\r\n    onShowLayer: (isOpen?: boolean) => void;//必传的弹窗开关函数打开和关闭都必执行的函数，可以在打开前和关闭后触发父组件逻辑的函数 | 是否必传:true\r\n}\r\n                    `\r\n                        }>\r\n                        <DemoView title=\"popLayer 弹出案例1:\" code={`\r\ninitDom1() {\r\n    return (\r\n        <div className='open_1'>\r\n            2022年春运正式开启！\r\n\r\n            2022年铁路春运自1月17日开始，2月25日结束，共40天，全国铁路旅客发送量预计达到2.8亿人次。\r\n        </div>)\r\n}\r\n\r\nshowPopLayerFun1() {\r\n    this.setState({\r\n        isOpen1: !this.state.isOpen1\r\n    })\r\n}\r\n\r\n<LgPopLayer\r\n    coverLayerClass={'weekly_publication'}\r\n    isShowTopClose={false}\r\n    isOpen={this.state.isOpen1}\r\n    width={700}\r\n    height={500}\r\n    title='打开弹窗1'\r\n    isShowCoverLayer={false}\r\n    onClose={this.showPopLayerFun1}\r\n    onShowLayer={this.showPopLayerFun1}\r\n>\r\n    {this.initDom1()}\r\n</LgPopLayer>\r\n\r\n<input type=\"button\" value=\"打开弹窗1\" className='comment_position' onClick={this.showPopLayerFun1} />\r\n                    `}>\r\n                            <input type=\"button\" value=\"打开弹窗1\" className='comment_position' onClick={this.showPopLayerFun1} />\r\n\r\n                        </DemoView>\r\n                        <DemoView className='' title={'popLayer 弹出案例2:'}\r\n                            code=\r\n                            {\r\n                                `\r\n<LgPopLayer isOpen={this.state.isOpen2}\r\n    onShowLayer={this.showPopLayerFun2}\r\n    title='打开弹窗2'\r\n    onClose={this.isClose2}\r\n    onConfirm={this.isConfirm2}\r\n    onIconClose={this.isIconClose2}\r\n>\r\n    <div className='components-show-example-title'>popLayer 弹出案例3:</div>\r\n</LgPopLayer>\r\n\r\n<input type=\"button\" value=\"打开弹窗2\" className='comment_position' onClick={() => { this.showPopLayerFun2() }} />\r\n                                    `\r\n                            }\r\n                        >\r\n                            <input type=\"button\" value=\"打开弹窗2\" className='comment_position' onClick={() => { this.showPopLayerFun2() }} />\r\n                        </DemoView>\r\n                        {/* <DemoView className='' title={'popLayer 弹出案例3:'}\r\n                            code=\r\n\r\n                            {\r\n                                `\r\ninitDom3() {\r\n    return (\r\n        <div>\r\n        <input type=\"button\" value=\"打开弹窗2\" className='comment_position' onClick={() => { this.showPopLayerFun2() }} />\r\n        </div>\r\n    )\r\n}\r\n\r\n<LgPopLayer\r\n    isOpen={this.state.isOpen3}\r\n    onShowLayer={this.showPopLayerFun3}\r\n    title='打开弹窗3'\r\n>\r\n{this.initDom3()}\r\n</LgPopLayer>\r\n\r\n<input type=\"button\" value=\"打开弹窗3\" className='comment_position' onClick={this.showPopLayerFun3} />                \r\n                                                `\r\n                            }>\r\n                            <input type=\"button\" value=\"打开弹窗3\" className='comment_position' onClick={this.showPopLayerFun3} />\r\n                        </DemoView>\r\n                        <DemoView className='' title={'popLayer 弹出案例4:'}\r\n                            code={\r\n                                `\r\n<LgPopLayer\r\n    isOpen={this.state.isOpen4}\r\n    onShowLayer={this.showPopLayerFun4}\r\n    title='打开弹窗4'\r\n    customOfHeader={<>nihaoisdfh asd</>}\r\n    customOfBottom={<div onClick={this.closePop4} >点我关闭弹窗，我是自定义的</div>}\r\n    isCoverLayerClickClose\r\n>\r\n{this.initDom4()}\r\n</LgPopLayer>\r\n\r\n<input type=\"button\" value=\"打开弹窗4\" className='comment_position' onClick={this.showPopLayerFun4} />\r\n                                            `\r\n                            }>\r\n                            <input type=\"button\" value=\"打开弹窗4\" className='comment_position' onClick={this.showPopLayerFun4} />\r\n                        </DemoView> */}\r\n                    </DemoPage>\r\n                </div>\r\n\r\n                <LgPopLayer\r\n                    coverLayerClass={'weekly_publication'}\r\n                    isShowTopClose\r\n                    isOpen={this.state.isOpen1}\r\n                    width={700}\r\n                    height={500}\r\n                    title='春运快讯'\r\n                    isShowCoverLayer={false}\r\n                    onClose={this.showPopLayerFun1}\r\n                    onShowLayer={this.showPopLayerFun1}\r\n                >\r\n                    {this.initDom1()}\r\n                </LgPopLayer>\r\n                <LgPopLayer\r\n                    isOpen={this.state.isOpen2}\r\n                    onShowLayer={this.showPopLayerFun2}\r\n                    isCoverLayerClickClose\r\n                    title='精简文章'\r\n                    width={700}\r\n                    height={500}\r\n                    onClose={this.isClose2}\r\n                    onConfirm={this.isConfirm2}\r\n                    onIconClose={this.isIconClose2}\r\n                >\r\n                    {this.initDom2()}\r\n                </LgPopLayer>\r\n                <LgPopLayer\r\n                    isOpen={this.state.isOpen3}\r\n                    onShowLayer={this.showPopLayerFun3}\r\n                    title='打开弹窗3'\r\n                    isCoverLayerClickClose\r\n                >\r\n                    {this.initDom3()}\r\n                </LgPopLayer>\r\n                <LgPopLayer\r\n                    width={500}\r\n                    height={600}\r\n                    isOpen={this.state.isOpen4}\r\n                    onShowLayer={this.showPopLayerFun4}\r\n                    title='打开弹窗4'\r\n                    customOfHeader={<div className='popLayer4_custom_header'>冬奥会上的激情庆祝瞬间</div>}\r\n                    customOfBottom={\r\n                        <div onClick={this.closePop4} className='popLayer4_custom_bottom_box'>\r\n                            <div className='popLayer4_custom_bottom'>\r\n                                <input type=\"button\" value=\"我已知晓\" className='popLayer4_custom_bottom_button' />\r\n                            </div>\r\n                        </div>}\r\n                    isCoverLayerClickClose\r\n                >{this.initDom4()}\r\n                </LgPopLayer>\r\n            </>\r\n        )\r\n    }\r\n}","import {Component} from \"react\";\r\nimport {BaseProps} from \"./BaseProps\";\r\n\r\nexport class BaseComponent<T = {}, S = {}, SS = any> extends Component<T & BaseProps, S, SS>{\r\n  constructor(props: (T & BaseProps) | Readonly<T & BaseProps>) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.onRef && this.props.onRef(this)\r\n  }\r\n}","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 26291;\nmodule.exports = webpackEmptyContext;"],"names":["CodeView","props","codeViewAreaRef","areaMaxHeight","state","isShowCode","createRef","window","PR","prettyPrint","this","current","clientHeight","setState","canHidden","defaultShow","result","prettier","children","parser","plugins","parserTypeScript","parserHtml","e","console","error","className","classNames","style","ref","height","onClick","Component","defaultProps","language","DemoView","classNamePrefix","title","subtitle","code","BaseComponent","DemoPage","importCode","interfaceCode","popLayerCreateNumIndex","popLayerZIndex","_hasPopLayerOpen","LgPopLayer","isPopLayerMove","divLeftWidth","divTopHeight","maxMoveWidth","maxMoveHeight","parentNode","popLayerLeft","popLayerTop","isOpen","popLayerMainClassName","initCoverLayer","bind","popLayerMouseDown","popLayerMouseMove","popLayerMouseUp","closePopLayer","confirmPopLayer","coverLayerClose","type","fun","log","document","documentElement","overflow","onShowLayer","onClose","onConfirm","onIconClose","nextProps","initCoverLayerType","setTimeout","isShowCoverLayer","arr","Array","isArray","array","i","length","indexOf","push","CoverLayerType","unique","coverLayerDom","querySelectorAll","index","parseInt","splice","maxIndex","forEach","o","coverNumIndex","getAttribute","opacity","filter","zIndex","class","previousElementSibling","currentTarget","parentContainerNode","offsetWidth","offsetHeight","pageX","offsetLeft","pageY","offsetTop","left","top","toString","preventDefault","initPopLayerPosition","onresize","body","addEventListener","evt","event","to","relatedTarget","toElement","nodeName","obj","name","currentStyle","getComputedStyle","clientWidth","parseFloat","width","isCoverLayerClickClose","popLayerStyle","Object","assign","ReactDOM","onMouseUp","onMouseMove","display","id","onMouseDown","customOfHeader","iconClose","isShowTopClose","headerClassName","childClassName","isShowBottom","customOfBottom","confirmClass","value","confirmText","closeClass","closeText","bottomClassName","coverLayerClass","getElementById","popLayerCreateIndex","popLayer","removeChild","popLayerDom","createElement","setAttribute","appendChild","isOpenPopLayer","isOpen1","isOpen2","isOpen3","isOpen4","showPopLayerFun1","showPopLayerFun2","showPopLayerFun3","showPopLayerFun4","initTime","initDom1","initDom2","initDom3","initDom4","closePop1","closePop4","time","Date","toTimeString","nowTime","margin","lineHeight","marginBottom","list","map","src","alt","isClose2","isConfirm2","isIconClose2","onRef","webpackEmptyContext","req","Error","keys","resolve","module","exports"],"sourceRoot":""}