{"version":3,"file":"static/js/650.b12af4c7.chunk.js","mappings":"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","sources":["components/CodeView/index.tsx","components/popLayer/index.tsx","pages/popLayer/index.tsx","../node_modules/prettier|sync"],"sourcesContent":["import \"code-prettify\";\r\nimport \"code-prettify/src/prettify.css\";\r\n\r\nimport parserTypeScript from 'prettier/parser-typescript';\r\nimport prettier from 'prettier/standalone';\r\nimport parserHtml from \"prettier/parser-html\";\r\nimport {Component, CSSProperties} from \"react\";\r\nimport \"./index.scss\";\r\n\r\ninterface CodeViewProps {\r\n  children: string\r\n  className?: string\r\n  style?: CSSProperties\r\n  language?: \"ts\" | \"html\"\r\n}\r\n\r\nexport class CodeView extends Component<CodeViewProps, {}> {\r\n\r\n  static defaultProps: CodeViewProps = {\r\n    children: \"\",\r\n    language: \"ts\"\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Readonly<{}>, prevState: Readonly<{ selectedIndex: number }>, snapshot?: any) {\r\n    (window as any).PR.prettyPrint();\r\n  }\r\n\r\n  componentDidMount() {\r\n    (window as any).PR.prettyPrint();\r\n  }\r\n\r\n  render() {\r\n    let result = \"\";\r\n    try {\r\n      result = prettier.format(this.props.children, {\r\n        parser: \"typescript\",\r\n        plugins: [parserTypeScript, parserHtml]\r\n      });\r\n    } catch (e) {\r\n      console.error(\"代码格式有误，无法解析\")\r\n      result = this.props.children\r\n    }\r\n    return (\r\n      <pre className={`lg-code-view prettyprint lang-js ${this.props.className || \"\"}`} style={this.props.style}>\r\n          <div className=\"code_block\">\r\n            <code className=\"code_text\">{result}</code>\r\n          </div>\r\n      </pre>\r\n    )\r\n  }\r\n}\r\n","/*\r\n* @Author       : super-J\r\n* @Date         : 2021-12-29 08:41:58\r\n * @LastEditTime : 2022-01-19 10:31:28\r\n * @LastEditors  : super-J\r\n* @Description  : 弹窗组件\r\n*/\r\nimport React, { Component } from 'react'\r\nimport ReactDOM from 'react-dom';\r\nimport \"./index.scss\";\r\nlet popLayerCreateNumIndex = 0;//创建弹窗实例的次数\r\nlet popLayerZIndex = 1000;//弹出成是否拥有遮罩层\r\nlet _hasPopLayerOpen: number[] = [];//保存打多个弹窗的下标\r\n\r\n/**\r\n * @summary 使用的弹出层传入的props\r\n */\r\nexport interface PopLayerProps {\r\n    // popLayerBox\r\n    isOpen: boolean;//是否打开弹窗 | 默认值：———— \r\n    width?: number;//弹窗的总宽度 | 默认值: 400\r\n    height?: number;//弹窗的总高度 | 默认值: 300\r\n    title?: string;//弹窗头部的标题 | 默认值: Lg弹出层-默认标题\r\n    className?: string;//弹窗最外层的类名 | 默认值：————\r\n    style?: React.CSSProperties;//弹窗最外层的样式类型 | 默认值：————  | 注： 不建议使用,在本组件初始化使用后，部分样式（zIndex）有可能会被覆盖掉导致不生效。推荐使用className去修改样式\r\n\r\n    // coverLayer\r\n    isShowCoverLayer?: boolean;//是否展示遮罩层 | 默认值：true\r\n    coverLayerClass?: string;//遮罩层类名 | 默认值：————\r\n    isCoverLayerClickClose?: boolean;//是否点击遮罩层关闭弹窗 | 默认值：false\r\n\r\n    // top\r\n    isShowTopClose?: boolean;//是否显示头部的关闭按钮 | 默认值:true\r\n\r\n    // bottom\r\n    isShowBottom?: boolean;//是否显示底部的 | 默认值:true\r\n    confirmText?: string;//确认按钮需要显示的文本 | 默认值：确认\r\n    confirmClass?: string;//确认按钮元素上的类名 | 默认值：————\r\n    closeText?: string;//关闭按钮需要显示的文本 | 默认值：取消\r\n    closeClass?: string;//关闭按钮元素上的类名 | 默认值：————\r\n\r\n    // customHtml\r\n    customOfHeader?: (React.ReactDOM | React.ReactChild | React.ReactElement) | (() => React.ReactElement);//弹窗头部添加的自定义Dom | 默认值：————\r\n    headerClassName?: string;//弹窗头部添加的自定义Dom容器的类名 | 默认值：————\r\n    children?: (React.ReactDOM | React.ReactChild | React.ReactElement) | (() => React.ReactElement);// 弹窗中部添加的自定义Dom | 默认值：————\r\n    childClassName?: string;//自定义弹窗容器的类名 | 默认值：————\r\n    customOfBottom?: (React.ReactDOM | React.ReactChild | React.ReactElement) | (() => React.ReactElement);//弹窗低部添加的自定义Dom | 默认值：————\r\n    bottomClassName?: string;//弹窗低部添加的自定义Dom的类名 | 默认值：————\r\n\r\n    // function\r\n    onConfirm?: (isOpen?: boolean) => void;//点击确认按钮时触发的函数 \r\n    onClose?: (isOpen?: boolean) => void;//点击关闭按钮时触发的函数\r\n    onIconClose?: (isOpen?: boolean) => void;//点击顶部的关闭小图标时触发的函数\r\n    onShowLayer: (isOpen?: boolean) => void;//必传的弹窗开关函数打开和关闭都必执行的函数，可以在打开前和关闭后触发父组件逻辑的函数\r\n}\r\nexport interface PopLayerState {\r\n    isOpen: boolean;//弹窗是否打开\r\n    popLayerMainClassName: string;//弹窗打开的动画\r\n}\r\nexport class LgPopLayer extends Component<PopLayerProps, PopLayerState, { isOpen: boolean }> {\r\n    constructor(props: PopLayerProps | Readonly<PopLayerProps>) {\r\n        super(props);\r\n        this.state = { isOpen: false, popLayerMainClassName: '' };\r\n        this.initCoverLayer = this.initCoverLayer.bind(this);\r\n        this.popLayerMouseDown = this.popLayerMouseDown.bind(this);\r\n        this.popLayerMouseMove = this.popLayerMouseMove.bind(this);\r\n        this.popLayerMouseUp = this.popLayerMouseUp.bind(this);\r\n        this.closePopLayer = this.closePopLayer.bind(this);\r\n        this.confirmPopLayer = this.confirmPopLayer.bind(this);\r\n        this.coverLayerClose = this.coverLayerClose.bind(this);\r\n    }\r\n    private popLayerZIndex = 0;//弹出层默认层级数\r\n    private popLayerCreateNumIndex = 0//弹窗实例创建的次数\r\n    // 给props设置默认值\r\n    static defaultProps = {\r\n        isCoverLayerClickClose: false,//是否点击遮罩层关闭弹窗\r\n        isShowCoverLayer: true,//是否展示遮罩层 | 默认值：true\r\n        title: 'Lg弹出层-默认标题',//弹窗头部的标题 | 默认值:\r\n        isShowTopClose: true,//是否显示头部的关闭按钮 | 默认值:false\r\n        isShowBottom: true,//是否显示底部的 | 默认值:true\r\n        confirmText: '确认',//确认按钮需要显示的文本\r\n        closeText: '取消',//关闭按钮需要显示的文本\r\n        zIndex: popLayerZIndex,//弹窗的层级\r\n        width: 400,//弹窗的总宽度 | 默认值: 500\r\n        height: 300,//弹窗的总高度 | 默认值: 400\r\n    }\r\n\r\n    /**\r\n     * @description  : 关闭当前弹窗\r\n     * @param         { type function }  fun 点击确认时需要触发的函数\r\n     * @param         { type number }  type 0: 点击确认按钮 1: 点击关闭按钮或者取消 \r\n     * @return        { type * } \r\n     */\r\n    closePopLayer(type: number = 0, fun?: (isOpen?: boolean) => any) {\r\n        this.setState({\r\n            isOpen: false\r\n        }, () => {\r\n            this.props.onShowLayer && this.props.onShowLayer();\r\n            this.initCoverLayer(0, this.popLayerCreateNumIndex);\r\n            if (type == 0) { fun && fun(this.state.isOpen); return };\r\n            this.props.onClose && this.props.onClose(this.state.isOpen);\r\n        })\r\n    }\r\n    /**\r\n     * @description  : 点击确认按钮时关闭当前弹窗`\r\n     * @param         { type *}  \r\n     * @return        { type *} \r\n     */\r\n    confirmPopLayer() {\r\n        this.closePopLayer(0, this.props.onConfirm);\r\n    }\r\n    /**\r\n     * @description  : 点击顶部小图标关闭弹窗\r\n     * @param         { type * } \r\n     * @return        { type * } \r\n     */\r\n    iconClose() {\r\n        this.closePopLayer(0, this.props.onIconClose);\r\n    }\r\n    UNSAFE_componentWillReceiveProps(nextProps: PopLayerProps) {\r\n        if (this.props.isOpen == nextProps.isOpen) return;\r\n        let initCoverLayerType: number = nextProps.isOpen ? 1 : 0;// 0: 无弹窗 1:有弹窗\r\n        this.setState({ isOpen: nextProps.isOpen }, () => {\r\n            let popLayerMainClassName = nextProps.isOpen ? ' lg_popLayer_container_show lg_popLayer_main_hasBottom ' : ' lg_popLayer_main_noHasBottom ';\r\n            setTimeout(() => { this.setState({ popLayerMainClassName, }) }, 200);\r\n            this.initCoverLayer(initCoverLayerType, this.popLayerCreateNumIndex, nextProps.isShowCoverLayer);\r\n        })\r\n    }\r\n    /**\r\n     * @description  : 数组去重\r\n     * @param         { type number[]}  arr 初始化的去重前的数组\r\n     * @return        { type number[]}  arr 初始化的去重后的数组\r\n     */\r\n    unique(arr: number[]): number[] {\r\n        if (!Array.isArray(arr)) { return [] }\r\n        let array = [];\r\n        for (var i = 0; i < arr.length; i++) {\r\n            if (array.indexOf(arr[i]) === -1) {\r\n                array.push(arr[i])\r\n            }\r\n        }\r\n        return array;\r\n    }\r\n    /**\r\n     * @description  : 设置遮罩层的显示与隐藏\r\n     * @param         { type number}  CoverLayerType 0: 无弹窗显示 1：有弹窗显示\r\n     * @param         { type number}  popLayerCreateNumIndex\r\n     * @param         { type boolean}  isShowCoverLayer\r\n     * @return        { type *} \r\n     */\r\n    initCoverLayer(CoverLayerType: number, popLayerCreateNumIndex: number, isShowCoverLayer: boolean = false) {\r\n        _hasPopLayerOpen = this.unique(_hasPopLayerOpen)\r\n        let coverLayerDom = document.querySelectorAll('.lg_popLayer_container_coverLayer');\r\n        // 处理有弹窗关闭的情况\r\n        if (!CoverLayerType && _hasPopLayerOpen.length) {\r\n            _hasPopLayerOpen = this.unique(_hasPopLayerOpen)\r\n            let index = _hasPopLayerOpen.indexOf(parseInt(popLayerCreateNumIndex as any))\r\n            if (index != -1) {\r\n                _hasPopLayerOpen.splice(index, 1)\r\n            }\r\n        }\r\n        if (!CoverLayerType && _hasPopLayerOpen.length) {\r\n            _hasPopLayerOpen = this.unique(_hasPopLayerOpen)\r\n            let maxIndex: number = -1;\r\n            _hasPopLayerOpen.forEach(o => {\r\n                maxIndex = o > maxIndex ? o : maxIndex;\r\n            })\r\n            popLayerCreateNumIndex = maxIndex\r\n            if (popLayerCreateNumIndex > -1) {\r\n                isShowCoverLayer = this.props.isShowCoverLayer ? true : false\r\n                CoverLayerType = 1\r\n            }\r\n        }\r\n        if (coverLayerDom.length) {\r\n            coverLayerDom.forEach((o: HTMLElement | any, i) => {\r\n                if (CoverLayerType) {\r\n                    let coverNumIndex = o.getAttribute('data-cover-index');\r\n                    if (coverNumIndex == popLayerCreateNumIndex && isShowCoverLayer) {\r\n                        setTimeout(() => {\r\n                            o.style.opacity = '0.6'\r\n                            o.style.filter = 'alpha(opacity=60)'\r\n                            o.style.zIndex = 10000;\r\n                            o.style.class = 'lg_popLayer_container_coverLayer lg_popLayer_container_coverLayer_show'\r\n                            o.previousElementSibling.style.zIndex = 10000 + (this.popLayerCreateNumIndex + 1);\r\n                            o.parentNode.style.zIndex = 10000;\r\n                            _hasPopLayerOpen.push(parseInt(coverNumIndex))\r\n                        }, 100);\r\n                    } else {\r\n                        o.style.opacity = '0'\r\n                        o.style.class = 'lg_popLayer_container_coverLayer'\r\n                        o.style.filter = 'alpha(opacity=0)'\r\n                        o.style.zIndex = this.popLayerZIndex;;\r\n                        o.previousElementSibling.style.zIndex = this.popLayerZIndex + (this.popLayerCreateNumIndex + 1);\r\n                        o.parentNode.style.zIndex = this.popLayerZIndex;\r\n                    }\r\n                } else {\r\n                    _hasPopLayerOpen.splice(popLayerCreateNumIndex, 1)\r\n                }\r\n            })\r\n        }\r\n    }\r\n    popLayerMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\r\n        let parentNode = e.currentTarget.parentNode as ParentNode as HTMLElement\r\n        let parentContainerNode = e.currentTarget.parentNode?.parentNode as ParentNode as HTMLElement;\r\n        this.maxMoveWidth = parentContainerNode.offsetWidth - parentNode.offsetWidth\r\n        this.maxMoveHeight = parentContainerNode.offsetHeight - parentNode.offsetHeight\r\n        this.divLeftWidth = e.pageX - parentNode.offsetLeft;\r\n        this.divTopHeight = e.pageY - parentNode.offsetTop;\r\n        this.parentNode = parentNode\r\n        this.isPopLayerMove = true;\r\n    }\r\n    isPopLayerMove: boolean = false;//是否开启移动\r\n    divLeftWidth: number = 0;//鼠标距离容器左边的宽度\r\n    divTopHeight: number = 0;//鼠标距离容器顶部的高度\r\n    maxMoveWidth: number = 0;//容器移动的最大距离\r\n    maxMoveHeight: number = 0;//容器移动的最大高度\r\n    parentNode: ParentNode | HTMLElement | null = null;//弹窗的Dom\r\n    /**\r\n     * @description  : popLayer移动的时候改变popLayer的left和top\r\n     * @param         { type React }  e\r\n     * @param         { type * }  MouseEvent\r\n     * @return        { type * } \r\n     */\r\n    popLayerMouseMove(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\r\n        if (this.isPopLayerMove) {\r\n            let parentNode = this.parentNode as ParentNode as HTMLElement;\r\n            let left = e.pageX - this.divLeftWidth;\r\n            let top = e.pageY - this.divTopHeight;\r\n            if (left <= 0) { left = 1; }\r\n            if (left >= this.maxMoveWidth) { left = this.maxMoveWidth - 2 }\r\n            if (top <= 0) { top = 0; }\r\n            if (top >= this.maxMoveHeight) { top = this.maxMoveHeight - 1 }\r\n            parentNode.style.left = left.toString() + 'px';\r\n            parentNode.style.top = top.toString() + 'px';\r\n        }\r\n    }\r\n    /**\r\n     * @description  : 鼠标弹起时popLayer停止移动\r\n     * @param         { type React }  e\r\n     * @param         { type * }  MouseEvent\r\n     * @return        { type * } \r\n     */\r\n    popLayerMouseUp(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\r\n        e.preventDefault();\r\n        this.isPopLayerMove = false\r\n    }\r\n    componentDidMount() {\r\n        popLayerZIndex = popLayerZIndex + 2;\r\n        this.popLayerZIndex = popLayerZIndex;\r\n        this.popLayerCreateNumIndex = popLayerCreateNumIndex++;\r\n        this.initPopLayerPosition();\r\n        window.onresize = () => {\r\n            this.initPopLayerPosition();\r\n        }\r\n        setTimeout(() => {\r\n        }, 1000 * 2);\r\n        document.body.addEventListener('mouseout', (evt: MouseEvent) => {\r\n            if (!evt) evt = window.event as any\r\n            let to = evt.relatedTarget || (evt as any).toElement\r\n            if (!to || to.nodeName == \"HTML\") {\r\n                this.isPopLayerMove = false\r\n            }\r\n        })\r\n    }\r\n    /**\r\n     * @description  : 获取非行内样式\r\n     * @param         { type any }  obj\r\n     * @param         { type string }  name\r\n     * @return        { type * } \r\n     */\r\n    getStyle(obj: any, name: string) {\r\n        if (obj.currentStyle) {\r\n            return obj.currentStyle[name]; /*仅支持IE*/\r\n        }\r\n        else {\r\n            return getComputedStyle(obj)[name as any]; /*w3c 标准*/\r\n            //兼容IE和火狐  return window.getComputedStyle.getPropertyValue(name);\r\n        }\r\n    }\r\n    private popLayerLeft = 0;//弹窗相对窗口左侧的位置\r\n    private popLayerTop = 0;//弹窗相对窗口顶部的位置\r\n    /**\r\n     * @description  : 初始化弹窗的初始位置\r\n     * @param         { type * } \r\n     * @return        { type * } \r\n     */\r\n    initPopLayerPosition() {\r\n        this.popLayerLeft = ((document.documentElement.clientWidth / 2) - (parseFloat(this.props.width as any) / 2));\r\n        this.popLayerTop = ((document.documentElement.clientHeight / 2) - (parseFloat(this.props.height as any) / 2));\r\n    }\r\n    /**\r\n     * @description  : 点击遮罩层进行关闭弹窗\r\n     * @param         { type * }  \r\n     * @return        { type * } \r\n     */\r\n    coverLayerClose() { if (this.props.isCoverLayerClickClose) { this.closePopLayer() } }\r\n    render() {\r\n        const { props, state } = this;\r\n        let popLayerStyle = Object.assign({ left: this.popLayerLeft, top: this.popLayerTop, width: props.width, height: state.isOpen ? props.height : 0, zIndex: this.popLayerZIndex + 1 }, this.props.style || {})\r\n        /**\r\n         * @description  : 使用react中的传送门\r\n         * @param         { type * } ReactDOM.createPortal 使用的传送门来建立一个不同HTML的根节点的 \r\n         * @return        { type * } \r\n         *  return ReactDOM.createPortal(\r\n         *   <div></div>,\r\n         *   document.getElementById('Lg_popLayer_root') as any\r\n         *   )\r\n         * \r\n         */\r\n        return ReactDOM.createPortal(\r\n            <div className='lg_popLayer_big_container ' onMouseUp={this.popLayerMouseUp} onMouseMove={this.popLayerMouseMove} style={{ zIndex: this.popLayerZIndex, display: state.isOpen ? 'block' : 'none' }}>\r\n                {/* 弹窗的窗体 */}\r\n                <div className={'lg_popLayer_container ' + (state.popLayerMainClassName || '') + ' ' + (props.className || '')} style={popLayerStyle} id={'lg_popLayer_container' + this.popLayerCreateNumIndex}>\r\n                    <div className='lg_popLayer_top' onMouseDown={this.popLayerMouseDown} onMouseMove={this.popLayerMouseMove} onMouseUp={this.popLayerMouseUp}>\r\n                        <div className='lg_popLayer_top_title' style={{ display: !this.props.customOfHeader ? 'block' : 'none' }}>{props.title}</div>\r\n                        <div className='lg_popLayer_top_close' onClick={() => { this.iconClose() }} style={{ display: props.isShowTopClose ? (!this.props.customOfHeader ? 'block' : 'none') : 'none' }}></div>\r\n                        <div className={'lg_popLayer_top_custom_header ' + props.headerClassName || ''} style={{ display: this.props.customOfHeader ? 'block' : 'none' }}>{props.customOfHeader}</div>\r\n                    </div>\r\n                    <div className={'lg_popLayer_main ' + (props.childClassName || '')}>{props.children}</div>\r\n                    <div className='lg_popLayer_bottom ' style={{ display: props?.isShowBottom ? \"flex\" : \"none\" }}>\r\n                        <div className='lg_popLayer_bottom_cho_box' style={{ display: !props.customOfBottom ? 'flex' : 'none' }}>\r\n                            <div className={'lg_popLayer_bottom_confirm_box ' + (props.confirmClass || '')}><input onClick={() => { this.confirmPopLayer() }} className='lg_popLayer_bottom_confirm_input input_item' value={props.confirmText} type={'button'} /></div>\r\n                            <div className={'lg_popLayer_bottom_close_box ' + (props.closeClass || '')}><input onClick={() => { this.closePopLayer(1) }} className='lg_popLayer_bottom_close_input input_item' value={props.closeText} type={'button'} /></div>\r\n                        </div>\r\n                        <div className={'lg_popLayer_bottom_cho_box_custom_bottom ' + (props.bottomClassName || '')} style={{ display: props.customOfBottom ? 'block' : 'none' }}>\r\n                            {props.customOfBottom}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* 遮罩层 */}\r\n                <div className={'lg_popLayer_container_coverLayer ' + props.coverLayerClass || ''} data-index={this.popLayerZIndex} data-cover-index={this.popLayerCreateNumIndex} style={{ zIndex: this.popLayerZIndex, }} onClick={this.coverLayerClose}></div>\r\n            </div>,\r\n            document.getElementById('Lg_popLayer_root') as any\r\n        )\r\n    }\r\n}\r\n// 创建弹窗的挂载点\r\nlet popLayerCreateIndex = 0;\r\n; (() => {\r\n    if (popLayerCreateIndex) return;\r\n    let popLayer = document.getElementById('Lg_popLayer_root');\r\n    if (popLayer) { document.removeChild(popLayer); }\r\n    let popLayerDom = document.createElement('div');\r\n    popLayerDom.style.display = 'none';\r\n    popLayerDom.setAttribute('id', 'Lg_popLayer_root');\r\n    document.body.appendChild(popLayerDom);\r\n    ++popLayerCreateIndex;\r\n    setTimeout(() => { let popLayer = document.getElementById('Lg_popLayer_root') as HTMLElement; popLayer.style.display = 'block'; }, 1000 * 1.5);\r\n})();\r\n","import { CodeView } from '@/components/CodeView';\r\nimport { LgPopLayer } from '@/components/popLayer';\r\nimport React, { Component } from 'react'\r\nimport './index.scss'\r\ninterface PopLayerState {\r\n    isOpenPopLayer: boolean;\r\n    name?: string | null;\r\n    nowTime?: Date | string;\r\n    isOpen1: boolean;\r\n    isOpen2: boolean;\r\n    isOpen3: boolean;\r\n    isOpen4: boolean;\r\n}\r\n\r\nexport default class popLayer extends Component<{}, PopLayerState> {\r\n    constructor(props: any) {\r\n        super(props)\r\n        this.state = { isOpenPopLayer: true, name: '弹窗', isOpen1: false, isOpen2: false, isOpen3: false, isOpen4: false, }\r\n        this.showPopLayerFun1 = this.showPopLayerFun1.bind(this)\r\n        this.showPopLayerFun2 = this.showPopLayerFun2.bind(this)\r\n        this.showPopLayerFun3 = this.showPopLayerFun3.bind(this)\r\n        this.showPopLayerFun4 = this.showPopLayerFun4.bind(this)\r\n        this.initTime = this.initTime.bind(this)\r\n        this.initDom1 = this.initDom1.bind(this)\r\n        this.initDom2 = this.initDom2.bind(this)\r\n        this.initDom3 = this.initDom3.bind(this)\r\n        this.initDom4 = this.initDom4.bind(this)\r\n        this.closePop1 = this.closePop1.bind(this)\r\n        this.closePop4 = this.closePop4.bind(this)\r\n    }\r\n    initTime() {\r\n        let time = new Date().toTimeString();\r\n        this.setState({\r\n            nowTime: time\r\n        })\r\n        return time\r\n    }\r\n    initDom1() {\r\n        return (\r\n            <div className='open_1'>\r\n                2022年春运正式开启！\r\n\r\n                2022年铁路春运自1月17日开始，2月25日结束，共40天，全国铁路旅客发送量预计达到2.8亿人次。\r\n\r\n                铁路部门表示，今年春运每日可提供客座席位1050万个以上，较2019年提高10%以上。\r\n\r\n                按照“适需安排、应急有备，精准匹配、梯次投放”原则，铁路部门根据客流变化和车票预售情况，更加精准地实施“一日一图”，动态安排运力投放和客车开行，全力满足保障旅客出行和疫情防控的双重需要。\r\n\r\n                此外，如果局部地区出现疫情，将快速调整运输组织，停开、减开涉疫地区旅客列车，减少人员流动。\r\n\r\n                这些目的地或成“最热”\r\n\r\n                此前有平台预测了今年春运的热门目的地。\r\n\r\n                去哪儿大数据显示，2022年春运铁路出行十大热门目的地为：重庆、武汉、哈尔滨、长沙、贵阳、成都、南昌、沈阳、长春、阜阳。西南、东北地区人群购票积极性较高。\r\n\r\n                而十大热门出发城市为：广州，北京，上海，杭州，成都，苏州，南京，东莞，武汉，长沙。其中东莞相较往年增幅较为明显，第一次跻身春运十大出发地。\r\n            </div>)\r\n    }\r\n    initDom2() {\r\n        let list: (string | number)[] = [\r\n            `北京交通大学中国综合交通研究中心执行主任 教授 毛保华：按照年龄更加合理，咱们国家现在一个是管理水平提高了，我们现在可以有信息化的管理水平。国家的治理水平提高了，我们现在几乎所有的人都有身份证，都能知道他的年龄。我们的国家也富强了，把福利更多地给老百姓，给孩子成长，我觉得是非常及时的一个政策。\r\n        专家：避免身高一刀切，让优惠票普惠儿童\r\n        近年来，社会不同领域都对“一刀切”的火车儿童票规定提出了意见和建议，此次国家铁路局拟修订原有的规章，可谓是恰逢其时。\r\n        在2018年全国两会期间，有全国人大代表和全国政协委员曾分别就“儿童票”制度提出了建议。建议避免采用按身高“一刀切”的规定，以保障“大个子儿童”应有的福利，体现公平。\r\n        2019年，安徽的11岁儿童小刘因身高超出1.5米的标准而被要求补票后，起诉铁路部门。`, `小刘的父亲：我的孩子是通过12306购票时，身份证号码上是有他的出生年月日，也就是说他是法律规定的一个儿童，后来在火车上要求以身高要求进行测量，我当时在这上面提出异议。`,\r\n            '你好，我们的时候的说法华东数控就回复是肯定发哈删掉卡或付扩所多军军军军军就看看看时间多喝几杯浮点数富士达会计法好']\r\n        return (\r\n            <div>\r\n                <ul>\r\n                    {list?.map((o, i) => {\r\n                        return (\r\n                            <li>{o}</li>\r\n                        )\r\n                    })}\r\n                </ul>\r\n            </div>)\r\n    }\r\n    initDom3() {\r\n        return (\r\n            <div>\r\n                <input type=\"button\" value=\"打开弹窗2\" className='comment_position' onClick={() => { this.showPopLayerFun2() }} />\r\n            </div>)\r\n    }\r\n    initDom4() {\r\n        return (\r\n            <div>\r\n                4444444444444444444444444444444444444444444\r\n            </div>)\r\n    }\r\n\r\n    showPopLayerFun1() {\r\n        this.setState({\r\n            isOpen1: !this.state.isOpen1\r\n        })\r\n    }\r\n    showPopLayerFun2(isOpen?: boolean) {\r\n        console.log(isOpen)\r\n        this.setState({\r\n            isOpen2: !this.state.isOpen2\r\n        })\r\n    }\r\n    showPopLayerFun3() {\r\n        this.setState({\r\n            isOpen3: !this.state.isOpen3\r\n        })\r\n    }\r\n    showPopLayerFun4() {\r\n        this.setState({ isOpen4: !this.state.isOpen4 })\r\n    }\r\n    componentDidMount() {\r\n        let allSkin = [\"lg-skin-s1\", \"lg-skin-s2\", \"lg-skin-s3\", \"lg-skin-s4\", \"lg-skin-s5\", \"lg-skin-k1\", \"lg-skin-k2\"];\r\n        let number = allSkin.length;\r\n        setInterval(() => {\r\n            let index = Math.floor(Math.random() * parseInt(number as any));\r\n            document.documentElement.className = allSkin[index];\r\n        }, 1000 * 5)\r\n    }\r\n    closePop1(isOpen: boolean) {\r\n        this.setState({\r\n            isOpen1: isOpen\r\n        })\r\n    }\r\n    closePop4() {\r\n        this.setState({ isOpen4: false })\r\n\r\n    }\r\n    isConfirm2(isOpen?: boolean) {\r\n        alert('isConfirm2 --- 弹窗2 点击确定')\r\n    }\r\n    isClose2(isOpen?: boolean) {\r\n        alert('isClose2 --- 弹窗2 点击取消')\r\n    }\r\n    isIconClose2(isOpen?: boolean) {\r\n        alert('isIconClose2 --- 弹窗2 点击小图标取消')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n\r\n                <div className='components-show-box'>\r\n                    <div className='components-show-big-title'>G004</div>\r\n                    <div className='components-show-use'>使用指南</div>\r\n                    <div className='components-show-steps-box'>\r\n                        <div className='components-show-steps'>一、在 @/components/popLayer 文件中引入组件 LgPopLayer</div>\r\n                        <div className='components-show-steps-code'>\r\n                            <CodeView className=''>\r\n                                {\r\n                                    `\r\n                                        import { LgPopLayer } from '@/components/popLayer';\r\n                                    `\r\n                                }\r\n                            </CodeView>\r\n                        </div>\r\n                    </div>\r\n                    <div className='components-show-steps-box'>\r\n                        <div className='components-show-steps'>二、再引入标签，标签属性解析</div>\r\n                        <div className='components-show-steps-code'>\r\n                            <div className='components-show-steps-code'>\r\n                                <CodeView className='props_container'>\r\n                                    {\r\n                                        `\r\n                                        /**\r\n                                         * @summary 使用的弹出层传入的props\r\n                                         */\r\n                                        export interface PopLayerProps {\r\n                                            // popLayerBox\r\n                                            isOpen: boolean;//是否打开弹窗 | 默认值：-- | 是否必传:true\r\n                                            width?: number;//弹窗的总宽度 | 默认值: 400 | 是否必传:false\r\n                                            height?: number;//弹窗的总高度 | 默认值: 300 | 是否必传:false\r\n                                            title?: string;//弹窗头部的标题 | 默认值: Lg弹出层-默认标题 | 是否必传:false\r\n                                            className?: string;//弹窗最外层的类名 | 默认值：-- | 是否必传:false\r\n                                            style?: React.CSSProperties;//弹窗最外层的样式类型 | 默认值：--  | 注： 不建议使用,在本组件初始化使用后，部分样式（zIndex）有可能会被覆盖掉导致不生效。推荐使用className去修改样式 | 是否必传:false\r\n                                        \r\n                                            // coverLayer\r\n                                            isShowCoverLayer?: boolean;//是否展示遮罩层 | 默认值：true | 是否必传:false\r\n                                            coverLayerClass?: string;//遮罩层类名 | 默认值：-- | 是否必传:false\r\n                                            isCoverLayerClickClose?: boolean;//是否点击遮罩层关闭弹窗 | 默认值：false | 是否必传:false\r\n                                        \r\n                                            // top\r\n                                            isShowTopClose?: boolean;//是否显示头部的关闭按钮 | 默认值:true | 是否必传:false\r\n                                        \r\n                                            // bottom\r\n                                            isShowBottom?: boolean;//是否显示底部的 | 默认值:true | 是否必传:false\r\n                                            confirmText?: string;//确认按钮需要显示的文本 | 默认值：确认 | 是否必传:false\r\n                                            confirmClass?: string;//确认按钮元素上的类名 | 默认值：-- | 是否必传:false\r\n                                            closeText?: string;//关闭按钮需要显示的文本 | 默认值：取消 | 是否必传:false\r\n                                            closeClass?: string;//关闭按钮元素上的类名 | 默认值：-- | 是否必传:false\r\n                                        \r\n                                            // customHtml\r\n                                            customOfHeader?: (React.ReactDOM | React.ReactChild | React.ReactElement) | (() => React.ReactElement);//弹窗头部添加的自定义Dom | 默认值：-- | 是否必传:false\r\n                                            headerClassName?: string;//弹窗头部添加的自定义Dom容器的类名 | 默认值：-- | 是否必传:false\r\n                                            children?: (React.ReactDOM | React.ReactChild | React.ReactElement) | (() => React.ReactElement);// 弹窗中部添加的自定义Dom | 默认值：-- | 是否必传:false\r\n                                            childClassName?: string;//自定义弹窗容器的类名 | 默认值：-- | 是否必传:false\r\n                                            customOfBottom?: (React.ReactDOM | React.ReactChild | React.ReactElement) | (() => React.ReactElement);//弹窗低部添加的自定义Dom | 默认值：-- | 是否必传:false\r\n                                            bottomClassName?: string;//弹窗低部添加的自定义Dom的类名 | 默认值：-- | 是否必传:false\r\n                                        \r\n                                            // function\r\n                                            onConfirm?: (isOpen?: boolean) => void;//点击确认按钮时触发的函数  | 是否必传:false\r\n                                            onClose?: (isOpen?: boolean) => void;//点击关闭按钮时触发的函数 | 是否必传:false\r\n                                            onIconClose?: (isOpen?: boolean) => void;//点击顶部的关闭小图标时触发的函数 | 是否必传:false\r\n                                            onShowLayer: (isOpen?: boolean) => void;//必传的弹窗开关函数打开和关闭都必执行的函数，可以在打开前和关闭后触发父组件逻辑的函数 | 是否必传:true\r\n                                        }\r\n                                    `\r\n                                    }\r\n                                </CodeView>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='components-show-steps-box'>\r\n                        <div className='components-show-steps'>三、demo样式展示</div>\r\n                        <div className='components-show-example'>\r\n                            <div className='components-show-example-title'>popLayer 弹出案例1:</div>\r\n                            <div className='open_layer'>\r\n                                <input type=\"button\" value=\"打开弹窗1\" className='comment_position' onClick={this.showPopLayerFun1} />\r\n                            </div>\r\n                            <div className='components-show-steps-code'>\r\n                                <div className='components-show-steps-code'>\r\n                                    <CodeView className=''>\r\n                                        {\r\n                                            `\r\ninitDom1() {\r\n    return (\r\n        <div className='open_1'>\r\n            2022年春运正式开启！\r\n\r\n            2022年铁路春运自1月17日开始，2月25日结束，共40天，全国铁路旅客发送量预计达到2.8亿人次。\r\n        </div>)\r\n}\r\nshowPopLayerFun1() {\r\n    this.setState({\r\n        isOpen1: !this.state.isOpen1\r\n    })\r\n}\r\n<LgPopLayer\r\n    coverLayerClass={'weekly_publication'}\r\n    isShowTopClose={false}\r\n    isOpen={this.state.isOpen1}\r\n    width={700}\r\n    height={500}\r\n    title='打开弹窗1'\r\n    isShowCoverLayer={false}\r\n    onClose={this.showPopLayerFun1}\r\n    onShowLayer={this.showPopLayerFun1}\r\n>\r\n    {this.initDom1()}\r\n</LgPopLayer>\r\n<input type=\"button\" value=\"打开弹窗1\" className='comment_position' onClick={this.showPopLayerFun1} />\r\n                                    `\r\n                                        }\r\n                                    </CodeView>\r\n                                </div>\r\n                            </div>\r\n                            <div className='components-show-example-title'>popLayer 弹出案例2:</div>\r\n                            <div className='open_layer'>\r\n                                <input type=\"button\" value=\"打开弹窗2\" className='comment_position' onClick={() => { this.showPopLayerFun2() }} />\r\n                                <div className='components-show-steps-code'>\r\n                                    <CodeView className=''>\r\n                                        {\r\n                                            `\r\n<LgPopLayer isOpen={this.state.isOpen2}\r\n    onShowLayer={this.showPopLayerFun2}\r\n    title='打开弹窗2'\r\n    onClose={this.isClose2}\r\n    onConfirm={this.isConfirm2}\r\n    onIconClose={this.isIconClose2}\r\n>\r\n    <div className='components-show-example-title'>popLayer 弹出案例3:</div>\r\n</LgPopLayer>\r\n<input type=\"button\" value=\"打开弹窗2\" className='comment_position' onClick={() => { this.showPopLayerFun2() }} />\r\n                                    `\r\n                                        }\r\n                                    </CodeView>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='components-show-example-title'>popLayer 弹出案例3:</div>\r\n                            <div className='open_layer'>\r\n                                <input type=\"button\" value=\"打开弹窗3\" className='comment_position' onClick={this.showPopLayerFun3} />\r\n                                <div className='components-show-steps-code'>\r\n                                    <CodeView className=''>\r\n                                        {\r\n                                            `\r\ninitDom3() {\r\n    return (\r\n        <div>\r\n            <input type=\"button\" value=\"打开弹窗2\" className='comment_position' onClick={() => { this.showPopLayerFun2() }} />\r\n        </div>)\r\n}\r\n<LgPopLayer\r\n    isOpen={this.state.isOpen3}\r\n    onShowLayer={this.showPopLayerFun3}\r\n    title='打开弹窗3'\r\n>\r\n    {this.initDom3()}\r\n</LgPopLayer>\r\n<input type=\"button\" value=\"打开弹窗3\" className='comment_position' onClick={this.showPopLayerFun3} />                \r\n                                    `\r\n                                        }\r\n                                    </CodeView>\r\n                                </div>\r\n                            </div>\r\n                            <div className='components-show-example-title'>popLayer 弹出案例4:</div>\r\n                            <div className='open_layer'>\r\n                                <input type=\"button\" value=\"打开弹窗4\" className='comment_position' onClick={this.showPopLayerFun4} />\r\n                                <div className='components-show-steps-code'>\r\n                                    <CodeView className=''>\r\n                                        {\r\n                                            `\r\n<LgPopLayer\r\n    isOpen={this.state.isOpen4}\r\n    onShowLayer={this.showPopLayerFun4}\r\n    title='打开弹窗4'\r\n    customOfHeader={<>nihaoisdfh asd</>}\r\n    customOfBottom={<div onClick={this.closePop4} >点我关闭弹窗，我是自定义的</div>}\r\n    isCoverLayerClickClose\r\n>\r\n    {this.initDom4()}\r\n</LgPopLayer>\r\n<input type=\"button\" value=\"打开弹窗4\" className='comment_position' onClick={this.showPopLayerFun4} />\r\n                                    `\r\n                                        }\r\n                                    </CodeView>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <LgPopLayer\r\n                    coverLayerClass={'weekly_publication'}\r\n                    isShowTopClose={false}\r\n                    isOpen={this.state.isOpen1}\r\n                    width={700}\r\n                    height={500}\r\n                    title='打开弹窗1'\r\n                    isShowCoverLayer={false}\r\n                    onClose={this.showPopLayerFun1}\r\n                    onShowLayer={this.showPopLayerFun1}\r\n                >\r\n                    {this.initDom1()}\r\n                </LgPopLayer>\r\n                <LgPopLayer isOpen={this.state.isOpen2}\r\n                    onShowLayer={this.showPopLayerFun2}\r\n                    title='打开弹窗2'\r\n                    onClose={this.isClose2}\r\n                    onConfirm={this.isConfirm2}\r\n                    onIconClose={this.isIconClose2}\r\n                >\r\n                    {this.initDom2()}\r\n                </LgPopLayer>\r\n                <LgPopLayer\r\n                    isOpen={this.state.isOpen3}\r\n                    onShowLayer={this.showPopLayerFun3}\r\n                    title='打开弹窗3'\r\n                >\r\n                    {this.initDom3()}\r\n                </LgPopLayer>\r\n                <LgPopLayer\r\n                    isOpen={this.state.isOpen4}\r\n                    onShowLayer={this.showPopLayerFun4}\r\n                    title='打开弹窗4'\r\n                    customOfHeader={<>nihaoisdfh asd</>}\r\n                    customOfBottom={<div onClick={this.closePop4} >点我关闭弹窗，我是自定义的</div>}\r\n                    isCoverLayerClickClose\r\n                >{this.initDom4()}\r\n                </LgPopLayer>\r\n            </>\r\n        )\r\n    }\r\n}","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 26291;\nmodule.exports = webpackEmptyContext;"],"names":["CodeView","prevProps","prevState","snapshot","window","PR","prettyPrint","result","prettier","this","props","children","parser","plugins","parserTypeScript","parserHtml","e","console","error","className","style","Component","defaultProps","language","popLayerCreateNumIndex","popLayerZIndex","_hasPopLayerOpen","LgPopLayer","isPopLayerMove","divLeftWidth","divTopHeight","maxMoveWidth","maxMoveHeight","parentNode","popLayerLeft","popLayerTop","state","isOpen","popLayerMainClassName","initCoverLayer","bind","popLayerMouseDown","popLayerMouseMove","popLayerMouseUp","closePopLayer","confirmPopLayer","coverLayerClose","type","fun","setState","onShowLayer","onClose","onConfirm","onIconClose","nextProps","initCoverLayerType","setTimeout","isShowCoverLayer","arr","Array","isArray","array","i","length","indexOf","push","CoverLayerType","unique","coverLayerDom","document","querySelectorAll","index","parseInt","splice","maxIndex","forEach","o","coverNumIndex","getAttribute","opacity","filter","zIndex","class","previousElementSibling","currentTarget","parentContainerNode","offsetWidth","offsetHeight","pageX","offsetLeft","pageY","offsetTop","left","top","toString","preventDefault","initPopLayerPosition","onresize","body","addEventListener","evt","event","to","relatedTarget","toElement","nodeName","obj","name","currentStyle","getComputedStyle","documentElement","clientWidth","parseFloat","width","clientHeight","height","isCoverLayerClickClose","popLayerStyle","Object","assign","ReactDOM","onMouseUp","onMouseMove","display","id","onMouseDown","customOfHeader","title","onClick","iconClose","isShowTopClose","headerClassName","childClassName","isShowBottom","customOfBottom","confirmClass","value","confirmText","closeClass","closeText","bottomClassName","coverLayerClass","getElementById","popLayerCreateIndex","popLayer","removeChild","popLayerDom","createElement","setAttribute","appendChild","isOpenPopLayer","isOpen1","isOpen2","isOpen3","isOpen4","showPopLayerFun1","showPopLayerFun2","showPopLayerFun3","showPopLayerFun4","initTime","initDom1","initDom2","initDom3","initDom4","closePop1","closePop4","time","Date","toTimeString","nowTime","list","map","log","allSkin","number","setInterval","Math","floor","random","alert","isClose2","isConfirm2","isIconClose2","webpackEmptyContext","req","Error","code","keys","resolve","module","exports"],"sourceRoot":""}