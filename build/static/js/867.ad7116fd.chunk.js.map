{"version":3,"file":"static/js/867.ad7116fd.chunk.js","mappings":"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","sources":["components/CodeView/index.tsx","components/charts/index.tsx","pages/charts/index.tsx","../node_modules/prettier|sync"],"sourcesContent":["import \"code-prettify\";\r\nimport \"code-prettify/src/prettify.css\";\r\n\r\nimport parserTypeScript from 'prettier/parser-typescript';\r\nimport prettier from 'prettier/standalone';\r\nimport parserHtml from \"prettier/parser-html\";\r\nimport {Component, createRef, CSSProperties, RefObject} from \"react\";\r\nimport \"./index.scss\";\r\nimport classNames from \"classnames\";\r\n\r\ninterface CodeViewProps {\r\n  children: string\r\n  className?: string\r\n  style?: CSSProperties\r\n  language?: \"ts\" | \"html\"\r\n  defaultShow?: boolean\r\n  canHidden?: boolean\r\n}\r\n\r\n\r\ninterface CodeViewState {\r\n  isShowCode: boolean\r\n}\r\n\r\nexport class CodeView extends Component<CodeViewProps, CodeViewState> {\r\n\r\n  private readonly codeViewAreaRef: RefObject<HTMLDivElement>\r\n  private areaMaxHeight: string\r\n\r\n  static defaultProps: CodeViewProps = {\r\n    children: \"\",\r\n    language: \"ts\",\r\n    canHidden: false\r\n  }\r\n\r\n  constructor(props: CodeViewProps | Readonly<CodeViewProps>) {\r\n    super(props);\r\n    this.state = {\r\n      isShowCode: true\r\n    }\r\n    this.codeViewAreaRef = createRef<HTMLDivElement>();\r\n    this.areaMaxHeight = \"fit-content\"\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    (window as any).PR.prettyPrint();\r\n  }\r\n\r\n  componentDidMount() {\r\n    (window as any).PR.prettyPrint();\r\n    this.areaMaxHeight = this.codeViewAreaRef.current?.clientHeight + \"px\" || \"fit-content\"\r\n    this.setState({\r\n      isShowCode: !this.props.canHidden || !!this.props.defaultShow\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let result = \"\";\r\n    try {\r\n      result = prettier.format(this.props.children, {\r\n        parser: \"typescript\",\r\n        plugins: [parserTypeScript, parserHtml]\r\n      });\r\n    } catch (e) {\r\n      console.error(\"代码格式有误，无法解析\")\r\n      result = this.props.children\r\n    }\r\n\r\n    let className = classNames(\r\n      \"lg-code-view-root\",\r\n      {\r\n        [`${this.props.className}`]: !!this.props.className,\r\n        \"lg-code-view-can-hidden\": this.props.canHidden\r\n      }\r\n    )\r\n\r\n    return (\r\n      <div className={className} style={this.props.style}>\r\n        <div ref={this.codeViewAreaRef} className=\"lg-code-view-area\"\r\n             style={{height: this.state.isShowCode ? this.areaMaxHeight : \"0\"}}>\r\n          <pre className={`prettyprint lang-js`}>\r\n              <div className=\"code_block\">\r\n                <code className=\"code_text\">{result}</code>\r\n              </div>\r\n          </pre>\r\n        </div>\r\n        {\r\n          !this.props.canHidden ? \"\" :\r\n            <div onClick={() => this.setState({isShowCode: !this.state.isShowCode})}\r\n                 className=\"lg-code-view-show-button\">\r\n              <div className={`lg-code-view-show-text ${this.state.isShowCode ? \"on-show\" : \"\"}`}>\r\n                {!this.state.isShowCode ? \"显示\" : \"隐藏\"}代码\r\n              </div>\r\n            </div>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import { Component } from \"react\";\r\nimport \"./index.scss\";\r\nimport ReactEcharts from 'echarts-for-react'\r\nimport { EChartsReactProps} from \"echarts-for-react\";\r\n\r\nexport class LgCharts extends Component<EChartsReactProps, {}>{\r\n    render() {\r\n        return (\r\n            <ReactEcharts {...this.props}/>\r\n        )\r\n    }\r\n}","import { Component } from \"react\";\r\nimport { LgCharts } from \"@/components/charts\";\r\nimport { CodeView } from \"@/components/CodeView\";\r\nimport * as echarts from 'echarts';\r\n\r\n\r\nimport \"./index.scss\";\r\nimport \"../index.scss\";\r\nexport default class Charts extends Component<{}, {}>{\r\n    getChartOptions1() {\r\n        return {\r\n            xAxis: {\r\n                type: 'category',\r\n                data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\r\n                axisLabel: {\r\n                    show: true,\r\n                    textStyle: {\r\n                        color: '#999999',   //这里用参数代替了\r\n                    }\r\n                },    \r\n            },\r\n            yAxis: {\r\n                type: 'value',\r\n                show: true,\r\n                axisLabel: {\r\n                    show: true,\r\n                    textStyle: {\r\n                        color: '#999999',   //这里用参数代替了\r\n                    }\r\n                },\r\n            },\r\n            series: [\r\n                {\r\n                    data: [\r\n                        120,\r\n                        200,\r\n                        150,\r\n                        80,\r\n                        70,\r\n                        110,\r\n                        130\r\n                    ],\r\n                    type: 'bar',\r\n                }\r\n            ],\r\n            tooltip : { \r\n                axisPointer: {\r\n                    type: 'cross',\r\n                }\r\n            }\r\n        }\r\n    }\r\n    getChartOptions2() {\r\n        return {\r\n            xAxis: {\r\n                type: 'category',\r\n                data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\r\n                axisLabel: {\r\n                    show: true,\r\n                    textStyle: {\r\n                        color: '#999999',   //这里用参数代替了\r\n                    }\r\n                },\r\n            },\r\n            yAxis: {\r\n                type: 'value',\r\n                axisLabel: {\r\n                    show: true,\r\n                    textStyle: {\r\n                        color: '#999999',   //这里用参数代替了\r\n                    }\r\n                },\r\n            },\r\n            series: [\r\n                {\r\n                    data: [150, 230, 224, 218, 135, 147, 260],\r\n                    type: 'line'\r\n                }\r\n            ]\r\n        };\r\n    }\r\n    getChartOptions3() {\r\n        let base = +new Date(2016, 9, 3);\r\n        let oneDay = 24 * 3600 * 1000;\r\n        let valueBase = Math.random() * 300;\r\n        let valueBase2 = Math.random() * 50;\r\n        let data = [];\r\n        let data2 = [];\r\n\r\n        for (var i = 1; i < 10; i++) {\r\n            var now = new Date((base += oneDay));\r\n            var dayStr = [now.getFullYear(), now.getMonth() + 1, now.getDate()].join('-');\r\n\r\n            valueBase = Math.round((Math.random() - 0.5) * 20 + valueBase);\r\n            valueBase <= 0 && (valueBase = Math.random() * 300);\r\n            data.push([dayStr, valueBase]);\r\n\r\n            valueBase2 = Math.round((Math.random() - 0.5) * 20 + valueBase2);\r\n            valueBase2 <= 0 && (valueBase2 = Math.random() * 50);\r\n            data2.push([dayStr, valueBase2]);\r\n        }\r\n\r\n        return {\r\n            title: {\r\n                left: 'center',\r\n                text: 'Tootip and dataZoom on Mobile Device'\r\n            },\r\n            legend: {\r\n                top: 'bottom',\r\n                data: ['Intention']\r\n            },\r\n            tooltip: {\r\n                triggerOn: 'none',\r\n                position: function (pt: any) {\r\n                    return [pt[0], 130];\r\n                }\r\n            },\r\n            toolbox: {\r\n                left: 'center',\r\n                itemSize: 25,\r\n                top: 55,\r\n                feature: {\r\n                    dataZoom: {\r\n                        yAxisIndex: 'none'\r\n                    },\r\n                    restore: {}\r\n                }\r\n            },\r\n            xAxis: {\r\n                type: 'time',\r\n                axisPointer: {\r\n                    value: '2016-10-7',\r\n                    snap: true,\r\n                    lineStyle: {\r\n                        color: '#7581BD',\r\n                        width: 2\r\n                    },\r\n                    label: {\r\n                        show: true,\r\n                        formatter: function (params: any) {\r\n                            return echarts.format.formatTime('yyyy-MM-dd', params.value);\r\n                        },\r\n                        backgroundColor: '#7581BD'\r\n                    },\r\n                    handle: {\r\n                        show: true,\r\n                        color: '#7581BD'\r\n                    }\r\n                },\r\n                splitLine: {\r\n                    show: false\r\n                },\r\n                axisLabel: {\r\n                    show: true,\r\n                    textStyle: {\r\n                        color: '#999999',   //这里用参数代替了\r\n                    }\r\n                },\r\n            },\r\n            yAxis: {\r\n                type: 'value',\r\n                axisTick: {\r\n                    inside: true\r\n                },\r\n                splitLine: {\r\n                    show: false\r\n                },\r\n                axisLabel: {\r\n                    inside: true,\r\n                    formatter: '{value}\\n',\r\n                    show: true,\r\n                    textStyle: {\r\n                        color: '#999999',   //这里用参数代替了\r\n                    }\r\n                },\r\n                z: 10\r\n            },\r\n            grid: {\r\n                top: 110,\r\n                left: 15,\r\n                right: 15,\r\n                height: 160\r\n            },\r\n            dataZoom: [\r\n                {\r\n                    type: 'inside',\r\n                    throttle: 50\r\n                }\r\n            ],\r\n            series: [\r\n                {\r\n                    name: 'Fake Data',\r\n                    type: 'line',\r\n                    smooth: true,\r\n                    symbol: 'circle',\r\n                    symbolSize: 5,\r\n                    sampling: 'average',\r\n                    itemStyle: {\r\n                        color: '#0770FF'\r\n                    },\r\n                    stack: 'a',\r\n                    areaStyle: {\r\n                        color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                            {\r\n                                offset: 0,\r\n                                color: 'rgba(58,77,233,0.8)'\r\n                            },\r\n                            {\r\n                                offset: 1,\r\n                                color: 'rgba(58,77,233,0.3)'\r\n                            }\r\n                        ])\r\n                    },\r\n                    data: data\r\n                },\r\n                {\r\n                    name: 'Fake Data',\r\n                    type: 'line',\r\n                    smooth: true,\r\n                    stack: 'a',\r\n                    symbol: 'circle',\r\n                    symbolSize: 5,\r\n                    sampling: 'average',\r\n                    itemStyle: {\r\n                        color: '#F2597F'\r\n                    },\r\n                    areaStyle: {\r\n                        color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                            {\r\n                                offset: 0,\r\n                                color: 'rgba(213,72,120,0.8)'\r\n                            },\r\n                            {\r\n                                offset: 1,\r\n                                color: 'rgba(213,72,120,0.3)'\r\n                            }\r\n                        ])\r\n                    },\r\n                    data: data2\r\n                }\r\n            ]\r\n        }\r\n    }\r\n    getChartOptions4() {\r\n        return {\r\n            title: {\r\n                text: 'Referer of a Website',\r\n                subtext: 'Fake Data',\r\n                left: 'center'\r\n            },\r\n            tooltip: {\r\n                trigger: 'item'\r\n            },\r\n            legend: {\r\n                orient: 'vertical',\r\n                left: 'left'\r\n            },\r\n            series: [\r\n                {\r\n                    name: 'Access From',\r\n                    type: 'pie',\r\n                    radius: ['40%', '70%'],\r\n                    data: [\r\n                        { value: 1048, name: 'Search Engine' },\r\n                        { value: 735, name: 'Direct' },\r\n                        { value: 580, name: 'Email' },\r\n                        { value: 484, name: 'Union Ads' },\r\n                        { value: 300, name: 'Video Ads' }\r\n                    ],\r\n                    emphasis: {\r\n                        itemStyle: {\r\n                            shadowBlur: 10,\r\n                            shadowOffsetX: 0,\r\n                            shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                        }\r\n                    }\r\n                }\r\n            ]\r\n        };;\r\n    }\r\n    getChartOptions5() {\r\n        return {\r\n            angleAxis: {\r\n                type: 'category',\r\n                data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\r\n            },\r\n            radiusAxis: {},\r\n            polar: {},\r\n            series: [\r\n                {\r\n                    type: 'bar',\r\n                    data: [1, 2, 3, 4, 3, 5, 1],\r\n                    coordinateSystem: 'polar',\r\n                    name: 'A',\r\n                    stack: 'a',\r\n                    emphasis: {\r\n                        focus: 'series'\r\n                    }\r\n                },\r\n                {\r\n                    type: 'bar',\r\n                    data: [2, 4, 6, 1, 3, 2, 1],\r\n                    coordinateSystem: 'polar',\r\n                    name: 'B',\r\n                    stack: 'a',\r\n                    emphasis: {\r\n                        focus: 'series'\r\n                    }\r\n                },\r\n                {\r\n                    type: 'bar',\r\n                    data: [1, 2, 3, 4, 1, 2, 5],\r\n                    coordinateSystem: 'polar',\r\n                    name: 'C',\r\n                    stack: 'a',\r\n                    emphasis: {\r\n                        focus: 'series'\r\n                    }\r\n                }\r\n            ],\r\n            legend: {\r\n                show: true,\r\n                data: ['A', 'B', 'C']\r\n            }\r\n        }\r\n    }\r\n    getChartOptions6() {\r\n        return {\r\n            title: {\r\n                text: 'Basic Radar Chart'\r\n            },\r\n            legend: {\r\n                data: ['Allocated Budget', 'Actual Spending']\r\n            },\r\n            radar: {\r\n                // shape: 'circle',\r\n                indicator: [\r\n                    { name: 'Sales', max: 6500 },\r\n                    { name: 'Administration', max: 16000 },\r\n                    { name: 'Information Technology', max: 30000 },\r\n                    { name: 'Customer Support', max: 38000 },\r\n                    { name: 'Development', max: 52000 },\r\n                    { name: 'Marketing', max: 25000 }\r\n                ]\r\n            },\r\n            series: [\r\n                {\r\n                    name: 'Budget vs spending',\r\n                    type: 'radar',\r\n                    data: [\r\n                        {\r\n                            value: [4200, 3000, 20000, 35000, 50000, 18000],\r\n                            name: 'Allocated Budget'\r\n                        },\r\n                        {\r\n                            value: [5000, 14000, 28000, 26000, 42000, 21000],\r\n                            name: 'Actual Spending'\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    }\r\n    getChartOptions7() {\r\n        return {\r\n            xAxis: {},\r\n            yAxis: {},\r\n            series: [\r\n                {\r\n                    symbolSize: 20,\r\n                    data: [\r\n                        [10.0, 8.04],\r\n                        [8.07, 6.95],\r\n                        [13.0, 7.58],\r\n                        [9.05, 8.81],\r\n                        [11.0, 8.33],\r\n                        [14.0, 7.66],\r\n                        [13.4, 6.81],\r\n                        [10.0, 6.33],\r\n                        [14.0, 8.96],\r\n                        [12.5, 6.82],\r\n                        [9.15, 7.2],\r\n                        [11.5, 7.2],\r\n                        [3.03, 4.23],\r\n                        [12.2, 7.83],\r\n                        [2.02, 4.47],\r\n                        [1.05, 3.33],\r\n                        [4.05, 4.96],\r\n                        [6.03, 7.24],\r\n                        [12.0, 6.26],\r\n                        [12.0, 8.84],\r\n                        [7.08, 5.82],\r\n                        [5.02, 5.68]\r\n                    ],\r\n                    type: 'scatter'\r\n                }\r\n            ]\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"lg_pages_container\">\r\n                <h2>Charts图表</h2>\r\n                <div className=\"lg_pages_item\">\r\n                <div className=\"lg_pages_item_title\">标签属性</div>\r\n                <CodeView language=\"html\" className=\"lg_pages_block\">\r\n                    {`\r\n                        /* 具体参照echarts官方文档：https://echarts.apache.org/zh/api.html#echarts  */\r\n                        import { EChartsReactProps } from \"echarts-for-react\";\r\n                    `}\r\n                </CodeView>\r\n                </div>\r\n                <div className=\"lg_charts_item\">\r\n                    <div className=\"lg_charts_item_title\">平面柱状图</div>\r\n                    <LgCharts\r\n                        option={this.getChartOptions1()}      // option：图表配置项\r\n                        notMerge={true}\r\n                        lazyUpdate={true}\r\n                        style={{ height: '300px' }}\r\n                    />\r\n                    <CodeView language=\"html\" className=\"lg_pages_block\">\r\n                        {`\r\n                            /* 平面柱状图 */\r\n                            const options1 = {\r\n                                xAxis: {\r\n                                    type: 'category',\r\n                                    data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\r\n                                },\r\n                                yAxis: {\r\n                                    type: 'value'\r\n                                },\r\n                                series: [\r\n                                    {\r\n                                        data: [\r\n                                            120,\r\n                                            {\r\n                                                value: 200,\r\n                                                itemStyle: {\r\n                                                    color: '#a90000'\r\n                                                }\r\n                                            },\r\n                                            150,\r\n                                            80,\r\n                                            70,\r\n                                            110,\r\n                                            130\r\n                                        ],\r\n                                        type: 'bar'\r\n                                    }\r\n                                ]\r\n                            };\r\n                            <LgCharts\r\n                                option={this.getChartOptions1()}      // option：图表配置项\r\n                                notMerge={true}\r\n                                lazyUpdate={true}\r\n                                style={{ height: '300px' }}\r\n                            />\r\n                        `}\r\n                    </CodeView>\r\n                </div>\r\n                <div className=\"lg_charts_item\">\r\n                    <div className=\"lg_charts_item_title\">直角曲线图</div>\r\n                    <LgCharts\r\n                        option={this.getChartOptions2()}      // option：图表配置项\r\n                        notMerge={true}\r\n                        lazyUpdate={true}\r\n                        style={{ height: '300px' }}\r\n                    />\r\n                    <CodeView language=\"html\" className=\"lg_pages_block\">\r\n                    {`\r\n                        /* 直角曲线图 */\r\n                        const options2 = {\r\n                            xAxis: {\r\n                                type: 'category',\r\n                                data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\r\n                            },\r\n                            yAxis: {\r\n                                type: 'value'\r\n                            },\r\n                            series: [\r\n                                {\r\n                                    data: [150, 230, 224, 218, 135, 147, 260],\r\n                                    type: 'line'\r\n                                }\r\n                            ]\r\n                        };\r\n                        <LgCharts\r\n                            option={this.getChartOptions2()}      // option：图表配置项\r\n                            notMerge={true}\r\n                            lazyUpdate={true}\r\n                            style={{ height: '300px' }}\r\n                        />\r\n                    `}\r\n                    </CodeView>\r\n                </div>\r\n                <div className=\"lg_charts_item\">\r\n                    <div className=\"lg_charts_item_title\">圆弧曲线图</div>\r\n                    <LgCharts\r\n                        option={this.getChartOptions3()}      // option：图表配置项\r\n                        notMerge={true}\r\n                        lazyUpdate={true}\r\n                        style={{ height: '400px' }}\r\n                    />\r\n                    <CodeView language=\"html\" className=\"lg_pages_block\">\r\n                    {`\r\n                        /* 圆弧曲线图 */\r\n                        let base = +new Date(2016, 9, 3);\r\n                        let oneDay = 24 * 3600 * 1000;\r\n                        let valueBase = Math.random() * 300;\r\n                        let valueBase2 = Math.random() * 50;\r\n                        let data = [];\r\n                        let data2 = [];\r\n\r\n                        for (var i = 1; i < 10; i++) {\r\n                            var now = new Date((base += oneDay));\r\n                            var dayStr = [now.getFullYear(), now.getMonth() + 1, now.getDate()].join('-');\r\n\r\n                            valueBase = Math.round((Math.random() - 0.5) * 20 + valueBase);\r\n                            valueBase <= 0 && (valueBase = Math.random() * 300);\r\n                            data.push([dayStr, valueBase]);\r\n\r\n                            valueBase2 = Math.round((Math.random() - 0.5) * 20 + valueBase2);\r\n                            valueBase2 <= 0 && (valueBase2 = Math.random() * 50);\r\n                            data2.push([dayStr, valueBase2]);\r\n                        };\r\n                        \r\n                        const options3 = {\r\n                            title: {\r\n                                left: 'center',\r\n                                text: 'Tootip and dataZoom on Mobile Device'\r\n                            },\r\n                            legend: {\r\n                                top: 'bottom',\r\n                                data: ['Intention']\r\n                            },\r\n                            tooltip: {\r\n                                triggerOn: 'none',\r\n                                position: function (pt: any) {\r\n                                    return [pt[0], 130];\r\n                                }\r\n                            },\r\n                            toolbox: {\r\n                                left: 'center',\r\n                                itemSize: 25,\r\n                                top: 55,\r\n                                feature: {\r\n                                    dataZoom: {\r\n                                        yAxisIndex: 'none'\r\n                                    },\r\n                                    restore: {}\r\n                                }\r\n                            },\r\n                            xAxis: {\r\n                                type: 'time',\r\n                                axisPointer: {\r\n                                    value: '2016-10-7',\r\n                                    snap: true,\r\n                                    lineStyle: {\r\n                                        color: '#7581BD',\r\n                                        width: 2\r\n                                    },\r\n                                    label: {\r\n                                        show: true,\r\n                                        formatter: function (params: any) {\r\n                                            return echarts.format.formatTime('yyyy-MM-dd', params.value);\r\n                                        },\r\n                                        backgroundColor: '#7581BD'\r\n                                    },\r\n                                    handle: {\r\n                                        show: true,\r\n                                        color: '#7581BD'\r\n                                    }\r\n                                },\r\n                                splitLine: {\r\n                                    show: false\r\n                                }\r\n                            },\r\n                            yAxis: {\r\n                                type: 'value',\r\n                                axisTick: {\r\n                                    inside: true\r\n                                },\r\n                                splitLine: {\r\n                                    show: false\r\n                                },\r\n                                axisLabel: {\r\n                                    inside: true,\r\n                                    formatter: '{value}\\\\n'\r\n                                },\r\n                                z: 10\r\n                            },\r\n                            grid: {\r\n                                top: 110,\r\n                                left: 15,\r\n                                right: 15,\r\n                                height: 160\r\n                            },\r\n                            dataZoom: [\r\n                                {\r\n                                    type: 'inside',\r\n                                    throttle: 50\r\n                                }\r\n                            ],\r\n                            series: [\r\n                                {\r\n                                    name: 'Fake Data',\r\n                                    type: 'line',\r\n                                    smooth: true,\r\n                                    symbol: 'circle',\r\n                                    symbolSize: 5,\r\n                                    sampling: 'average',\r\n                                    itemStyle: {\r\n                                        color: '#0770FF'\r\n                                    },\r\n                                    stack: 'a',\r\n                                    areaStyle: {\r\n                                        color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                                            {\r\n                                                offset: 0,\r\n                                                color: 'rgba(58,77,233,0.8)'\r\n                                            },\r\n                                            {\r\n                                                offset: 1,\r\n                                                color: 'rgba(58,77,233,0.3)'\r\n                                            }\r\n                                        ])\r\n                                    },\r\n                                    data: data\r\n                                },\r\n                                {\r\n                                    name: 'Fake Data',\r\n                                    type: 'line',\r\n                                    smooth: true,\r\n                                    stack: 'a',\r\n                                    symbol: 'circle',\r\n                                    symbolSize: 5,\r\n                                    sampling: 'average',\r\n                                    itemStyle: {\r\n                                        color: '#F2597F'\r\n                                    },\r\n                                    areaStyle: {\r\n                                        color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                                            {\r\n                                                offset: 0,\r\n                                                color: 'rgba(213,72,120,0.8)'\r\n                                            },\r\n                                            {\r\n                                                offset: 1,\r\n                                                color: 'rgba(213,72,120,0.3)'\r\n                                            }\r\n                                        ])\r\n                                    },\r\n                                    data: data2\r\n                                }\r\n                            ]\r\n                        };\r\n                        <LgCharts\r\n                            option={this.getChartOptions3()}      // option：图表配置项\r\n                            notMerge={true}\r\n                            lazyUpdate={true}\r\n                            style={{ height: '400px' }}\r\n                        />\r\n                    `}\r\n                    </CodeView>\r\n                </div>\r\n                <div className=\"lg_charts_item\">\r\n                    <div className=\"lg_charts_item_title\">饼状图</div>\r\n                    <LgCharts\r\n                        option={this.getChartOptions4()}      // option：图表配置项\r\n                        notMerge={true}\r\n                        lazyUpdate={true}\r\n                        style={{ height: '300px' }}\r\n                    />\r\n                    <CodeView language=\"html\" className=\"lg_pages_block\">\r\n                        {`  \r\n                            /* 饼状图 */\r\n                            const options4 = {\r\n                                title: {\r\n                                    text: 'Referer of a Website',\r\n                                    subtext: 'Fake Data',\r\n                                    left: 'center'\r\n                                },\r\n                                tooltip: {\r\n                                    trigger: 'item'\r\n                                },\r\n                                legend: {\r\n                                    orient: 'vertical',\r\n                                    left: 'left'\r\n                                },\r\n                                series: [\r\n                                    {\r\n                                        name: 'Access From',\r\n                                        type: 'pie',\r\n                                        radius: ['40%', '70%'],\r\n                                        data: [\r\n                                            { value: 1048, name: 'Search Engine' },\r\n                                            { value: 735, name: 'Direct' },\r\n                                            { value: 580, name: 'Email' },\r\n                                            { value: 484, name: 'Union Ads' },\r\n                                            { value: 300, name: 'Video Ads' }\r\n                                        ],\r\n                                        emphasis: {\r\n                                            itemStyle: {\r\n                                                shadowBlur: 10,\r\n                                                shadowOffsetX: 0,\r\n                                                shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                ]\r\n                            };\r\n                            <LgCharts\r\n                                option={this.getChartOptions4()}      // option：图表配置项\r\n                                notMerge={true}\r\n                                lazyUpdate={true}\r\n                                style={{ height: '300px' }}\r\n                            />\r\n                        `}\r\n                    </CodeView>\r\n                </div>\r\n                <div className=\"lg_charts_item\">\r\n                    <div className=\"lg_charts_item_title\">玫瑰图</div>\r\n                    <LgCharts\r\n                        option={this.getChartOptions5()}      // option：图表配置项\r\n                        notMerge={true}\r\n                        lazyUpdate={true}\r\n                        style={{ height: '300px' }}\r\n                    />\r\n                    <CodeView language=\"html\" className=\"lg_pages_block\">\r\n                        {`\r\n                            /* 玫瑰图 */\r\n                            const options5 = {\r\n                                angleAxis: {\r\n                                    type: 'category',\r\n                                    data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\r\n                                },\r\n                                radiusAxis: {},\r\n                                polar: {},\r\n                                series: [\r\n                                    {\r\n                                        type: 'bar',\r\n                                        data: [1, 2, 3, 4, 3, 5, 1],\r\n                                        coordinateSystem: 'polar',\r\n                                        name: 'A',\r\n                                        stack: 'a',\r\n                                        emphasis: {\r\n                                            focus: 'series'\r\n                                        }\r\n                                    },\r\n                                    {\r\n                                        type: 'bar',\r\n                                        data: [2, 4, 6, 1, 3, 2, 1],\r\n                                        coordinateSystem: 'polar',\r\n                                        name: 'B',\r\n                                        stack: 'a',\r\n                                        emphasis: {\r\n                                            focus: 'series'\r\n                                        }\r\n                                    },\r\n                                    {\r\n                                        type: 'bar',\r\n                                        data: [1, 2, 3, 4, 1, 2, 5],\r\n                                        coordinateSystem: 'polar',\r\n                                        name: 'C',\r\n                                        stack: 'a',\r\n                                        emphasis: {\r\n                                            focus: 'series'\r\n                                        }\r\n                                    }\r\n                                ],\r\n                                legend: {\r\n                                    show: true,\r\n                                    data: ['A', 'B', 'C']\r\n                                }\r\n                            };\r\n                            <LgCharts\r\n                                option={this.getChartOptions5()}      // option：图表配置项\r\n                                notMerge={true}\r\n                                lazyUpdate={true}\r\n                                style={{ height: '300px' }}\r\n                            />\r\n                        `}\r\n                    </CodeView>\r\n                </div>\r\n                <div className=\"lg_charts_item\">\r\n                    <div className=\"lg_charts_item_title\">雷达图</div>\r\n                    <LgCharts\r\n                        option={this.getChartOptions6()}      // option：图表配置项\r\n                        notMerge={true}\r\n                        lazyUpdate={true}\r\n                        style={{ height: '300px' }}\r\n                    />\r\n                    <CodeView language=\"html\" className=\"lg_pages_block\">\r\n                        {`\r\n                            /* 雷达图 */\r\n                            const options6 = {\r\n                                title: {\r\n                                    text: 'Basic Radar Chart'\r\n                                },\r\n                                legend: {\r\n                                    data: ['Allocated Budget', 'Actual Spending']\r\n                                },\r\n                                radar: {\r\n                                    // shape: 'circle',\r\n                                    indicator: [\r\n                                        { name: 'Sales', max: 6500 },\r\n                                        { name: 'Administration', max: 16000 },\r\n                                        { name: 'Information Technology', max: 30000 },\r\n                                        { name: 'Customer Support', max: 38000 },\r\n                                        { name: 'Development', max: 52000 },\r\n                                        { name: 'Marketing', max: 25000 }\r\n                                    ]\r\n                                },\r\n                                series: [\r\n                                    {\r\n                                        name: 'Budget vs spending',\r\n                                        type: 'radar',\r\n                                        data: [\r\n                                            {\r\n                                                value: [4200, 3000, 20000, 35000, 50000, 18000],\r\n                                                name: 'Allocated Budget'\r\n                                            },\r\n                                            {\r\n                                                value: [5000, 14000, 28000, 26000, 42000, 21000],\r\n                                                name: 'Actual Spending'\r\n                                            }\r\n                                        ]\r\n                                    }\r\n                                ]\r\n                            };\r\n                            <LgCharts\r\n                                option={this.getChartOptions6()}      // option：图表配置项\r\n                                notMerge={true}\r\n                                lazyUpdate={true}\r\n                                style={{ height: '300px' }}\r\n                            />\r\n                        `}\r\n                    </CodeView>\r\n                </div>\r\n                <div className=\"lg_charts_item\">\r\n                    <div className=\"lg_charts_item_title\">散点图</div>\r\n                    <LgCharts\r\n                        option={this.getChartOptions7()}      // option：图表配置项\r\n                        notMerge={true}\r\n                        lazyUpdate={true}\r\n                        style={{ height: '300px' }}\r\n                    />\r\n                    <CodeView language=\"html\" className=\"lg_pages_block\">\r\n                        {`\r\n                            /* 散点图 */\r\n                            const options7 = {\r\n                                xAxis: {},\r\n                                yAxis: {},\r\n                                series: [\r\n                                    {\r\n                                        symbolSize: 20,\r\n                                        data: [\r\n                                            [10.0, 8.04],\r\n                                            [8.07, 6.95],\r\n                                            [13.0, 7.58],\r\n                                            [9.05, 8.81],\r\n                                            [11.0, 8.33],\r\n                                            [14.0, 7.66],\r\n                                            [13.4, 6.81],\r\n                                            [10.0, 6.33],\r\n                                            [14.0, 8.96],\r\n                                            [12.5, 6.82],\r\n                                            [9.15, 7.2],\r\n                                            [11.5, 7.2],\r\n                                            [3.03, 4.23],\r\n                                            [12.2, 7.83],\r\n                                            [2.02, 4.47],\r\n                                            [1.05, 3.33],\r\n                                            [4.05, 4.96],\r\n                                            [6.03, 7.24],\r\n                                            [12.0, 6.26],\r\n                                            [12.0, 8.84],\r\n                                            [7.08, 5.82],\r\n                                            [5.02, 5.68]\r\n                                        ],\r\n                                        type: 'scatter'\r\n                                    }\r\n                                ]\r\n                            };\r\n                            <LgCharts\r\n                                option={this.getChartOptions7()}      // option：图表配置项\r\n                                notMerge={true}\r\n                                lazyUpdate={true}\r\n                                style={{ height: '300px' }}\r\n                            />\r\n                        `}\r\n                    </CodeView>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 26291;\nmodule.exports = webpackEmptyContext;"],"names":["CodeView","props","codeViewAreaRef","areaMaxHeight","state","isShowCode","createRef","window","PR","prettyPrint","this","current","clientHeight","setState","canHidden","defaultShow","result","prettier","children","parser","plugins","parserTypeScript","parserHtml","e","console","error","className","classNames","style","ref","height","onClick","Component","defaultProps","language","LgCharts","Charts","xAxis","type","data","axisLabel","show","textStyle","color","yAxis","series","tooltip","axisPointer","base","Date","valueBase","Math","random","valueBase2","data2","i","now","dayStr","getFullYear","getMonth","getDate","join","round","push","title","left","text","legend","top","triggerOn","position","pt","toolbox","itemSize","feature","dataZoom","yAxisIndex","restore","value","snap","lineStyle","width","label","formatter","params","echarts","format","formatTime","backgroundColor","handle","splitLine","axisTick","inside","z","grid","right","throttle","name","smooth","symbol","symbolSize","sampling","itemStyle","stack","areaStyle","graphic","LinearGradient","offset","subtext","trigger","orient","radius","emphasis","shadowBlur","shadowOffsetX","shadowColor","angleAxis","radiusAxis","polar","coordinateSystem","focus","radar","indicator","max","option","getChartOptions1","notMerge","lazyUpdate","getChartOptions2","getChartOptions3","getChartOptions4","getChartOptions5","getChartOptions6","getChartOptions7","webpackEmptyContext","req","Error","code","keys","resolve","id","module","exports"],"sourceRoot":""}