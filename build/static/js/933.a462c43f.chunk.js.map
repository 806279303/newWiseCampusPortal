{"version":3,"file":"static/js/933.a462c43f.chunk.js","mappings":"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","sources":["components/CodeView/index.tsx","components/card/index.tsx","pages/card/index.tsx","type/BaseComponent.ts","../node_modules/prettier|sync"],"sourcesContent":["import \"code-prettify\";\r\nimport \"code-prettify/src/prettify.css\";\r\n\r\nimport parserTypeScript from 'prettier/parser-typescript';\r\nimport prettier from 'prettier/standalone';\r\nimport parserHtml from \"prettier/parser-html\";\r\nimport {Component, CSSProperties} from \"react\";\r\nimport \"./index.scss\";\r\n\r\ninterface CodeViewProps {\r\n  children: string\r\n  className?: string\r\n  style?: CSSProperties\r\n  language?: \"ts\" | \"html\"\r\n}\r\n\r\nexport class CodeView extends Component<CodeViewProps, {}> {\r\n\r\n  static defaultProps: CodeViewProps = {\r\n    children: \"\",\r\n    language: \"ts\"\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Readonly<{}>, prevState: Readonly<{ selectedIndex: number }>, snapshot?: any) {\r\n    (window as any).PR.prettyPrint();\r\n  }\r\n\r\n  componentDidMount() {\r\n    (window as any).PR.prettyPrint();\r\n  }\r\n\r\n  render() {\r\n    let result = \"\";\r\n    try {\r\n      result = prettier.format(this.props.children, {\r\n        parser: \"typescript\",\r\n        plugins: [parserTypeScript, parserHtml]\r\n      });\r\n    } catch (e) {\r\n      console.error(\"代码格式有误，无法解析\")\r\n      result = this.props.children\r\n    }\r\n    return (\r\n      <pre className={`lg-code-view prettyprint lang-js ${this.props.className || \"\"}`} style={this.props.style}>\r\n          <div className=\"code_block\">\r\n            <code className=\"code_text\">{result}</code>\r\n          </div>\r\n      </pre>\r\n    )\r\n  }\r\n}\r\n","import \"./index.scss\";\r\nimport React from 'react';\r\nimport { Card } from 'element-react';\r\nimport {BaseComponent} from \"../../type/BaseComponent\"\r\nimport { BaseProps } from \"../../type/BaseProps\";\r\nimport classNames from \"classnames\";\r\n\r\nexport interface LgCardProps extends BaseProps {\r\n    headerContent?: string | React.ReactElement<any>\r\n    bodyStyle?: React.CSSProperties\r\n    width?: number\r\n    shadow?: \"always\" | \"hover\" | \"never\"\r\n\r\n}\r\n\r\nexport const LgCard = (props: LgCardProps) => {\r\n    return <LgBaseCard {...props} />\r\n}\r\n\r\nexport class LgBaseCard extends BaseComponent<LgCardProps> {\r\n    render() {\r\n        let width = this.props.width || 480\r\n        let shadow = this.props.shadow || \"always\"\r\n        let className = classNames(\r\n            \"box-card\",\r\n            `shadow-${shadow}`,\r\n            {\r\n                [`${this.props.className}`]: !!this.props.className\r\n            }\r\n        )\r\n           \r\n        return (\r\n            <Card\r\n              className={className}\r\n              bodyStyle={this.props.bodyStyle}\r\n              style={{width}}\r\n              header={\r\n                this.props.headerContent\r\n              }\r\n            >\r\n                {\r\n                    this.props.children\r\n                }      \r\n            </Card>\r\n          )        \r\n      }\r\n  }","import {Component} from \"react\";\r\nimport {LgCard} from \"@/components/card\";\r\nimport \"./index.scss\";\r\nimport {BaseProps} from \"../../type/BaseProps\";\r\nimport {CodeView} from \"@/components/CodeView\";\r\nimport {Button} from 'element-react';\r\nimport cardImage from './img/beautiful.png'\r\n\r\nexport default class Card extends Component<{}, {}> {\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"lg-card-demo\">\r\n        <div>在页面文件中引入组件</div>\r\n        <CodeView className=\"code-size\">\r\n          {`\r\n               import {LgCard} from \"@/components/Card\";\r\n            `}\r\n        </CodeView>\r\n        <div>标签属性详解</div>\r\n        <CodeView className=\"code-size\">\r\n          {`\r\n            interface LgCardProps extends BaseProps {\r\n              headerContent?: string | React.ReactElement<any> // 卡片标题内容，可空，可包含标题和操作按钮\r\n              bodyStyle?: React.CSSProperties // 设置卡片内容的样式，可空\r\n              width?: number // 设置卡片的宽度，默认480\r\n              shadow?: \"always\" | \"hover\" | \"never\" // 设置阴影显示的时机，默认为always\r\n          \r\n            }\r\n          `}\r\n        </CodeView>\r\n\r\n        <TypeCardFrame title=\"基本用法\" subtitle=\"简单的卡片状态，包含所需标题、操作和卡片内容。\" className=\"base-use\">\r\n          <div>\r\n            <CodeView className=\"code-size\">\r\n              {`\r\n                <>\r\n                  // 代码示例\r\n                  <LgCard headerContent={\r\n                      <div className=\"clearfix\">\r\n                        <span style={{ \"lineHeight\": \"36px\" }}>今日必做</span>\r\n                        <span style={{ \"float\": \"right\" }}>\r\n                          <Button type=\"primary\">新增卡片</Button>\r\n                        </span>\r\n                      </div>\r\n                    } bodyStyle={{paddingTop:20,paddingBottom:10}} width={480} >\r\n                      <div className=\"text item\">1 洗衣服</div>\r\n                      <div className=\"text item\">2 做饭</div>\r\n                      <div className=\"text item\">3 打篮球</div>\r\n                      <div className=\"text item\">4 写作业</div>\r\n                    </LgCard>\r\n                </>\r\n              `}\r\n            </CodeView>\r\n          </div>\r\n          <div>\r\n            <LgCard headerContent={\r\n                <div className=\"clearfix\">\r\n                  <span style={{ \"lineHeight\": \"36px\"}}>今日必做</span>\r\n                  <span style={{ \"float\": \"right\" }}>\r\n                    <Button type=\"primary\">新增卡片</Button>\r\n                  </span>\r\n                </div>\r\n              } bodyStyle={{paddingTop:20}} width={480} shadow=\"always\">\r\n              <div className=\"text item\">1 洗衣服</div>\r\n              <div className=\"text item\">2 做饭</div>\r\n              <div className=\"text item\">3 打篮球</div>\r\n              <div className=\"text item\">4 写作业</div>\r\n            </LgCard>\r\n          </div>\r\n        </TypeCardFrame>\r\n\r\n        <TypeCardFrame className=\"easy-use\" title=\"简单用法\" subtitle=\"只包含卡片内容，无标题和操作按钮\">\r\n          <div>\r\n            <CodeView className=\"code-size\">\r\n              {`\r\n                <>\r\n                  // 代码示例\r\n                  <LgCard bodyStyle={{paddingTop:20,paddingBottom:10}} width={480}>\r\n                    <div className=\"text item\">1 洗衣服</div>\r\n                    <div className=\"text item\">2 做饭</div>\r\n                    <div className=\"text item\">3 打篮球</div>\r\n                    <div className=\"text item\">4 写作业</div>\r\n                  </LgCard>\r\n                </>\r\n              `}\r\n            </CodeView>\r\n          </div>\r\n          <div>\r\n            <LgCard bodyStyle={{paddingTop:20,paddingBottom:10}} width={480}>\r\n              <div className=\"text item\">1 洗衣服</div>\r\n              <div className=\"text item\">2 做饭</div>\r\n              <div className=\"text item\">3 打篮球</div>\r\n              <div className=\"text item\">4 写作业</div>\r\n            </LgCard>\r\n          </div>\r\n        </TypeCardFrame>\r\n\r\n        <TypeCardFrame className=\"img-demo\" title=\"带图片卡片\" subtitle=\"可进行更多丰富的内容展示\">\r\n          <div>\r\n            <CodeView className=\"code-size\">\r\n              {`\r\n                <>\r\n                  // 代码示例\r\n                  <LgCard bodyStyle={{padding:0}} width={200} className=\"img-card\">\r\n                    <img src={cardImage} className=\"image\" alt=\"\"/>\r\n                    <div style={{ padding: 14 }}>\r\n                      <span>好看的女生</span>\r\n                      <div className=\"bottom clearfix\">\r\n                        <time className=\"time\">2016-10-21 16:19</time>\r\n                        <Button type=\"text\" className=\"button\">操作按钮</Button>\r\n                      </div>\r\n                    </div>\r\n                  </LgCard>\r\n                </>\r\n              `}\r\n            </CodeView>\r\n          </div>\r\n          <div>\r\n            <LgCard bodyStyle={{padding:0}} width={200} className=\"img-card\">\r\n              <img src={cardImage} className=\"image\" alt=\"\"/>\r\n              <div style={{ padding: 14 }}>\r\n                <span>好看的女生</span>\r\n                <div className=\"bottom clearfix\">\r\n                  <time className=\"time\">2016-10-21 16:19</time>\r\n                  <Button type=\"text\" className=\"button\">操作按钮</Button>\r\n                </div>\r\n              </div>\r\n            </LgCard>\r\n            <LgCard bodyStyle={{padding:0}} width={200} className=\"img-card\">\r\n              <img src={cardImage} className=\"image\" alt=\"\"/>\r\n              <div style={{ padding: 14 }}>\r\n                <span>好看的女生</span>\r\n                <div className=\"bottom clearfix\">\r\n                  <time className=\"time\">2016-10-21 16:19</time>\r\n                  <Button type=\"text\" className=\"button\">操作按钮</Button>\r\n                </div>\r\n              </div>\r\n            </LgCard>\r\n          </div>\r\n          \r\n          \r\n        </TypeCardFrame>\r\n        <TypeCardFrame className=\"shadow-demo\" title=\"卡片阴影\"\r\n                          subtitle=\"可以控制卡片的阴影\">\r\n          <div>\r\n            <CodeView className=\"code-size\">\r\n              {`\r\n                <>\r\n                  // 代码示例\r\n                  <LgCard shadow=\"always\" width={150} bodyStyle={{padding:8}}>总是显示</LgCard>\r\n                  <LgCard shadow=\"hover\" width={200} bodyStyle={{padding:8}}>鼠标悬浮时显示</LgCard>\r\n                  <LgCard shadow=\"never\" width={150} bodyStyle={{padding:8}}>从不显示</LgCard>\r\n                </>\r\n              `}\r\n            </CodeView>\r\n          </div>\r\n          <div className=\"shadow-control-card\">\r\n            <LgCard shadow=\"always\" width={150} bodyStyle={{padding:8}}>总是显示</LgCard>\r\n            <LgCard shadow=\"hover\" width={200} bodyStyle={{padding:8}}>鼠标悬浮时显示</LgCard>\r\n            <LgCard shadow=\"never\" width={150} bodyStyle={{padding:8}}>从不显示</LgCard>\r\n          </div>\r\n        </TypeCardFrame>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\ninterface TypeCardFrameProps {\r\n  title: string\r\n  subtitle: string\r\n}\r\n\r\nconst TypeCardFrame = (props: TypeCardFrameProps & BaseProps) => {\r\n  return (\r\n    <div className={`card-frame ${props.className || \"\"}`}>\r\n      <div className=\"title\">{props.title}</div>\r\n      <div className=\"subtitle\">{props.subtitle}</div>\r\n      <div className=\"split-line\"/>\r\n      <div className=\"card-content\">\r\n        {\r\n          props.children\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}","import {Component} from \"react\";\r\nimport {BaseProps} from \"./BaseProps\";\r\n\r\nexport class BaseComponent<T = {}, S = {}, SS = any> extends Component<T & BaseProps, S, SS>{\r\n  constructor(props: (T & BaseProps) | Readonly<T & BaseProps>) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.onRef && this.props.onRef(this)\r\n  }\r\n}","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 26291;\nmodule.exports = webpackEmptyContext;"],"names":["CodeView","prevProps","prevState","snapshot","window","PR","prettyPrint","result","prettier","this","props","children","parser","plugins","parserTypeScript","parserHtml","e","console","error","className","style","Component","defaultProps","language","LgCard","LgBaseCard","width","shadow","classNames","Card","bodyStyle","header","headerContent","BaseComponent","TypeCardFrame","title","subtitle","Button","type","paddingTop","paddingBottom","padding","src","cardImage","alt","onRef","webpackEmptyContext","req","Error","code","keys","resolve","id","module","exports"],"sourceRoot":""}