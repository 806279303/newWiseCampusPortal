{"version":3,"file":"static/js/48.b7d2e306.chunk.js","mappings":"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","sources":["components/CodeView/index.tsx","components/demoView/index.tsx","pages/demoPage/index.tsx","components/tabs/index.tsx","pages/tabs/index.tsx","type/BaseComponent.ts","../node_modules/prettier|sync","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js"],"sourcesContent":["import \"code-prettify\";\r\nimport \"code-prettify/src/prettify.css\";\r\n\r\nimport parserTypeScript from 'prettier/parser-typescript';\r\nimport prettier from 'prettier/standalone';\r\nimport parserHtml from \"prettier/parser-html\";\r\nimport {Component, createRef, CSSProperties, RefObject} from \"react\";\r\nimport \"./index.scss\";\r\nimport classNames from \"classnames\";\r\n\r\ninterface CodeViewProps {\r\n  children: string\r\n  className?: string\r\n  style?: CSSProperties\r\n  language?: \"ts\" | \"html\"\r\n  defaultShow?: boolean\r\n  canHidden?: boolean\r\n}\r\n\r\n\r\ninterface CodeViewState {\r\n  isShowCode: boolean\r\n}\r\n\r\nexport class CodeView extends Component<CodeViewProps, CodeViewState> {\r\n\r\n  private readonly codeViewAreaRef: RefObject<HTMLDivElement>\r\n  private areaMaxHeight: string\r\n\r\n  static defaultProps: CodeViewProps = {\r\n    children: \"\",\r\n    language: \"ts\",\r\n    canHidden: false\r\n  }\r\n\r\n  constructor(props: CodeViewProps | Readonly<CodeViewProps>) {\r\n    super(props);\r\n    this.state = {\r\n      isShowCode: true\r\n    }\r\n    this.codeViewAreaRef = createRef<HTMLDivElement>();\r\n    this.areaMaxHeight = \"fit-content\"\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    (window as any).PR.prettyPrint();\r\n  }\r\n\r\n  componentDidMount() {\r\n    (window as any).PR.prettyPrint();\r\n    this.areaMaxHeight = this.codeViewAreaRef.current?.clientHeight + \"px\" || \"fit-content\"\r\n    this.setState({\r\n      isShowCode: !this.props.canHidden || !!this.props.defaultShow\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let result = \"\";\r\n    try {\r\n      result = prettier.format(this.props.children, {\r\n        parser: \"typescript\",\r\n        plugins: [parserTypeScript, parserHtml]\r\n      });\r\n    } catch (e) {\r\n      console.error(\"代码格式有误，无法解析\")\r\n      result = this.props.children\r\n    }\r\n\r\n    let className = classNames(\r\n      \"lg-code-view-root\",\r\n      {\r\n        [`${this.props.className}`]: !!this.props.className,\r\n        \"lg-code-view-can-hidden\": this.props.canHidden\r\n      }\r\n    )\r\n\r\n    return (\r\n      <div className={className} style={this.props.style}>\r\n        <div ref={this.codeViewAreaRef} className=\"lg-code-view-area\"\r\n             style={{height: this.state.isShowCode ? this.areaMaxHeight : \"0\"}}>\r\n          <pre className={`prettyprint lang-js`}>\r\n              <div className=\"code_block\">\r\n                <code className=\"code_text\">{result}</code>\r\n              </div>\r\n          </pre>\r\n        </div>\r\n        {\r\n          !this.props.canHidden ? \"\" :\r\n            <div onClick={() => this.setState({isShowCode: !this.state.isShowCode})}\r\n                 className=\"lg-code-view-show-button\">\r\n              <div className={`lg-code-view-show-text ${this.state.isShowCode ? \"on-show\" : \"\"}`}>\r\n                {!this.state.isShowCode ? \"显示\" : \"隐藏\"}代码\r\n              </div>\r\n            </div>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import \"./index.scss\"\r\nimport {BaseComponent} from \"../../type/BaseComponent\";\r\nimport classNames from \"classnames\";\r\nimport { BaseProps } from \"../../type/BaseProps\";\r\nimport {CodeView} from \"@/components/CodeView\";\r\n\r\n\r\nexport interface DemoViewProps {\r\n  title: string\r\n  subtitle?: string\r\n  code?: string\r\n}\r\n\r\nexport class DemoView extends BaseComponent<DemoViewProps> {\r\n\r\n  private readonly classNamePrefix: string\r\n\r\n  constructor(props: (DemoViewProps & BaseProps) | Readonly<DemoViewProps & BaseProps>) {\r\n    super(props);\r\n    this.classNamePrefix = \"lg-demo-view\"\r\n  }\r\n\r\n  render() {\r\n    let className = classNames(\r\n      `${this.classNamePrefix}-root`,\r\n      {\r\n        [`${this.props.className}`]: !!this.props.className\r\n      }\r\n    )\r\n    return (\r\n      <div className={className} style={this.props.style}>\r\n        <div className={`${this.classNamePrefix}-title`}>{this.props.title}</div>\r\n        {\r\n          !this.props.subtitle ? \"\" :\r\n            <div className={`${this.classNamePrefix}-subtitle`}>{this.props.subtitle}</div>\r\n        }\r\n        <div className={`${this.classNamePrefix}-component-area`}>\r\n          {\r\n            this.props.children\r\n          }\r\n        </div>\r\n        {\r\n          !this.props.code? \"\":\r\n            <CodeView canHidden={true}>{this.props.code}</CodeView>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}","import {BaseComponent} from \"../../type/BaseComponent\";\r\nimport {BaseProps} from \"../../type/BaseProps\";\r\nimport classNames from \"classnames\";\r\nimport \"./index.scss\"\r\nimport {CodeView} from \"@/components/CodeView\";\r\n\r\nexport interface DemoPageProps {\r\n  title: string\r\n  subtitle?: string\r\n  importCode?: string\r\n  interfaceCode?: string\r\n}\r\n\r\n\r\nexport class DemoPage extends BaseComponent<DemoPageProps> {\r\n\r\n  private readonly classNamePrefix: string\r\n\r\n  constructor(props: (DemoPageProps & BaseProps) | Readonly<DemoPageProps & BaseProps>) {\r\n    super(props);\r\n    this.classNamePrefix = \"lg-demo-page\"\r\n  }\r\n\r\n  render() {\r\n\r\n    const className = classNames(\r\n      `${this.classNamePrefix}-root`,\r\n      {\r\n        [`${this.props.className}`]: !!this.props.className\r\n      }\r\n    )\r\n\r\n    return (\r\n      <div className={className}>\r\n        <div className={`${this.classNamePrefix}-header`}>\r\n          <div className={`${this.classNamePrefix}-title`}>{this.props.title}</div>\r\n          {\r\n            !this.props.subtitle ? \"\" :\r\n              < div className={`${this.classNamePrefix}-subtitle`}>{this.props.subtitle}</div>\r\n          }\r\n          {\r\n            !this.props.importCode ? \"\" : (\r\n              <div className={`${this.classNamePrefix}-import`}>\r\n                <div className={`${this.classNamePrefix}-import-title`}>在页面中引入组件</div>\r\n                <CodeView>\r\n                  {this.props.importCode}\r\n                </CodeView>\r\n              </div>\r\n            )\r\n\r\n          }\r\n        </div>\r\n        <div className={`${this.classNamePrefix}-body`}>\r\n          {\r\n            this.props.children\r\n          }\r\n        </div>\r\n        <div className={`${this.classNamePrefix}-footer`}>\r\n          {\r\n            !this.props.interfaceCode ? \"\" : (\r\n              <div className={`${this.classNamePrefix}-interface`}>\r\n                <div className={`${this.classNamePrefix}-interface-title`}>标签属性解析</div>\r\n                <CodeView>\r\n                  {this.props.interfaceCode}\r\n                </CodeView>\r\n              </div>\r\n            )\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import \"./index.scss\"\r\nimport { Component } from \"react\";\r\nimport { BaseProps } from '../../type/BaseProps';\r\n\r\nimport { Menu, Tabs } from \"element-react\";\r\nimport { BaseComponent } from \"../../type/BaseComponent\";\r\n\r\n\r\ninterface TabsProps {\r\n    type?: 'card' | 'border-card'\r\n    activeName?: string\r\n    value?: string\r\n    closable?: boolean\r\n    addable?: boolean\r\n    editable?: boolean\r\n    // TODO: add tab type\r\n    onTabClick?(tab?: any): void\r\n    onTabRemove?(name?: string): void\r\n    onTabAdd?(): void\r\n    onTabEdit?(targetName?: string, action?: string): void\r\n}\r\ninterface TabsPaneProps{\r\n    label?: string | React.ReactElement<any>\r\n    name?: string\r\n    disabled?: boolean\r\n    closable?: boolean\r\n}\r\nexport class LgPaneClass extends BaseComponent<TabsPaneProps, {}>{\r\n    render() {\r\n        return (\r\n            <Tabs.Pane {...this.props}>\r\n                {\r\n                    this.props.children\r\n                }\r\n            </Tabs.Pane>\r\n        )\r\n    }\r\n}\r\nexport class LgTabs extends BaseComponent<TabsProps> {\r\n\r\n    static readonly LgPane = LgPaneClass\r\n\r\n\r\n    constructor(props: TabsProps) {\r\n        super(props)\r\n    }\r\n\r\n    onSelect() {\r\n    }\r\n    onOpen() {\r\n\r\n    }\r\n    onClose() {\r\n\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        super.componentDidMount()\r\n    }\r\n    render() {\r\n        const { className = '', style } = this.props\r\n        return (\r\n            <div className={`lg_tabs_root ${className}`} style={style}>\r\n                <Tabs {...this.props}>\r\n                    {\r\n                        this.props.children\r\n                    }\r\n                </Tabs>\r\n            </div>\r\n        )\r\n    }\r\n}","import { Component } from \"react\";\r\nimport \"./index.scss\";\r\nimport { AllSkinCover } from \"../AllSkinCover\";\r\nimport { Icon, Button } from \"element-react\";\r\nimport { LgTabs } from \"@/components/tabs\";\r\nimport { CodeView } from '@/components/CodeView';\r\nimport { DemoPage } from \"../demoPage\";\r\nimport { DemoView } from \"@/components/demoView\";\r\n\r\ninterface IState {\r\n    tabs: any\r\n    tabIndex: any\r\n    tabs1: any\r\n    tabIndex1: any\r\n}\r\nexport default class Menu extends Component<{}, IState> {\r\n    constructor(props: {}) {\r\n        super(props);\r\n        this.state = {\r\n            tabs: [{\r\n                title: 'Tab 1',\r\n                name: 'Tab 1',\r\n                content: 'Tab 1 content',\r\n            }, {\r\n                title: 'Tab 2',\r\n                name: 'Tab 2',\r\n                content: 'Tab 2 content',\r\n            }],\r\n            tabIndex: 2,\r\n\r\n            tabs1: [{\r\n                title: 'Tab 1',\r\n                name: 'Tab 1',\r\n                content: 'Tab 1 content',\r\n            }, {\r\n                title: 'Tab 2',\r\n                name: 'Tab 2',\r\n                content: 'Tab 2 content',\r\n            }],\r\n            tabIndex1: 2,\r\n        }\r\n    }\r\n    editTab(action: any, tab: any) {\r\n        if (action === 'add') {\r\n            const tabs = this.state.tabs;\r\n            const tabIndex = this.state.tabIndex;\r\n            const index = tabIndex + 1;\r\n\r\n            tabs.push({\r\n                title: 'new Tab',\r\n                name: 'Tab ' + index,\r\n                content: 'new Tab content',\r\n            });\r\n            this.setState({\r\n                tabs,\r\n                tabIndex: index,\r\n            });\r\n        }\r\n\r\n        if (action === 'remove') {\r\n            const { tabs } = this.state;\r\n\r\n            console.log(action, tab);\r\n            tabs.splice(tab.key.replace(/^\\.\\$/, ''), 1);\r\n            this.setState({\r\n                tabs,\r\n            });\r\n        }\r\n    }\r\n\r\n    addTab() {\r\n        const { tabs1, tabIndex1 } = this.state;\r\n        const index = tabIndex1 + 1;\r\n\r\n        tabs1.push({\r\n            title: 'new Tab',\r\n            name: 'Tab ' + index,\r\n            content: 'new Tab content',\r\n        });\r\n        this.setState({\r\n            tabs1,\r\n            tabIndex1: index,\r\n        });\r\n    }\r\n\r\n    removeTab(tab: any) {\r\n        const { tabs1, tabIndex } = this.state;\r\n\r\n        tabs1.splice(tab.key.replace(/^\\.\\$/, ''), 1);\r\n        this.setState({\r\n            tabs1,\r\n        });\r\n    }\r\n    render() {\r\n        const label = <span><Icon name=\"date\" /> 用户管理</span>\r\n        return (\r\n            <DemoPage title=\"G007Tabs选项卡\" className=\"lg_tabs_block\"\r\n                importCode={`\r\n                    import { LgTabs } from \"@/components/tabs\";\r\n                `}\r\n                interfaceCode={`\r\n                  interface TabsProps {\r\n                        type?: 'card' | 'border-card'\r\n                        activeName?: string\r\n                        value?: string\r\n                        closable?: boolean\r\n                        addable?: boolean\r\n                        editable?: boolean\r\n                        // TODO: add tab type\r\n                        onTabClick?(tab?: any): void\r\n                        onTabRemove?(name?: string): void\r\n                        onTabAdd?(): void\r\n                        onTabEdit?(targetName?: string, action?: string): void\r\n                    }\r\n                    interface TabsPaneProps{\r\n                        label?: string | React.ReactElement<any>\r\n                        name?: string\r\n                        disabled?: boolean\r\n                        closable?: boolean\r\n                    }\r\n                `}>\r\n\r\n                <DemoView title={\"基础样式\"} subtitle={\"基础的、简洁的标签页。\"}\r\n                    code={`\r\n              <LgTabs activeName=\"2\" onTabClick={(tab) => console.log(tab.props.name)}>\r\n                    <LgTabs.LgPane label=\"用户管理\" name=\"1\">用户管理</LgTabs.LgPane>\r\n                    <LgTabs.LgPane label=\"配置管理\" name=\"2\">配置管理</LgTabs.LgPane>\r\n                    <LgTabs.LgPane label=\"角色管理\" name=\"3\">角色管理</LgTabs.LgPane>\r\n                    <LgTabs.LgPane label=\"定时补偿任务\" name=\"4\">定时补偿任务</LgTabs.LgPane>\r\n                </LgTabs>\r\n            `}>\r\n                    <LgTabs activeName=\"2\" onTabClick={(tab) => console.log(tab.props.name)}>\r\n                        <LgTabs.LgPane label=\"用户管理\" name=\"1\">用户管理</LgTabs.LgPane>\r\n                        <LgTabs.LgPane label=\"配置管理\" name=\"2\">配置管理</LgTabs.LgPane>\r\n                        <LgTabs.LgPane label=\"角色管理\" name=\"3\">角色管理</LgTabs.LgPane>\r\n                        <LgTabs.LgPane label=\"定时补偿任务\" name=\"4\">定时补偿任务</LgTabs.LgPane>\r\n                    </LgTabs>\r\n                </DemoView>\r\n\r\n                <DemoView title={\"选项卡样式\"} subtitle={\"选项卡样式的标签页。\"}\r\n                    code={`\r\n              <LgTabs type=\"card\" value=\"1\">\r\n                    <LgTabs.LgPane label=\"用户管理\" name=\"1\">用户管理</LgTabs.LgPane>\r\n                    <LgTabs.LgPane label=\"配置管理\" name=\"2\">配置管理</LgTabs.LgPane>\r\n                    <LgTabs.LgPane label=\"角色管理\" name=\"3\">角色管理</LgTabs.LgPane>\r\n                    <LgTabs.LgPane label=\"定时补偿任务\" name=\"4\">定时补偿任务</LgTabs.LgPane>\r\n                </LgTabs>\r\n            `}>\r\n                    <LgTabs type=\"card\" value=\"1\">\r\n                        <LgTabs.LgPane label=\"用户管理\" name=\"1\">用户管理</LgTabs.LgPane>\r\n                        <LgTabs.LgPane label=\"配置管理\" name=\"2\">配置管理</LgTabs.LgPane>\r\n                        <LgTabs.LgPane label=\"角色管理\" name=\"3\">角色管理</LgTabs.LgPane>\r\n                        <LgTabs.LgPane label=\"定时补偿任务\" name=\"4\">定时补偿任务</LgTabs.LgPane>\r\n                    </LgTabs>\r\n                </DemoView>\r\n\r\n                <DemoView title={\"可关闭\"} subtitle={\"可以关闭标签页。\"}\r\n                    code={`\r\n              <LgTabs type=\"card\" closable activeName=\"1\" onTabRemove={(tab: any) => console.log(tab.props.name)}>\r\n                    <LgTabs.LgPane label=\"用户管理\" name=\"1\">用户管理</LgTabs.LgPane>\r\n                    <LgTabs.LgPane label=\"配置管理\" name=\"2\">配置管理</LgTabs.LgPane>\r\n                    <LgTabs.LgPane label=\"角色管理\" name=\"3\">角色管理</LgTabs.LgPane>\r\n                    <LgTabs.LgPane label=\"定时补偿任务\" name=\"4\">定时补偿任务</LgTabs.LgPane>\r\n                </LgTabs>\r\n            `}>\r\n                    <LgTabs type=\"card\" closable activeName=\"1\" onTabRemove={(tab: any) => console.log(tab.props.name)}>\r\n                        <LgTabs.LgPane label=\"用户管理\" name=\"1\">用户管理</LgTabs.LgPane>\r\n                        <LgTabs.LgPane label=\"配置管理\" name=\"2\">配置管理</LgTabs.LgPane>\r\n                        <LgTabs.LgPane label=\"角色管理\" name=\"3\">角色管理</LgTabs.LgPane>\r\n                        <LgTabs.LgPane label=\"定时补偿任务\" name=\"4\">定时补偿任务</LgTabs.LgPane>\r\n                    </LgTabs>\r\n                </DemoView>\r\n\r\n                <DemoView title={\"卡片化\"} subtitle={\"卡片化的标签页。\"}\r\n                    code={`\r\n              <LgTabs type=\"border-card\" activeName=\"1\">\r\n                    <LgTabs.LgPane label=\"用户管理\" name=\"1\">用户管理</LgTabs.LgPane>\r\n                    <LgTabs.LgPane label=\"配置管理\" name=\"2\">配置管理</LgTabs.LgPane>\r\n                    <LgTabs.LgPane label=\"角色管理\" name=\"3\">角色管理</LgTabs.LgPane>\r\n                    <LgTabs.LgPane label=\"定时补偿任务\" name=\"4\">定时补偿任务</LgTabs.LgPane>\r\n                </LgTabs>\r\n            `}>\r\n                    <LgTabs type=\"border-card\" activeName=\"1\">\r\n                        <LgTabs.LgPane label=\"用户管理\" name=\"1\">用户管理</LgTabs.LgPane>\r\n                        <LgTabs.LgPane label=\"配置管理\" name=\"2\">配置管理</LgTabs.LgPane>\r\n                        <LgTabs.LgPane label=\"角色管理\" name=\"3\">角色管理</LgTabs.LgPane>\r\n                        <LgTabs.LgPane label=\"定时补偿任务\" name=\"4\">定时补偿任务</LgTabs.LgPane>\r\n                    </LgTabs>\r\n                </DemoView>\r\n\r\n                <DemoView title={\"自定义标签页\"} subtitle={\"可以通过node类型来实现自定义标签页的内容。\"}\r\n                    code={`\r\n              <LgTabs type=\"border-card\" activeName=\"1\">\r\n                    <LgTabs.LgPane label={label} name=\"1\">用户管理</LgTabs.LgPane>\r\n                    <LgTabs.LgPane label=\"配置管理\" name=\"2\">配置管理</LgTabs.LgPane>\r\n                    <LgTabs.LgPane label=\"角色管理\" name=\"3\">角色管理</LgTabs.LgPane>\r\n                    <LgTabs.LgPane label=\"定时补偿任务\" name=\"4\">定时补偿任务</LgTabs.LgPane>\r\n                </LgTabs>\r\n            `}>\r\n                    <LgTabs type=\"border-card\" activeName=\"1\">\r\n                        <LgTabs.LgPane label={label} name=\"1\">用户管理</LgTabs.LgPane>\r\n                        <LgTabs.LgPane label=\"配置管理\" name=\"2\">配置管理</LgTabs.LgPane>\r\n                        <LgTabs.LgPane label=\"角色管理\" name=\"3\">角色管理</LgTabs.LgPane>\r\n                        <LgTabs.LgPane label=\"定时补偿任务\" name=\"4\">定时补偿任务</LgTabs.LgPane>\r\n                    </LgTabs>\r\n                </DemoView>\r\n\r\n                <DemoView title={\"动态增减标签页\"} subtitle={\"增减标签页按钮只能在选项卡样式的标签页下使用。\"}\r\n                    code={`\r\n              <LgTabs type=\"card\" value=\"Tab 2\" editable onTabEdit={(action, tab) => this.editTab(action, tab)}>\r\n                    {\r\n                        this.state.tabs.map((item: any, index: any) => {\r\n                            return <LgTabs.LgPane key={index} closable label={item.title} name={item.name}>{item.content}</LgTabs.LgPane>\r\n                        })\r\n                    }\r\n                </LgTabs>\r\n            `}>\r\n                    <LgTabs type=\"card\" value=\"Tab 2\" editable onTabEdit={(action, tab) => this.editTab(action, tab)}>\r\n                        {\r\n                            this.state.tabs.map((item: any, index: any) => {\r\n                                return <LgTabs.LgPane key={index} closable label={item.title} name={item.name}>{item.content}</LgTabs.LgPane>\r\n                            })\r\n                        }\r\n                    </LgTabs>\r\n                </DemoView>\r\n\r\n                <DemoView title={\"动态添加标签页\"}\r\n                    code={`\r\n              <LgTabs type=\"card\" value=\"Tab 2\" onTabRemove={(tab) => this.removeTab(tab)}>\r\n                    {\r\n                        this.state.tabs1.map((item: any, index: any) => {\r\n                            return <LgTabs.LgPane key={index} closable label={item.title} name={item.name}>{item.content}</LgTabs.LgPane>\r\n                        })\r\n                    }\r\n                </LgTabs>\r\n            `}>\r\n                    <div style={{ marginBottom: '20px' }}>\r\n                        <Button size=\"small\" onClick={() => this.addTab()}>add tab</Button>\r\n                    </div>\r\n                    <LgTabs type=\"card\" value=\"Tab 2\" onTabRemove={(tab) => this.removeTab(tab)}>\r\n                        {\r\n                            this.state.tabs1.map((item: any, index: any) => {\r\n                                return <LgTabs.LgPane key={index} closable label={item.title} name={item.name}>{item.content}</LgTabs.LgPane>\r\n                            })\r\n                        }\r\n                    </LgTabs>\r\n                </DemoView>\r\n\r\n            </DemoPage>\r\n        )\r\n    }\r\n}\r\n","import {Component} from \"react\";\r\nimport {BaseProps} from \"./BaseProps\";\r\n\r\nexport class BaseComponent<T = {}, S = {}, SS = any> extends Component<T & BaseProps, S, SS>{\r\n  constructor(props: (T & BaseProps) | Readonly<T & BaseProps>) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.onRef && this.props.onRef(this)\r\n  }\r\n}","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 26291;\nmodule.exports = webpackEmptyContext;","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}"],"names":["CodeView","props","codeViewAreaRef","areaMaxHeight","state","isShowCode","createRef","window","PR","prettyPrint","this","current","clientHeight","setState","canHidden","defaultShow","result","prettier","children","parser","plugins","parserTypeScript","parserHtml","e","console","error","className","classNames","style","ref","height","onClick","Component","defaultProps","language","DemoView","classNamePrefix","title","subtitle","code","BaseComponent","DemoPage","importCode","interfaceCode","LgPaneClass","Tabs","LgTabs","LgPane","Menu","tabs","name","content","tabIndex","tabs1","tabIndex1","action","tab","index","push","log","splice","key","replace","label","Icon","activeName","onTabClick","type","value","closable","onTabRemove","editable","onTabEdit","editTab","map","item","marginBottom","Button","size","addTab","removeTab","onRef","webpackEmptyContext","req","Error","keys","resolve","id","module","exports","_superPropBase","object","property","Object","prototype","hasOwnProperty","call","getPrototypeOf","_get","Reflect","get","target","receiver","base","desc","getOwnPropertyDescriptor","arguments","length","apply"],"sourceRoot":""}