{"version":3,"file":"static/js/759.db575032.chunk.js","mappings":"+TAwBaA,EAAb,0CAWE,WAAYC,GAAiD,IAAD,yBAC1D,cAAMA,IAVSC,qBAS2C,IARpDC,mBAQoD,EAE1D,EAAKC,MAAQ,CACXC,YAAY,GAEd,EAAKH,iBAAkBI,EAAAA,EAAAA,aACvB,EAAKH,cAAgB,cANqC,EAX9D,iDAoBE,WACGI,OAAeC,GAAGC,gBArBvB,+BAwBE,WAAqB,IAAD,EACjBF,OAAeC,GAAGC,cACnBC,KAAKP,eAAgB,UAAAO,KAAKR,gBAAgBS,eAArB,eAA8BC,cAAe,MAAQ,EAC1EF,KAAKG,SAAS,CACZR,YAAaK,KAAKT,MAAMa,aAAeJ,KAAKT,MAAMc,gBA5BxD,oBAgCE,WAAU,IAAD,SACHC,EAAS,GACb,IACEA,EAASC,IAAAA,OAAgBP,KAAKT,MAAMiB,SAAU,CAC5CC,OAAQ,aACRC,QAAS,CAACC,IAAkBC,OAE9B,MAAOC,GACPC,QAAQC,MAAM,sEACdT,EAASN,KAAKT,MAAMiB,SAGtB,IAAIQ,EAAYC,GAAAA,CACd,qBADwB,yBAGlBjB,KAAKT,MAAMyB,aAAgBhB,KAAKT,MAAMyB,YAHpB,SAItB,0BAA2BhB,KAAKT,MAAMa,WAJhB,IAQ1B,OACE,iBAAKY,UAAWA,EAAWE,MAAOlB,KAAKT,MAAM2B,MAA7C,WACE,gBAAKC,IAAKnB,KAAKR,gBAAiBwB,UAAU,oBACrCE,MAAO,CAACE,OAAQpB,KAAKN,MAAMC,WAAaK,KAAKP,cAAgB,KADlE,UAEE,gBAAKuB,UAAS,sBAAd,UACI,gBAAKA,UAAU,aAAf,UACE,iBAAMA,UAAU,YAAhB,SAA6BV,UAKlCN,KAAKT,MAAMa,WACV,gBAAKiB,QAAS,kBAAM,EAAKlB,SAAS,CAACR,YAAa,EAAKD,MAAMC,cACtDqB,UAAU,2BADf,UAEE,iBAAKA,UAAS,iCAA4BhB,KAAKN,MAAMC,WAAa,UAAY,IAA9E,UACIK,KAAKN,MAAMC,WAAoB,eAAP,eAD5B,oBAHoB,UA/DlC,GAA8B2B,EAAAA,WAAjBhC,EAKJiC,aAA8B,CACnCf,SAAU,GACVgB,SAAU,KACVpB,WAAW,I,gLCnBFqB,EAAb,0CAIE,WAAYlC,GAA2E,IAAD,yBACpF,cAAMA,IAHSmC,qBAEqE,EAEpF,EAAKA,gBAAkB,eAF6D,EAJxF,qCASE,WACE,IAAIV,EAAYC,GAAAA,CAAW,GAAD,OACrBjB,KAAK0B,gBADgB,8BAGlB1B,KAAKT,MAAMyB,aAAgBhB,KAAKT,MAAMyB,YAG9C,OACE,iBAAKA,UAAWA,EAAWE,MAAOlB,KAAKT,MAAM2B,MAA7C,WACE,gBAAKF,UAAS,UAAKhB,KAAK0B,gBAAV,UAAd,SAAkD1B,KAAKT,MAAMoC,QAE1D3B,KAAKT,MAAMqC,UACV,gBAAKZ,UAAS,UAAKhB,KAAK0B,gBAAV,aAAd,SAAqD1B,KAAKT,MAAMqC,WAD3C,IAGzB,gBAAKZ,UAAS,UAAKhB,KAAK0B,gBAAV,mBAAd,SAEI1B,KAAKT,MAAMiB,WAIZR,KAAKT,MAAMsC,MACV,SAACvC,EAAA,EAAD,CAAUc,WAAW,EAArB,SAA4BJ,KAAKT,MAAMsC,OADvB,UA7B5B,GAA8BC,EAAAA,I,iMCJjBC,EAAb,0CAEE,WAAYxC,GAAuC,kCAC3CA,GAHV,gDAME,cANF,oBAUE,WAAU,IAAD,OAEP,OAAQS,KAAKT,MAAMyC,MACjB,IAAK,IACH,OAAO,SAAC,EAAAC,YAAD,QAAYd,IAAK,SAAAN,GAAC,OAAI,EAAKtB,MAAM2C,OAAS,EAAK3C,MAAM2C,MAAMrB,KAASb,KAAKT,QAClF,IAAK,IACH,OAAO,SAAC,EAAA4C,iBAAD,QAAiBhB,IAAK,SAAAN,GAAC,OAAI,EAAKtB,MAAM2C,OAAS,EAAK3C,MAAM2C,MAAMrB,KAASb,KAAKT,QACvF,IAAK,IACH,OAAO,SAAC,EAAA6C,YAAD,UAAiBpC,KAAKT,QAGjC,OAAO,SAAC,EAAA0C,YAAD,QAAYd,IAAK,SAAAN,GAAC,OAAI,EAAKtB,MAAM2C,OAAS,EAAK3C,MAAM2C,MAAMrB,KAASb,KAAKT,YArBpF,GAAkCuC,EAAAA,G,iCCSbG,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAMnB,WAAY1C,GAAY,IAAD,mBACrB,cAAMA,IALA8C,sBAIe,IAHfC,yBAGe,IAFfC,0BAEe,EAErB,IAAMC,EAAM,IAAIC,KACVC,EAAQ,IAAID,KAHG,OAIrBC,EAAMC,QAAQD,EAAME,UAAY,QAChC,EAAKlD,MAAQ,CACXmD,mBAAoB,IAAIJ,KACxBK,oBAAqB,CAACJ,EAAOF,GAC7BO,UAAW,IAAIN,KAAK,KAAM,EAAG,GAAI,EAAG,IACpCO,QAAS,IAAIP,KAAK,KAAM,EAAG,GAAI,EAAG,KAEpC,EAAKQ,WAAa,EAAKA,WAAWC,MAAhB,WAClB,EAAKb,iBAAmB,EACxBc,SAASC,KAAKpC,UAAYqC,EAAAA,EAAiB,EAAKhB,kBAb3B,EA0StB,OA5RA,kCAED,WACErC,KAAKqC,kBAAoBrC,KAAKqC,iBAAmB,GAAKgB,EAAAA,EAAAA,OACtDF,SAASC,KAAKpC,UAAYqC,EAAAA,EAAiBrD,KAAKqC,oBACjD,+BAED,SAAkBU,GAChBjC,QAAQwC,MAAM,iCAAkCP,GAChD/C,KAAKG,SAAS,CAAC4C,UAAAA,MAChB,6BAED,SAAgBC,GACdlC,QAAQwC,MAAM,+BAAgCN,GAC9ChD,KAAKG,SAAS,CAAC6C,QAAAA,MAChB,oBAGD,WAAU,IAAD,OACDR,EAAM,IAAIC,KACVC,EAAQ,IAAID,KAElB,OADAC,EAAMC,QAAQD,EAAME,UAAY,SAE9B,UAAC,IAAD,CAAUjB,MAAM,kDAAeC,SAAS,uCAASZ,UAAU,sBACjDuC,WAAU,gGAGVC,cAAa,ipFAJvB,WAwCE,SAAC,IAAD,CAAU7B,MAAM,kCAASE,KAAI,yrDAA7B,UAgCE,iBAAKb,UAAU,wBAAf,WACE,iBAAKA,UAAU,wBAAf,WACE,gBAAKA,UAAU,kBAAf,2BACA,SAACe,EAAD,CAAc0B,YAAY,qBAAMC,SAAU,SAAA7C,GAAC,OAAIC,QAAQ6C,IAAR,OAAY9C,QAAZ,IAAYA,OAAZ,EAAYA,EAAG+B,kBAEhE,iBAAK5B,UAAU,wBAAf,WACE,gBAAKA,UAAU,kBAAf,6CACA,SAACe,EAAD,CAAc0B,YAAY,qBAAMC,SAAU,SAAA7C,GAAC,OAAIC,QAAQ6C,IAAI9C,IAAIqB,MAAO,SAAArB,GAAC,OAAI,EAAKyB,oBAAsBzB,GACxF+C,MAAO,QACPC,MAAO7D,KAAKN,MAAMmD,mBAClBiB,UAAW,CACT,CACEC,KAAM,eACN1C,QAAS,WACP,EAAKiB,oBAAoB0B,sBACzB,EAAK7D,SAAS,CAAC0C,mBAAoB,IAAIJ,SAExC,CACDsB,KAAM,eACN1C,QAAS,WACP,IAAM4C,EAAO,IAAIxB,KACjBwB,EAAKtB,QAAQsB,EAAKrB,UAAY,OAC9B,EAAKN,oBAAoB0B,sBACzB,EAAK7D,SAAS,CAAC0C,mBAAoBoB,MAEpC,CACDF,KAAM,qBACN1C,QAAS,WACP,IAAM4C,EAAO,IAAIxB,KACjBwB,EAAKtB,QAAQsB,EAAKrB,UAAY,QAC9B,EAAKN,oBAAoB0B,sBACzB,EAAK7D,SAAS,CAAC0C,mBAAoBoB,kBAQ7D,SAAC,IAAD,CAAUtC,MAAM,8CAAWE,KAAI,2hEAA/B,UAsCE,iBAAKb,UAAU,wBAAf,WACE,iBAAKA,UAAU,wBAAf,WACE,gBAAKA,UAAU,kBAAf,2BACA,SAACe,EAAD,CAAcC,KAAK,IAAI6B,MAAO,CAACnB,EAAOF,GAAMkB,SAAU,SAAA7C,GAAC,OAAIC,QAAQ6C,IAAI9C,UAEzE,iBAAKG,UAAU,wBAAf,WACE,gBAAKA,UAAU,kBAAf,6CACA,SAACe,EAAD,CAAcC,KAAK,IAAI0B,SAAU,SAAA7C,GAAC,OAAIC,QAAQ6C,IAAI9C,IAAIqB,MAAO,SAAArB,GAAC,OAAI,EAAK0B,qBAAuB1B,GAChF+C,MAAO,QAASC,MAAO7D,KAAKN,MAAMoD,oBAClCgB,UAAW,CAAC,CACVC,KAAM,2BACN1C,QAAS,WACP,IAAMmB,EAAM,IAAIC,KACVC,EAAQ,IAAID,KAClBC,EAAMC,QAAQD,EAAME,UAAY,QAEhC,EAAKzC,SAAS,CAAC2C,oBAAqB,CAACJ,EAAOF,KAC5C,EAAKD,qBAAqByB,wBAE3B,CACDD,KAAM,iCACN1C,QAAS,WACP,IAAMmB,EAAM,IAAIC,KACVC,EAAQ,IAAID,KAClBC,EAAMC,QAAQD,EAAME,UAAY,QAEhC,EAAKzC,SAAS,CAAC2C,oBAAqB,CAACJ,EAAOF,KAC5C,EAAKD,qBAAqByB,wBAE3B,CACDD,KAAM,iCACN1C,QAAS,WACP,IAAMmB,EAAM,IAAIC,KACVC,EAAQ,IAAID,KAClBC,EAAMC,QAAQD,EAAME,UAAY,QAChC,EAAKzC,SAAS,CAAC2C,oBAAqB,CAACJ,EAAOF,KAC5C,EAAKD,qBAAqByB,oCAOlD,SAAC,IAAD,CAAUrC,MAAM,wCAAUE,KAAI,2hEAA9B,UAsCE,SAACE,EAAD,CAAcC,KAAK,IAAIU,MAAM,QAAQwB,KAAK,QAAQ1B,IAAI,QAAQ2B,QAAQ,QACxDN,MAAO,IAAIpB,KAAK,KAAM,EAAG,GAAI,EAAG,IAAKiB,SAAU,SAAA7C,GAAC,OAAIC,QAAQ6C,IAAI9C,SAEhF,SAAC,IAAD,CAAUc,MAAM,8CAAWE,KAAI,g1BAA/B,UAiBE,iBAAKX,MAAO,CAACkD,QAAS,QAAtB,WACE,SAACrC,EAAD,CAAcC,KAAK,IAAIU,MAAM,QAAQwB,KAAK,QAAQ1B,IAAI,QAAQ2B,QAAQ,QACxDN,MAAO7D,KAAKN,MAAMqD,UAAWW,SAAU1D,KAAKqE,kBAAkBnB,KAAKlD,SACjF,gBAAKkB,MAAO,CAACoD,MAAO,WACpB,SAACvC,EAAD,CAAcC,KAAK,IAAIU,MAAM,QAAQwB,KAAK,QAAQ1B,IAAI,QAAQ2B,QAAQ,QACxDN,MAAO7D,KAAKN,MAAMsD,QAASU,SAAU1D,KAAKuE,gBAAgBrB,KAAKlD,MAC/DwE,QAASxE,KAAKN,MAAMqD,wBAK3C,EAhTkBd,CAAmBX,EAAAA,Y,gLCJ3BmD,EAAb,0CAIE,WAAYlF,GAA2E,IAAD,yBACpF,cAAMA,IAHSmC,qBAEqE,EAEpF,EAAKA,gBAAkB,eAF6D,EAJxF,qCASE,WAEE,IAAMV,EAAYC,GAAAA,CAAW,GAAD,OACvBjB,KAAK0B,gBADkB,8BAGpB1B,KAAKT,MAAMyB,aAAgBhB,KAAKT,MAAMyB,YAI9C,OACE,iBAAKA,UAAWA,EAAhB,WACE,iBAAKA,UAAS,UAAKhB,KAAK0B,gBAAV,WAAd,WACE,gBAAKV,UAAS,UAAKhB,KAAK0B,gBAAV,UAAd,SAAkD1B,KAAKT,MAAMoC,QAE1D3B,KAAKT,MAAMqC,UACV,gBAAMZ,UAAS,UAAKhB,KAAK0B,gBAAV,aAAf,SAAsD1B,KAAKT,MAAMqC,WAD5C,GAItB5B,KAAKT,MAAMgE,YACV,iBAAKvC,UAAS,UAAKhB,KAAK0B,gBAAV,WAAd,WACE,gBAAKV,UAAS,UAAKhB,KAAK0B,gBAAV,iBAAd,+DACA,SAACpC,EAAA,EAAD,UACGU,KAAKT,MAAMgE,gBAJO,OAW7B,gBAAKvC,UAAS,UAAKhB,KAAK0B,gBAAV,SAAd,SAEI1B,KAAKT,MAAMiB,YAGf,gBAAKQ,UAAS,UAAKhB,KAAK0B,gBAAV,WAAd,SAEK1B,KAAKT,MAAMiE,eACV,iBAAKxC,UAAS,UAAKhB,KAAK0B,gBAAV,cAAd,WACE,gBAAKV,UAAS,UAAKhB,KAAK0B,gBAAV,oBAAd,mDACA,SAACpC,EAAA,EAAD,UACGU,KAAKT,MAAMiE,mBAJU,YA7CxC,GAA8B1B,EAAAA,I,mHCXjBA,EAAb,0CACE,WAAYvC,GAAmD,kCACvDA,GAFV,gDAKE,WACES,KAAKT,MAAM2C,OAASlC,KAAKT,MAAM2C,MAAMlC,UANzC,G,SAA6DsB,Y,kBCH7D,SAASoD,EAAoBC,GAC5B,IAAI9D,EAAI,IAAI+D,MAAM,uBAAyBD,EAAM,KAEjD,MADA9D,EAAEgB,KAAO,mBACHhB,EAEP6D,EAAoBG,KAAO,WAAa,MAAO,IAC/CH,EAAoBI,QAAUJ,EAC9BA,EAAoBK,GAAK,MACzBC,EAAOC,QAAUP","sources":["components/CodeView/index.tsx","components/demoView/index.tsx","components/datePicker/index.tsx","pages/datePicker/index.tsx","pages/demoPage/index.tsx","type/BaseComponent.ts","../node_modules/prettier|sync"],"sourcesContent":["import \"code-prettify\";\r\nimport \"code-prettify/src/prettify.css\";\r\n\r\nimport parserTypeScript from 'prettier/parser-typescript';\r\nimport prettier from 'prettier/standalone';\r\nimport parserHtml from \"prettier/parser-html\";\r\nimport {Component, createRef, CSSProperties, RefObject} from \"react\";\r\nimport \"./index.scss\";\r\nimport classNames from \"classnames\";\r\n\r\ninterface CodeViewProps {\r\n  children: string\r\n  className?: string\r\n  style?: CSSProperties\r\n  language?: \"ts\" | \"html\"\r\n  defaultShow?: boolean\r\n  canHidden?: boolean\r\n}\r\n\r\n\r\ninterface CodeViewState {\r\n  isShowCode: boolean\r\n}\r\n\r\nexport class CodeView extends Component<CodeViewProps, CodeViewState> {\r\n\r\n  private readonly codeViewAreaRef: RefObject<HTMLDivElement>\r\n  private areaMaxHeight: string\r\n\r\n  static defaultProps: CodeViewProps = {\r\n    children: \"\",\r\n    language: \"ts\",\r\n    canHidden: false\r\n  }\r\n\r\n  constructor(props: CodeViewProps | Readonly<CodeViewProps>) {\r\n    super(props);\r\n    this.state = {\r\n      isShowCode: true\r\n    }\r\n    this.codeViewAreaRef = createRef<HTMLDivElement>();\r\n    this.areaMaxHeight = \"fit-content\"\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    (window as any).PR.prettyPrint();\r\n  }\r\n\r\n  componentDidMount() {\r\n    (window as any).PR.prettyPrint();\r\n    this.areaMaxHeight = this.codeViewAreaRef.current?.clientHeight + \"px\" || \"fit-content\"\r\n    this.setState({\r\n      isShowCode: !this.props.canHidden || !!this.props.defaultShow\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let result = \"\";\r\n    try {\r\n      result = prettier.format(this.props.children, {\r\n        parser: \"typescript\",\r\n        plugins: [parserTypeScript, parserHtml]\r\n      });\r\n    } catch (e) {\r\n      console.error(\"代码格式有误，无法解析\")\r\n      result = this.props.children\r\n    }\r\n\r\n    let className = classNames(\r\n      \"lg-code-view-root\",\r\n      {\r\n        [`${this.props.className}`]: !!this.props.className,\r\n        \"lg-code-view-can-hidden\": this.props.canHidden\r\n      }\r\n    )\r\n\r\n    return (\r\n      <div className={className} style={this.props.style}>\r\n        <div ref={this.codeViewAreaRef} className=\"lg-code-view-area\"\r\n             style={{height: this.state.isShowCode ? this.areaMaxHeight : \"0\"}}>\r\n          <pre className={`prettyprint lang-js`}>\r\n              <div className=\"code_block\">\r\n                <code className=\"code_text\">{result}</code>\r\n              </div>\r\n          </pre>\r\n        </div>\r\n        {\r\n          !this.props.canHidden ? \"\" :\r\n            <div onClick={() => this.setState({isShowCode: !this.state.isShowCode})}\r\n                 className=\"lg-code-view-show-button\">\r\n              <div className={`lg-code-view-show-text ${this.state.isShowCode ? \"on-show\" : \"\"}`}>\r\n                {!this.state.isShowCode ? \"显示\" : \"隐藏\"}代码\r\n              </div>\r\n            </div>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import \"./index.scss\"\r\nimport {BaseComponent} from \"../../type/BaseComponent\";\r\nimport classNames from \"classnames\";\r\nimport { BaseProps } from \"../../type/BaseProps\";\r\nimport {CodeView} from \"@/components/CodeView\";\r\n\r\n\r\nexport interface DemoViewProps {\r\n  title: string\r\n  subtitle?: string\r\n  code?: string\r\n}\r\n\r\nexport class DemoView extends BaseComponent<DemoViewProps> {\r\n\r\n  private readonly classNamePrefix: string\r\n\r\n  constructor(props: (DemoViewProps & BaseProps) | Readonly<DemoViewProps & BaseProps>) {\r\n    super(props);\r\n    this.classNamePrefix = \"lg-demo-view\"\r\n  }\r\n\r\n  render() {\r\n    let className = classNames(\r\n      `${this.classNamePrefix}-root`,\r\n      {\r\n        [`${this.props.className}`]: !!this.props.className\r\n      }\r\n    )\r\n    return (\r\n      <div className={className} style={this.props.style}>\r\n        <div className={`${this.classNamePrefix}-title`}>{this.props.title}</div>\r\n        {\r\n          !this.props.subtitle ? \"\" :\r\n            <div className={`${this.classNamePrefix}-subtitle`}>{this.props.subtitle}</div>\r\n        }\r\n        <div className={`${this.classNamePrefix}-component-area`}>\r\n          {\r\n            this.props.children\r\n          }\r\n        </div>\r\n        {\r\n          !this.props.code? \"\":\r\n            <CodeView canHidden={true}>{this.props.code}</CodeView>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}","import \"./index.scss\"\r\nimport {BaseComponent} from \"../../type/BaseComponent\";\r\nimport {BaseProps} from \"../../type/BaseProps\";\r\nimport {DatePicker, DateRangePicker, TimeSelect} from \"element-react\"\r\n\r\nexport interface LgDatePickerProps extends DatePickerProps, TimeSelectProps{\r\n  type?: \"A\" | \"B\" | \"C\" | \"D\"\r\n}\r\n\r\nexport class LgDatePicker extends BaseComponent<LgDatePickerProps> {\r\n\r\n  constructor(props: LgDatePickerProps & BaseProps) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    //避免默认行为\r\n  }\r\n\r\n  render() {\r\n\r\n    switch (this.props.type){\r\n      case \"A\":\r\n        return <DatePicker ref={e => this.props.onRef && this.props.onRef(e)} {...(this.props as any)}/>\r\n      case \"B\":\r\n        return <DateRangePicker ref={e => this.props.onRef && this.props.onRef(e)} {...(this.props as any)}/>\r\n      case \"C\":\r\n        return <TimeSelect {...(this.props as any)} />\r\n    }\r\n\r\n    return <DatePicker ref={e => this.props.onRef && this.props.onRef(e)} {...(this.props as any)}/>\r\n  }\r\n}\r\n\r\ntype dateType = Date | string | null\r\n\r\ninterface DatePickerBaseProps {\r\n  align?: 'left' | 'center' | 'right'\r\n  format?: string\r\n  isShowTrigger?: boolean\r\n  isReadOnly?: boolean\r\n  isDisabled?: boolean\r\n  placeholder?: string\r\n  onFocus?(self?: any): void\r\n  onBlur?(self?: any): void\r\n  onChange?(value?: Date): void\r\n  value?: dateType | dateType[]\r\n}\r\n\r\ninterface DatePanelProps extends DatePickerBaseProps {\r\n  value?: dateType | dateType[]\r\n  onPick?: (date: any) => void\r\n  isShowTime?: boolean\r\n  showWeekNumber?: boolean\r\n  format?: string\r\n  shortcuts?: any[]\r\n  selectionMode?: SelectionMode\r\n  disabledDate?(date?: Date, type?: SelectionMode): boolean\r\n  firstDayOfWeek?: number\r\n  getPopperRefElement?: any\r\n  popperMixinOption?: any\r\n}\r\n\r\ninterface DatePickerProps extends DatePanelProps {\r\n  value?: dateType | dateType[]\r\n}\r\n\r\ninterface TimeSelectProps extends DatePickerBaseProps {\r\n  start?: string\r\n  end?: string\r\n  step?: string\r\n  minTime?: dateType\r\n  maxTime?: dateType\r\n  // value?: dateType\r\n}","import {Component} from \"react\";\r\nimport {LgDatePicker} from \"@/components/datePicker\";\r\nimport \"./index.scss\"\r\nimport {allSkinClassName} from \"@/components/index\";\r\nimport {BaseComponent} from \"../../type/BaseComponent\";\r\nimport {DemoPage} from \"../demoPage\";\r\nimport {DemoView} from \"@/components/demoView\";\r\n\r\n\r\ntype DateType = Date | string | null\r\n\r\nexport interface DatePickerState {\r\n  demonstrationValue: DateType\r\n  demonstrationValue2: DateType[]\r\n  startTime: DateType\r\n  endTime: DateType\r\n}\r\n\r\nexport default class DatePicker extends Component<{}, DatePickerState> {\r\n\r\n  private currentSkinIndex: number;\r\n  private demonstrationPicker: any;\r\n  private demonstrationPicker2: any;\r\n\r\n  constructor(props: {}) {\r\n    super(props);\r\n    const end = new Date();\r\n    const start = new Date();\r\n    start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\r\n    this.state = {\r\n      demonstrationValue: new Date(),\r\n      demonstrationValue2: [start, end],\r\n      startTime: new Date(2016, 9, 10, 8, 30),\r\n      endTime: new Date(2016, 9, 10, 9, 30)\r\n    }\r\n    this.changeSkin = this.changeSkin.bind(this)\r\n    this.currentSkinIndex = 0\r\n    document.body.className = allSkinClassName[this.currentSkinIndex]\r\n  }\r\n\r\n  changeSkin() {\r\n    this.currentSkinIndex = (this.currentSkinIndex + 1) % allSkinClassName.length\r\n    document.body.className = allSkinClassName[this.currentSkinIndex]\r\n  }\r\n\r\n  handleStartUpdate(startTime: any) {\r\n    console.debug('time-select startDate update: ', startTime)\r\n    this.setState({startTime})\r\n  }\r\n\r\n  handleEndUpdate(endTime: any) {\r\n    console.debug('time-select endDate update: ', endTime)\r\n    this.setState({endTime})\r\n  }\r\n\r\n\r\n  render() {\r\n    const end = new Date();\r\n    const start = new Date();\r\n    start.setTime(start.getTime() - 3600 * 1000 * 24 * 30)\r\n    return (\r\n      <DemoPage title=\"G018时间/日期选择器\" subtitle=\"常用锚点定位\" className=\"lg-date-picker-demo\"\r\n                importCode={`\r\n                    import {LgDatePicker} from \"@/components/datePicker\";\r\n                `}\r\n                interfaceCode={`\r\n            /* dateType可以是Date或者字符串 */\r\n            type dateType = Date | string | null;\r\n            interface LgDatePickerProps{\r\n               type?: \"A\" | \"B\" | \"C\" | \"D\" // 款式选择，\"A\"、\"B\"、 \"C\"、\"D\",可空，默认为A\r\n               value?: dateType | dateType[] //当前值， dateType[]仅限B款时，开始日期是第一个，结束是第二个\r\n               align?: 'left' | 'center' | 'right', //对齐方式， 可空，默认left\r\n               format?: string //时间格式化，年 yyyy，月 MM，日 dd，小时 HH，分 mm，秒 ss，默认值yyyy-MM-dd\r\n               isShowTrigger?: boolean // 是否显示图标，可空，默认true\r\n               isReadOnly?: boolean // 是否是只读，可空，默认false\r\n               isDisabled?: boolean // 是否是禁用，可空，默认false\r\n               placeholder?: string // 占位内容，可空\r\n               onFocus?(self?: any): void // focus 事件触发\r\n               onBlur?(self?: any): void // blur 时间触发\r\n               onChange?(value?: Date): void // 值改变时触发\r\n               \r\n               /*A、B款专用*/\r\n               showWeekNumber?: boolean //是否展示周数 ，可空，默认false\r\n               shortcuts?: Shortcut[] // 快捷选项\r\n               selectionMode?: 'year' | 'month' | 'week' | 'day' // 日期类型， 可空，默认\"day\" \r\n               disabledDate?(date?: Date, type?: SelectionMode): boolean //是否进入日期可空\r\n               firstDayOfWeek?: number // 周起始日 0到6 可空，默认0\r\n               \r\n               /* C款专用 */\r\n               start?: string //开始时间，默认值09:00\r\n               end?: string //结束时间，默认18:00\r\n               step?: string //间隔时间\r\n               minTime?: dateType //最小时间\r\n               maxTime?: dateType // 最大时间\r\n            }\r\n            \r\n            interface Shortcut{\r\n              text: string\r\n              onClick(): void\r\n            }\r\n          `}>\r\n        <DemoView title=\"A款日期选择\" code={`\r\n            <>\r\n              <LgDatePicker onChange={e => console.log(e?.getTime())}/>\r\n              <LgDatePicker onChange={e => console.log(e)} onRef={e => this.demonstrationPicker = e} align={\"right\"}\r\n                            value={this.state.demonstrationValue}\r\n                            shortcuts={[\r\n                              {\r\n                                text: '今天',\r\n                                onClick: () => {\r\n                                  this.demonstrationPicker.togglePickerVisible()\r\n                                  this.setState({demonstrationValue: new Date()})\r\n                                }\r\n                              }, {\r\n                                text: '昨天',\r\n                                onClick: () => {\r\n                                  const date = new Date();\r\n                                  date.setTime(date.getTime() - 3600 * 1000 * 24);\r\n                                  this.demonstrationPicker.togglePickerVisible()\r\n                                  this.setState({demonstrationValue: date})\r\n                                }\r\n                              }, {\r\n                                text: '一周前',\r\n                                onClick: () => {\r\n                                  const date = new Date();\r\n                                  date.setTime(date.getTime() - 3600 * 1000 * 24 * 7);\r\n                                  this.demonstrationPicker.togglePickerVisible()\r\n                                  this.setState({demonstrationValue: date})\r\n                                }\r\n                              }\r\n                            ]}/>\r\n            </>\r\n        `}>\r\n          <div className=\"lg-date-picker-demo-h\">\r\n            <div className=\"lg-date-picker-demo-v\">\r\n              <div className=\"component-title\">默认</div>\r\n              <LgDatePicker placeholder=\"请选择\" onChange={e => console.log(e?.getTime())}/>\r\n            </div>\r\n            <div className=\"lg-date-picker-demo-v\">\r\n              <div className=\"component-title\">带快捷选项</div>\r\n              <LgDatePicker placeholder=\"请选择\" onChange={e => console.log(e)} onRef={e => this.demonstrationPicker = e}\r\n                            align={\"right\"}\r\n                            value={this.state.demonstrationValue}\r\n                            shortcuts={[\r\n                              {\r\n                                text: '今天',\r\n                                onClick: () => {\r\n                                  this.demonstrationPicker.togglePickerVisible()\r\n                                  this.setState({demonstrationValue: new Date()})\r\n                                }\r\n                              }, {\r\n                                text: '昨天',\r\n                                onClick: () => {\r\n                                  const date = new Date();\r\n                                  date.setTime(date.getTime() - 3600 * 1000 * 24);\r\n                                  this.demonstrationPicker.togglePickerVisible()\r\n                                  this.setState({demonstrationValue: date})\r\n                                }\r\n                              }, {\r\n                                text: '一周前',\r\n                                onClick: () => {\r\n                                  const date = new Date();\r\n                                  date.setTime(date.getTime() - 3600 * 1000 * 24 * 7);\r\n                                  this.demonstrationPicker.togglePickerVisible()\r\n                                  this.setState({demonstrationValue: date})\r\n                                }\r\n                              }\r\n                            ]}/>\r\n            </div>\r\n          </div>\r\n        </DemoView>\r\n\r\n        <DemoView title=\"B款选择日期范围\" code={`\r\n              <>\r\n                <LgDatePicker type=\"B\" value={[start, end]} onChange={e => console.log(e)}/>\r\n                <LgDatePicker type=\"B\" onChange={e => console.log(e)} onRef={e => this.demonstrationPicker2 = e}\r\n                            align={\"right\"} value={this.state.demonstrationValue2}\r\n                            shortcuts={[{\r\n                              text: '最近一周',\r\n                              onClick: () => {\r\n                                const end = new Date();\r\n                                const start = new Date();\r\n                                start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\r\n  \r\n                                this.setState({demonstrationValue2: [start, end]})\r\n                                this.demonstrationPicker2.togglePickerVisible()\r\n                              }\r\n                            }, {\r\n                              text: '最近一个月',\r\n                              onClick: () => {\r\n                                const end = new Date();\r\n                                const start = new Date();\r\n                                start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\r\n  \r\n                                this.setState({demonstrationValue2: [start, end]})\r\n                                this.demonstrationPicker2.togglePickerVisible()\r\n                              }\r\n                            }, {\r\n                              text: '最近三个月',\r\n                              onClick: () => {\r\n                                const end = new Date();\r\n                                const start = new Date();\r\n                                start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\r\n                                this.setState({demonstrationValue2: [start, end]})\r\n                                this.demonstrationPicker2.togglePickerVisible()\r\n                              }\r\n                            }]}\r\n              />\r\n            </>\r\n        `}>\r\n          <div className=\"lg-date-picker-demo-h\">\r\n            <div className=\"lg-date-picker-demo-v\">\r\n              <div className=\"component-title\">默认</div>\r\n              <LgDatePicker type=\"B\" value={[start, end]} onChange={e => console.log(e)}/>\r\n            </div>\r\n            <div className=\"lg-date-picker-demo-v\">\r\n              <div className=\"component-title\">带快捷选项</div>\r\n              <LgDatePicker type=\"B\" onChange={e => console.log(e)} onRef={e => this.demonstrationPicker2 = e}\r\n                            align={\"right\"} value={this.state.demonstrationValue2}\r\n                            shortcuts={[{\r\n                              text: '最近一周',\r\n                              onClick: () => {\r\n                                const end = new Date();\r\n                                const start = new Date();\r\n                                start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\r\n\r\n                                this.setState({demonstrationValue2: [start, end]})\r\n                                this.demonstrationPicker2.togglePickerVisible()\r\n                              }\r\n                            }, {\r\n                              text: '最近一个月',\r\n                              onClick: () => {\r\n                                const end = new Date();\r\n                                const start = new Date();\r\n                                start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\r\n\r\n                                this.setState({demonstrationValue2: [start, end]})\r\n                                this.demonstrationPicker2.togglePickerVisible()\r\n                              }\r\n                            }, {\r\n                              text: '最近三个月',\r\n                              onClick: () => {\r\n                                const end = new Date();\r\n                                const start = new Date();\r\n                                start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\r\n                                this.setState({demonstrationValue2: [start, end]})\r\n                                this.demonstrationPicker2.togglePickerVisible()\r\n                              }\r\n                            }]}\r\n              />\r\n            </div>\r\n          </div>\r\n        </DemoView>\r\n        <DemoView title=\"C款固定时间点\" code={`\r\n              <>\r\n                <LgDatePicker type=\"B\" value={[start, end]} onChange={e => console.log(e)}/>\r\n                <LgDatePicker type=\"B\" onChange={e => console.log(e)} onRef={e => this.demonstrationPicker2 = e}\r\n                            align={\"right\"} value={this.state.demonstrationValue2}\r\n                            shortcuts={[{\r\n                              text: '最近一周',\r\n                              onClick: () => {\r\n                                const end = new Date();\r\n                                const start = new Date();\r\n                                start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\r\n  \r\n                                this.setState({demonstrationValue2: [start, end]})\r\n                                this.demonstrationPicker2.togglePickerVisible()\r\n                              }\r\n                            }, {\r\n                              text: '最近一个月',\r\n                              onClick: () => {\r\n                                const end = new Date();\r\n                                const start = new Date();\r\n                                start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\r\n  \r\n                                this.setState({demonstrationValue2: [start, end]})\r\n                                this.demonstrationPicker2.togglePickerVisible()\r\n                              }\r\n                            }, {\r\n                              text: '最近三个月',\r\n                              onClick: () => {\r\n                                const end = new Date();\r\n                                const start = new Date();\r\n                                start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\r\n                                this.setState({demonstrationValue2: [start, end]})\r\n                                this.demonstrationPicker2.togglePickerVisible()\r\n                              }\r\n                            }]}\r\n              />\r\n            </>\r\n        `}>\r\n          <LgDatePicker type=\"C\" start=\"08:30\" step=\"00:15\" end=\"18:30\" maxTime=\"12:30\"\r\n                        value={new Date(2016, 9, 10, 8, 30)} onChange={e => console.log(e)}/>\r\n        </DemoView>\r\n        <DemoView title=\"D款固定时间范围\" code={`\r\n              function handleStartUpdate(startTime: any) {\r\n              console.debug('time-select startDate update: ', startTime)\r\n              this.setState({startTime})\r\n            }\r\n          \r\n            function handleEndUpdate(endTime: any){\r\n              console.debug('time-select endDate update: ', endTime)\r\n              this.setState({endTime})\r\n            }\r\n            <>\r\n            <LgDatePicker type=\"C\" start=\"08:30\" step=\"00:15\" end=\"18:30\" maxTime=\"12:30\"\r\n                          value={this.state.startTime} onChange={this.handleStartUpdate.bind(this)}/>\r\n            <LgDatePicker type=\"C\" start=\"08:30\" step=\"00:15\" end=\"18:30\" maxTime=\"12:30\"\r\n                          value={this.state.endTime} onChange={this.handleEndUpdate.bind(this)} minTime={this.state.startTime}/>\r\n            </>\r\n          `}>\r\n          <div style={{display: \"flex\"}}>\r\n            <LgDatePicker type=\"C\" start=\"08:30\" step=\"00:15\" end=\"18:30\" maxTime=\"12:30\"\r\n                          value={this.state.startTime} onChange={this.handleStartUpdate.bind(this)}/>\r\n            <div style={{width: \"10px\"}}/>\r\n            <LgDatePicker type=\"C\" start=\"08:30\" step=\"00:15\" end=\"18:30\" maxTime=\"12:30\"\r\n                          value={this.state.endTime} onChange={this.handleEndUpdate.bind(this)}\r\n                          minTime={this.state.startTime}/>\r\n          </div>\r\n        </DemoView>\r\n      </DemoPage>\r\n    )\r\n  }\r\n}","import {BaseComponent} from \"../../type/BaseComponent\";\r\nimport {BaseProps} from \"../../type/BaseProps\";\r\nimport classNames from \"classnames\";\r\nimport \"./index.scss\"\r\nimport {CodeView} from \"@/components/CodeView\";\r\n\r\nexport interface DemoPageProps {\r\n  title: string\r\n  subtitle?: string\r\n  importCode?: string\r\n  interfaceCode?: string\r\n}\r\n\r\n\r\nexport class DemoPage extends BaseComponent<DemoPageProps> {\r\n\r\n  private readonly classNamePrefix: string\r\n\r\n  constructor(props: (DemoPageProps & BaseProps) | Readonly<DemoPageProps & BaseProps>) {\r\n    super(props);\r\n    this.classNamePrefix = \"lg-demo-page\"\r\n  }\r\n\r\n  render() {\r\n\r\n    const className = classNames(\r\n      `${this.classNamePrefix}-root`,\r\n      {\r\n        [`${this.props.className}`]: !!this.props.className\r\n      }\r\n    )\r\n\r\n    return (\r\n      <div className={className}>\r\n        <div className={`${this.classNamePrefix}-header`}>\r\n          <div className={`${this.classNamePrefix}-title`}>{this.props.title}</div>\r\n          {\r\n            !this.props.subtitle ? \"\" :\r\n              < div className={`${this.classNamePrefix}-subtitle`}>{this.props.subtitle}</div>\r\n          }\r\n          {\r\n            !this.props.importCode ? \"\" : (\r\n              <div className={`${this.classNamePrefix}-import`}>\r\n                <div className={`${this.classNamePrefix}-import-title`}>在页面中引入组件</div>\r\n                <CodeView>\r\n                  {this.props.importCode}\r\n                </CodeView>\r\n              </div>\r\n            )\r\n\r\n          }\r\n        </div>\r\n        <div className={`${this.classNamePrefix}-body`}>\r\n          {\r\n            this.props.children\r\n          }\r\n        </div>\r\n        <div className={`${this.classNamePrefix}-footer`}>\r\n          {\r\n            !this.props.interfaceCode ? \"\" : (\r\n              <div className={`${this.classNamePrefix}-interface`}>\r\n                <div className={`${this.classNamePrefix}-interface-title`}>标签属性解析</div>\r\n                <CodeView>\r\n                  {this.props.interfaceCode}\r\n                </CodeView>\r\n              </div>\r\n            )\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import {Component} from \"react\";\r\nimport {BaseProps} from \"./BaseProps\";\r\n\r\nexport class BaseComponent<T = {}, S = {}, SS = any> extends Component<T & BaseProps, S, SS>{\r\n  constructor(props: (T & BaseProps) | Readonly<T & BaseProps>) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.onRef && this.props.onRef(this)\r\n  }\r\n}","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 26291;\nmodule.exports = webpackEmptyContext;"],"names":["CodeView","props","codeViewAreaRef","areaMaxHeight","state","isShowCode","createRef","window","PR","prettyPrint","this","current","clientHeight","setState","canHidden","defaultShow","result","prettier","children","parser","plugins","parserTypeScript","parserHtml","e","console","error","className","classNames","style","ref","height","onClick","Component","defaultProps","language","DemoView","classNamePrefix","title","subtitle","code","BaseComponent","LgDatePicker","type","DatePicker","onRef","DateRangePicker","TimeSelect","currentSkinIndex","demonstrationPicker","demonstrationPicker2","end","Date","start","setTime","getTime","demonstrationValue","demonstrationValue2","startTime","endTime","changeSkin","bind","document","body","allSkinClassName","debug","importCode","interfaceCode","placeholder","onChange","log","align","value","shortcuts","text","togglePickerVisible","date","step","maxTime","display","handleStartUpdate","width","handleEndUpdate","minTime","DemoPage","webpackEmptyContext","req","Error","keys","resolve","id","module","exports"],"sourceRoot":""}