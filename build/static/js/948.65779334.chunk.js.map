{"version":3,"file":"static/js/948.65779334.chunk.js","mappings":"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","sources":["components/CodeView/index.tsx","components/demoView/index.tsx","components/loading/index.tsx","pages/demoPage/index.tsx","pages/loading/index.tsx","type/BaseComponent.ts","../node_modules/prettier|sync"],"sourcesContent":["import \"code-prettify\";\r\nimport \"code-prettify/src/prettify.css\";\r\n\r\nimport parserTypeScript from 'prettier/parser-typescript';\r\nimport prettier from 'prettier/standalone';\r\nimport parserHtml from \"prettier/parser-html\";\r\nimport {Component, createRef, CSSProperties, RefObject} from \"react\";\r\nimport \"./index.scss\";\r\nimport classNames from \"classnames\";\r\n\r\ninterface CodeViewProps {\r\n  children: string\r\n  className?: string\r\n  style?: CSSProperties\r\n  language?: \"ts\" | \"html\"\r\n  defaultShow?: boolean\r\n  canHidden?: boolean\r\n}\r\n\r\n\r\ninterface CodeViewState {\r\n  isShowCode: boolean\r\n}\r\n\r\nexport class CodeView extends Component<CodeViewProps, CodeViewState> {\r\n\r\n  private readonly codeViewAreaRef: RefObject<HTMLDivElement>\r\n  private areaMaxHeight: string\r\n\r\n  static defaultProps: CodeViewProps = {\r\n    children: \"\",\r\n    language: \"ts\",\r\n    canHidden: false\r\n  }\r\n\r\n  constructor(props: CodeViewProps | Readonly<CodeViewProps>) {\r\n    super(props);\r\n    this.state = {\r\n      isShowCode: true\r\n    }\r\n    this.codeViewAreaRef = createRef<HTMLDivElement>();\r\n    this.areaMaxHeight = \"fit-content\"\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    (window as any).PR.prettyPrint();\r\n  }\r\n\r\n  componentDidMount() {\r\n    (window as any).PR.prettyPrint();\r\n    this.areaMaxHeight = this.codeViewAreaRef.current?.clientHeight + \"px\" || \"fit-content\"\r\n    this.setState({\r\n      isShowCode: !this.props.canHidden || !!this.props.defaultShow\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let result = \"\";\r\n    try {\r\n      result = prettier.format(this.props.children, {\r\n        parser: \"typescript\",\r\n        plugins: [parserTypeScript, parserHtml]\r\n      });\r\n    } catch (e) {\r\n      console.error(\"代码格式有误，无法解析\")\r\n      result = this.props.children\r\n    }\r\n\r\n    let className = classNames(\r\n      \"lg-code-view-root\",\r\n      {\r\n        [`${this.props.className}`]: !!this.props.className,\r\n        \"lg-code-view-can-hidden\": this.props.canHidden\r\n      }\r\n    )\r\n\r\n    return (\r\n      <div className={className} style={this.props.style}>\r\n        <div ref={this.codeViewAreaRef} className=\"lg-code-view-area\"\r\n             style={{height: this.state.isShowCode ? this.areaMaxHeight : \"0\"}}>\r\n          <pre className={`prettyprint lang-js`}>\r\n              <div className=\"code_block\">\r\n                <code className=\"code_text\">{result}</code>\r\n              </div>\r\n          </pre>\r\n        </div>\r\n        {\r\n          !this.props.canHidden ? \"\" :\r\n            <div onClick={() => this.setState({isShowCode: !this.state.isShowCode})}\r\n                 className=\"lg-code-view-show-button\">\r\n              <div className={`lg-code-view-show-text ${this.state.isShowCode ? \"on-show\" : \"\"}`}>\r\n                {!this.state.isShowCode ? \"显示\" : \"隐藏\"}代码\r\n              </div>\r\n            </div>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import \"./index.scss\"\r\nimport {BaseComponent} from \"../../type/BaseComponent\";\r\nimport classNames from \"classnames\";\r\nimport { BaseProps } from \"../../type/BaseProps\";\r\nimport {CodeView} from \"@/components/CodeView\";\r\n\r\n\r\nexport interface DemoViewProps {\r\n  title: string\r\n  subtitle?: string\r\n  code?: string\r\n}\r\n\r\nexport class DemoView extends BaseComponent<DemoViewProps> {\r\n\r\n  private readonly classNamePrefix: string\r\n\r\n  constructor(props: (DemoViewProps & BaseProps) | Readonly<DemoViewProps & BaseProps>) {\r\n    super(props);\r\n    this.classNamePrefix = \"lg-demo-view\"\r\n  }\r\n\r\n  render() {\r\n    let className = classNames(\r\n      `${this.classNamePrefix}-root`,\r\n      {\r\n        [`${this.props.className}`]: !!this.props.className\r\n      }\r\n    )\r\n    return (\r\n      <div className={className} style={this.props.style}>\r\n        <div className={`${this.classNamePrefix}-title`}>{this.props.title}</div>\r\n        {\r\n          !this.props.subtitle ? \"\" :\r\n            <div className={`${this.classNamePrefix}-subtitle`}>{this.props.subtitle}</div>\r\n        }\r\n        <div className={`${this.classNamePrefix}-component-area`}>\r\n          {\r\n            this.props.children\r\n          }\r\n        </div>\r\n        {\r\n          !this.props.code? \"\":\r\n            <CodeView canHidden={true}>{this.props.code}</CodeView>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}","import \"./index.scss\"\r\nimport {BaseComponent} from \"../../type/BaseComponent\"\r\nimport \"./icon/iconfont.css\"\r\nimport {BaseProps} from \"../../type/BaseProps\";\r\nimport classNames from \"classnames\";\r\n\r\n\r\nexport interface LgLoadingProps extends LgLoadingAProps, LgLoadingBProps, LgProgressProps, BaseProps {\r\n  type?: \"A\" | \"B\" | \"C\"\r\n}\r\n\r\nexport const LgLoading = (props: LgLoadingProps) => {\r\n  switch (props.type) {\r\n    case \"A\":\r\n      return <LgLoadingA {...props} />\r\n    case \"B\":\r\n      return <LgLoadingB {...props} />\r\n    case \"C\":\r\n      return <LgProgress {...props} />\r\n  }\r\n\r\n  return <LgLoadingA {...props} />\r\n}\r\n\r\n\r\nexport interface LgLoadingAProps {\r\n  tip?: string\r\n  size?: \"medium\" | \"large\"\r\n  tipAlign?: \"bottom\" | \"right\"\r\n}\r\n\r\nexport class LgLoadingA extends BaseComponent<LgLoadingAProps> {\r\n  static defaultProps: LgLoadingAProps = {\r\n    size: \"large\",\r\n    tip: \"加载中...\",\r\n    tipAlign: \"bottom\"\r\n  }\r\n\r\n  render() {\r\n    let className = classNames(\r\n      \"lg-loading-a-root\",\r\n      `lg-loading-tip-align-${this.props.tipAlign}`,\r\n      `lg-loading-size-${this.props.size}`,\r\n      {\r\n        [`${this.props.className}`]: !!this.props.className\r\n      }\r\n    )\r\n\r\n    return (\r\n      <div\r\n        className={className}>\r\n        <div className={`lg-loading-anime `}\r\n             style={this.props.style}>\r\n          <div className=\"lg-loading-dot-top\"/>\r\n          <div className=\"lg-loading-dot-right\"/>\r\n          <div className=\"lg-loading-dot-bottom\"/>\r\n          <div className=\"lg-loading-dot-left\"/>\r\n        </div>\r\n        <div className=\"lg-loading-tip\">{this.props.tip}</div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport interface LgLoadingBProps {\r\n  tip?: string\r\n  showIcon?: boolean\r\n  animeType?: \"A\" | \"B\"\r\n}\r\n\r\n\r\nlet loadingId = 0\r\n\r\n\r\nexport class LgLoadingB extends BaseComponent<LgLoadingBProps> {\r\n\r\n  private readonly currentId: number\r\n\r\n\r\n  constructor(props: LgLoadingBProps & BaseComponent) {\r\n    super(props);\r\n    this.currentId = loadingId++\r\n  }\r\n\r\n  static defaultProps: LgLoadingBProps = {\r\n    tip: \"加载中...\",\r\n    showIcon: false,\r\n    animeType: \"A\"\r\n  }\r\n\r\n  getRightId() {\r\n    return `lg-loading-b-right-${this.currentId}`\r\n  }\r\n\r\n  getLeftId() {\r\n    return `lg-loading-b-left-${this.currentId}`\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={`lg-loading-b-root ${this.props.className || \"\"}`} style={this.props.style}>\r\n        {\r\n          !this.props.showIcon || this.props.animeType !== \"A\" ? \"\" :\r\n            <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\"\r\n                 height=\"100%\" viewBox=\"0 0 200 200\" className=\"lg-loading-b-circle-anime\">\r\n              <g>\r\n                <linearGradient id={this.getLeftId()} gradientUnits=\"userSpaceOnUse\" x1=\"150\" y1=\"20\" x2=\"150\" y2=\"180\">\r\n                  <stop offset=\"0\" className=\"left-start-color-0\"/>\r\n                  <stop offset=\"1\" className=\"left-start-color-1\"/>\r\n                </linearGradient>\r\n                <linearGradient id={this.getRightId()} gradientUnits=\"userSpaceOnUse\" x1=\"50\" y1=\"0\" x2=\"50\" y2=\"180\">\r\n                  <stop offset=\"0\" className=\"right-start-color-0\"/>\r\n                  <stop offset=\"1\" className=\"right-start-color-1\"/>\r\n                </linearGradient>\r\n                <path style={{fill: `url(#${this.getLeftId()})`}}\r\n                      d=\"M20,100c0-44.1,35.9-80,80-80V0C44.8,0,0,44.8,0,100s44.8,100,100,100v-20C55.9,180,20,144.1,20,100z\"/>\r\n                <path style={{fill: `url(#${this.getRightId()})`}}\r\n                      d=\"M100,0v20c44.1,0,80,35.9,80,80c0,44.1-35.9,80-80,80v20c55.2,0,100-44.8,100-100S155.2,0,100,0z\"/>\r\n                <circle className=\"top\" cx=\"100\" cy=\"10\" r=\"10\"/>\r\n              </g>\r\n            </svg>\r\n        }\r\n        {\r\n          !this.props.showIcon || this.props.animeType !== \"B\" ? \"\" :\r\n            <div className=\"lg-loading-anime-b-wrapper\">\r\n              <svg viewBox=\"25 25 50 50\" className=\"circular\">\r\n                <circle cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" strokeWidth=\"5\" strokeMiterlimit=\"10\"\r\n                        className=\"lg-loading-anime-b\"/>\r\n              </svg>\r\n            </div>\r\n        }\r\n        {\r\n          !this.props.tip ? \"\" :\r\n            <div className=\"lg-loading-tip\">{this.props.tip}</div>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport interface LgProgressProps {\r\n  innerText?: boolean\r\n  percentage?: number\r\n  status?: \"success\" | \"exception\" | \"warning\"\r\n  width?: number\r\n  height?: number\r\n}\r\n\r\nexport class LgProgress extends BaseComponent<LgProgressProps> {\r\n\r\n  static defaultProps: LgProgressProps = {\r\n    innerText: false,\r\n    percentage: 0,\r\n    width: 300,\r\n    height: 5\r\n  }\r\n\r\n  getOuterStatusText() {\r\n    if (this.props.innerText) {\r\n      return <></>;\r\n    }\r\n\r\n    switch (this.props.status) {\r\n      case \"success\":\r\n        return <i className=\"loading-icon-check-circle\"/>\r\n      case \"warning\":\r\n        return <i className=\"loading-icon-gantanhao\"/>\r\n      case \"exception\":\r\n        return <i className=\"loading-icon-close-circle\"/>\r\n    }\r\n\r\n    const percentageText = this.getPercentage() === 100 ? \"满\" : this.getPercentage() + \"%\"\r\n    return <div className=\"lg-progress-outer-text\">{percentageText}</div>\r\n  }\r\n\r\n  render() {\r\n    const percentage = this.getPercentage()\r\n\r\n    let height = this.props.height || 0;\r\n    if (this.props.innerText && height < 26) {\r\n      height = 26\r\n    }\r\n\r\n    return (\r\n      <div className=\"lg-progress-root\">\r\n        <div style={{width: this.props.width + 'px', height: height + 'px'}}\r\n             className={`lg-progress-line ${this.props.innerText ? \"lg-progress-line-innerText\" : \"\"}`}>\r\n          <div\r\n            className={`lg-progress-high-light ${!this.props.status ? \"\" : \"lg-progress-status-\" + this.props.status}`}\r\n            style={{width: `${percentage}%`}}>{this.props.innerText ? `${percentage}%` : \"\"}&nbsp;</div>\r\n        </div>\r\n        {\r\n          this.getOuterStatusText()\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n\r\n  private getPercentage() {\r\n    if (!this.props.percentage || this.props.percentage < 0) {\r\n      return 0\r\n    }\r\n    if (this.props.percentage > 100) {\r\n      return 100\r\n    }\r\n    return this.props.percentage;\r\n  }\r\n}\r\n\r\n\r\n","import {BaseComponent} from \"../../type/BaseComponent\";\r\nimport {BaseProps} from \"../../type/BaseProps\";\r\nimport classNames from \"classnames\";\r\nimport \"./index.scss\"\r\nimport {CodeView} from \"@/components/CodeView\";\r\n\r\nexport interface DemoPageProps {\r\n  title: string\r\n  subtitle?: string\r\n  importCode?: string\r\n  interfaceCode?: string\r\n}\r\n\r\n\r\nexport class DemoPage extends BaseComponent<DemoPageProps> {\r\n\r\n  private readonly classNamePrefix: string\r\n\r\n  constructor(props: (DemoPageProps & BaseProps) | Readonly<DemoPageProps & BaseProps>) {\r\n    super(props);\r\n    this.classNamePrefix = \"lg-demo-page\"\r\n  }\r\n\r\n  render() {\r\n\r\n    const className = classNames(\r\n      `${this.classNamePrefix}-root`,\r\n      {\r\n        [`${this.props.className}`]: !!this.props.className\r\n      }\r\n    )\r\n\r\n    return (\r\n      <div className={className}>\r\n        <div className={`${this.classNamePrefix}-header`}>\r\n          <div className={`${this.classNamePrefix}-title`}>{this.props.title}</div>\r\n          {\r\n            !this.props.subtitle ? \"\" :\r\n              < div className={`${this.classNamePrefix}-subtitle`}>{this.props.subtitle}</div>\r\n          }\r\n          {\r\n            !this.props.importCode ? \"\" : (\r\n              <div className={`${this.classNamePrefix}-import`}>\r\n                <div className={`${this.classNamePrefix}-import-title`}>在页面中引入组件</div>\r\n                <CodeView>\r\n                  {this.props.importCode}\r\n                </CodeView>\r\n              </div>\r\n            )\r\n\r\n          }\r\n        </div>\r\n        <div className={`${this.classNamePrefix}-body`}>\r\n          {\r\n            this.props.children\r\n          }\r\n        </div>\r\n        <div className={`${this.classNamePrefix}-footer`}>\r\n          {\r\n            !this.props.interfaceCode ? \"\" : (\r\n              <div className={`${this.classNamePrefix}-interface`}>\r\n                <div className={`${this.classNamePrefix}-interface-title`}>标签属性解析</div>\r\n                <CodeView>\r\n                  {this.props.interfaceCode}\r\n                </CodeView>\r\n              </div>\r\n            )\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import {Component} from \"react\";\r\nimport {LgLoading} from \"@/components/loading\";\r\nimport \"./index.scss\";\r\nimport {BaseProps} from \"../../type/BaseProps\";\r\nimport {DemoPage} from \"../demoPage\";\r\nimport {DemoView} from \"@/components/demoView\";\r\n\r\nexport default class Loading extends Component<{}, {}> {\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <DemoPage className=\"lg-loading-demo\" title=\"G016加载/进度条\" subtitle=\"常用加载条\"\r\n                importCode={`\r\n                    import {LgLoading} from \"@/components/loading\";\r\n                `}\r\n                interfaceCode={`\r\n                  interface LgLoadingProps{\r\n                     type?: \"A\" | \"B\" | \"C\" // 款式选择，\"A\"、\"B\"、 \"C\",可空，默认为A\r\n                     tip?: string  //提示词，可空，默认为”加载中...“， C款无效\r\n                     \r\n                     /*A款专用属性*/\r\n                     size?: \"medium\" | \"large\" //大小，可空，默认\"large\"\r\n                     tipAlign?: \"bottom\" | \"right\" //提示词的位置，可空，默认\"bottom\"\r\n                     \r\n                     /* B款专用属性 */\r\n                     showIcon?: boolean //是否显示动画，可空，默认false\r\n                     animeType?: \"A\" | \"B\" //动画类型，可空，默认\"A\"。注意：B类型动画不支持IE\r\n                     \r\n                     /* C款专用属性 */\r\n                     innerText?: boolean //是否内置百分比，可空，默认false\r\n                     percentage?: number //当前进度,可空，默认0\r\n                     status?: \"success\" | \"exception\" | \"warning\" //当前状态\r\n                     width?: number //线条长度\r\n                     height?: number //线条高度\r\n                  }\r\n                `}>\r\n        <DemoView title=\"A款常用款\" subtitle=\"可以设置大小，位置\"\r\n                  code={`\r\n                      <>\r\n                        // 基本使用\r\n                        <LgLoading/>\r\n                        \r\n                        // 修改尺寸\r\n                        <LgLoading tip=\"default=large\"/>\r\n                        <LgLoading tip=\"large\"/>\r\n                        <LgLoading size=\"medium\" tip=\"medium\"/>\r\n                        \r\n                        //修改提示词位置\r\n                        <LgLoading tip=\"default=bottom\"/>\r\n                        <LgLoading tip=\"right\" tipAlign=\"right\"/>\r\n                        <LgLoading tip=\"bottom\"/>\r\n                      </>\r\n                    `}>\r\n          <div className=\"lg-loading-horizontal-show\">\r\n            <LgLoading/>\r\n            <LgLoading tip=\"default=large\"/>\r\n            <LgLoading tip=\"large\"/>\r\n            <LgLoading size=\"medium\" tip=\"medium\"/>\r\n            <LgLoading tip=\"default=bottom\"/>\r\n            <LgLoading tip=\"right\" tipAlign=\"right\"/>\r\n            <LgLoading tip=\"bottom\"/>\r\n          </div>\r\n        </DemoView>\r\n\r\n        <DemoView title=\"B款\" subtitle=\"B款有三种，纯文字款、带动画自旋、带动画长度变动（不支持IE）\"\r\n                  code={`\r\n                       <>\r\n                        //纯文字\r\n                        <LgLoading type=\"B\"/>\r\n                        //动画A\r\n                        <LgLoading type=\"B\" showIcon tip=\"\"/>\r\n                        //动画B\r\n                        <LgLoading type=\"B\" showIcon tip=\"\" animeType=\"B\"/>\r\n                      </>\r\n                    `}>\r\n          <div className=\"lg-loading-horizontal-show\">\r\n            <LgLoading type=\"B\" className=\"custom-style\"/>\r\n            <LgLoading type=\"B\" showIcon tip=\"\"/>\r\n            <LgLoading type=\"B\" showIcon tip=\"\" animeType=\"B\"/>\r\n          </div>\r\n        </DemoView>\r\n\r\n        <DemoView title=\"C款\" subtitle=\"百分比外置\"\r\n                  code={`\r\n                       <>\r\n                        /*百分比外置*/\r\n                        <LgLoading percentage={50} type=\"C\"/>\r\n                        <LgLoading percentage={100} type=\"C\"/>\r\n                        <LgLoading percentage={100} type=\"C\" status=\"success\"/>\r\n                        <LgLoading percentage={100} type=\"C\" status=\"warning\"/>\r\n                        <LgLoading percentage={50} type=\"C\" status=\"exception\"/>\r\n                      </>\r\n                    `}>\r\n          <div className=\"lg-loading-vertical-show\">\r\n            <LgLoading percentage={50} type=\"C\"/>\r\n            <LgLoading percentage={100} type=\"C\"/>\r\n            <LgLoading percentage={100} type=\"C\" status=\"success\"/>\r\n            <LgLoading percentage={100} type=\"C\" status=\"warning\"/>\r\n            <LgLoading percentage={50} type=\"C\" status=\"exception\"/>\r\n          </div>\r\n        </DemoView>\r\n\r\n        <DemoView title=\"C款\" subtitle=\"线条款，百分比内置\"\r\n                  code={`\r\n                       <>\r\n                        /*百分比外置*/\r\n                        <LgLoading innerText percentage={50} type=\"C\"/>\r\n                        <LgLoading innerText percentage={100} type=\"C\"/>\r\n                        <LgLoading innerText percentage={100} type=\"C\" status=\"success\"/>\r\n                        <LgLoading innerText percentage={100} type=\"C\" status=\"warning\"/>\r\n                        <LgLoading innerText percentage={50} type=\"C\" status=\"exception\"/>\r\n                      </>\r\n                    `}>\r\n          <div className=\"lg-loading-vertical-show\">\r\n            <LgLoading innerText percentage={50} type=\"C\"/>\r\n            <LgLoading innerText percentage={100} type=\"C\"/>\r\n            <LgLoading innerText percentage={100} type=\"C\" status=\"success\"/>\r\n            <LgLoading innerText percentage={100} type=\"C\" status=\"warning\"/>\r\n            <LgLoading innerText percentage={50} type=\"C\" status=\"exception\"/>\r\n          </div>\r\n        </DemoView>\r\n      </DemoPage>\r\n    )\r\n  }\r\n}","import {Component} from \"react\";\r\nimport {BaseProps} from \"./BaseProps\";\r\n\r\nexport class BaseComponent<T = {}, S = {}, SS = any> extends Component<T & BaseProps, S, SS>{\r\n  constructor(props: (T & BaseProps) | Readonly<T & BaseProps>) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.onRef && this.props.onRef(this)\r\n  }\r\n}","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 26291;\nmodule.exports = webpackEmptyContext;"],"names":["CodeView","props","codeViewAreaRef","areaMaxHeight","state","isShowCode","createRef","window","PR","prettyPrint","this","current","clientHeight","setState","canHidden","defaultShow","result","prettier","children","parser","plugins","parserTypeScript","parserHtml","e","console","error","className","classNames","style","ref","height","onClick","Component","defaultProps","language","DemoView","classNamePrefix","title","subtitle","code","BaseComponent","LgLoading","type","LgLoadingA","LgLoadingB","LgProgress","tipAlign","size","tip","loadingId","currentId","showIcon","animeType","version","xmlns","width","viewBox","id","getLeftId","gradientUnits","x1","y1","x2","y2","offset","getRightId","fill","d","cx","cy","r","strokeWidth","strokeMiterlimit","innerText","status","percentageText","getPercentage","percentage","getOuterStatusText","DemoPage","importCode","interfaceCode","Loading","onRef","webpackEmptyContext","req","Error","keys","resolve","module","exports"],"sourceRoot":""}