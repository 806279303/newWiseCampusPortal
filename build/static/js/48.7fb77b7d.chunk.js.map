{"version":3,"file":"static/js/48.7fb77b7d.chunk.js","mappings":"gSAgBaA,EAAb,sJAOE,SAAmBC,EAAyBC,EAAgDC,GACzFC,OAAeC,GAAGC,gBARvB,+BAWE,WACGF,OAAeC,GAAGC,gBAZvB,oBAeE,WACE,IAAIC,EAAS,GACb,IACEA,EAASC,IAAAA,OAAgBC,KAAKC,MAAMC,SAAU,CAC5CC,OAAQ,aACRC,QAAS,CAACC,IAAkBC,OAE9B,MAAOC,GACPC,QAAQC,MAAM,sEACdX,EAASE,KAAKC,MAAMC,SAEtB,OACE,gBAAKQ,UAAS,2CAAsCV,KAAKC,MAAMS,WAAa,IAAMC,MAAOX,KAAKC,MAAMU,MAApG,UACI,gBAAKD,UAAU,aAAf,UACE,iBAAMA,UAAU,YAAhB,SAA6BZ,YA7BzC,GAA8Bc,EAAAA,WAAjBrB,EAEJsB,aAA8B,CACnCX,SAAU,GACVY,SAAU,O,4MCODC,EAAb,0IACI,WACI,OACI,SAAC,EAAAC,KAAA,MAAD,kBAAehB,KAAKC,OAApB,aAEQD,KAAKC,MAAMC,gBAL/B,GAAiCe,EAAAA,GAWpBC,EAAb,0CAKI,WAAYjB,GAAmB,kCACrBA,GANd,uCASI,cATJ,oBAWI,cAXJ,qBAcI,cAdJ,+BAkBI,YACI,mEAnBR,oBAqBI,WACI,MAAkCD,KAAKC,MAAvC,IAAQS,UAAAA,OAAR,MAAoB,GAApB,EAAwBC,EAAxB,EAAwBA,MACxB,OACI,gBAAKD,UAAS,uBAAkBA,GAAaC,MAAOA,EAApD,UACI,SAAC,EAAAK,MAAD,kBAAUhB,KAAKC,OAAf,aAEQD,KAAKC,MAAMC,kBA3BnC,GAA4Be,EAAAA,GAAfC,EAEOC,OAASJ,E,aC3BRK,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACjB,WAAYnB,GAAY,IAAD,yBACnB,cAAMA,IACDoB,MAAQ,CACTC,KAAM,CAAC,CACHC,MAAO,QACPC,KAAM,QACNC,QAAS,iBACV,CACCF,MAAO,QACPC,KAAM,QACNC,QAAS,kBAEbC,SAAU,EAEVC,MAAO,CAAC,CACJJ,MAAO,QACPC,KAAM,QACNC,QAAS,iBACV,CACCF,MAAO,QACPC,KAAM,QACNC,QAAS,kBAEbG,UAAW,GAvBI,EA8QtB,OArPA,+BACD,SAAQC,EAAaC,GACjB,GAAe,QAAXD,EAAkB,CAClB,IAAMP,EAAOtB,KAAKqB,MAAMC,KAElBS,EADW/B,KAAKqB,MAAMK,SACH,EAEzBJ,EAAKU,KAAK,CACNT,MAAO,UACPC,KAAM,OAASO,EACfN,QAAS,oBAEbzB,KAAKiC,SAAS,CACVX,KAAAA,EACAI,SAAUK,IAIlB,GAAe,WAAXF,EAAqB,CACrB,IAAQP,EAAStB,KAAKqB,MAAdC,KAERd,QAAQ0B,IAAIL,EAAQC,GACpBR,EAAKa,OAAOL,EAAIM,IAAIC,QAAQ,QAAS,IAAK,GAC1CrC,KAAKiC,SAAS,CACVX,KAAAA,OAGX,oBAED,WACI,MAA6BtB,KAAKqB,MAA1BM,EAAR,EAAQA,MACFI,EADN,EAAeH,UACW,EAE1BD,EAAMK,KAAK,CACPT,MAAO,UACPC,KAAM,OAASO,EACfN,QAAS,oBAEbzB,KAAKiC,SAAS,CACVN,MAAAA,EACAC,UAAWG,MAElB,uBAED,SAAUD,GACN,MAA4B9B,KAAKqB,MAAzBM,EAAR,EAAQA,MAAR,EAAeD,SAEfC,EAAMQ,OAAOL,EAAIM,IAAIC,QAAQ,QAAS,IAAK,GAC3CrC,KAAKiC,SAAS,CACVN,MAAAA,MAEP,oBACD,WAAU,IAAD,OACCW,GAAQ,6BAAM,SAAC,EAAAC,KAAD,CAAMf,KAAK,SAAjB,+BACd,OACI,iBAAKd,UAAU,gBAAf,WACI,oDACA,iBAAKA,UAAU,eAAf,WACI,gBAAKA,UAAU,qBAAf,uCACA,SAACnB,EAAA,EAAD,CAAUuB,SAAS,OAAOJ,UAAU,gBAApC,sjCAwBJ,iBAAKA,UAAU,eAAf,WACI,gBAAKA,UAAU,qBAAf,uCACA,gBAAKA,UAAU,mBAAf,iFACA,gBAAKA,UAAU,oBAAf,UACI,UAACQ,EAAD,CAAQsB,WAAW,IAAIC,WAAY,SAACX,GAAD,OAAStB,QAAQ0B,IAAIJ,EAAI7B,MAAMuB,OAAlE,WACI,SAACN,EAAOC,OAAR,CAAemB,MAAM,2BAAOd,KAAK,IAAjC,uCACA,SAACN,EAAOC,OAAR,CAAemB,MAAM,2BAAOd,KAAK,IAAjC,uCACA,SAACN,EAAOC,OAAR,CAAemB,MAAM,2BAAOd,KAAK,IAAjC,uCACA,SAACN,EAAOC,OAAR,CAAemB,MAAM,uCAASd,KAAK,IAAnC,wDAGR,SAACjC,EAAA,EAAD,CAAUuB,SAAS,OAAnB,8tBAWJ,iBAAKJ,UAAU,eAAf,WACI,gBAAKA,UAAU,qBAAf,6CACA,gBAAKA,UAAU,mBAAf,2EACA,gBAAKA,UAAU,oBAAf,UACI,UAACQ,EAAD,CAAQwB,KAAK,OAAOC,MAAM,IAA1B,WACI,SAACzB,EAAOC,OAAR,CAAemB,MAAM,2BAAOd,KAAK,IAAjC,uCACA,SAACN,EAAOC,OAAR,CAAemB,MAAM,2BAAOd,KAAK,IAAjC,uCACA,SAACN,EAAOC,OAAR,CAAemB,MAAM,2BAAOd,KAAK,IAAjC,uCACA,SAACN,EAAOC,OAAR,CAAemB,MAAM,uCAASd,KAAK,IAAnC,wDAGR,SAACjC,EAAA,EAAD,CAAUuB,SAAS,OAAnB,mrBAWJ,iBAAKJ,UAAU,eAAf,WACI,gBAAKA,UAAU,qBAAf,iCACA,gBAAKA,UAAU,mBAAf,+DACA,gBAAKA,UAAU,oBAAf,UACI,UAACQ,EAAD,CAAQwB,KAAK,OAAOE,UAAQ,EAACJ,WAAW,IAAIK,YAAa,SAACf,GAAD,OAActB,QAAQ0B,IAAIJ,EAAI7B,MAAMuB,OAA7F,WACI,SAACN,EAAOC,OAAR,CAAemB,MAAM,2BAAOd,KAAK,IAAjC,uCACA,SAACN,EAAOC,OAAR,CAAemB,MAAM,2BAAOd,KAAK,IAAjC,uCACA,SAACN,EAAOC,OAAR,CAAemB,MAAM,2BAAOd,KAAK,IAAjC,uCACA,SAACN,EAAOC,OAAR,CAAemB,MAAM,uCAASd,KAAK,IAAnC,wDAGR,SAACjC,EAAA,EAAD,CAAUuB,SAAS,OAAnB,yvBAWJ,iBAAKJ,UAAU,eAAf,WACI,gBAAKA,UAAU,qBAAf,iCACA,gBAAKA,UAAU,mBAAf,+DACA,gBAAKA,UAAU,oBAAf,UACI,UAACQ,EAAD,CAAQwB,KAAK,cAAcF,WAAW,IAAtC,WACI,SAACtB,EAAOC,OAAR,CAAemB,MAAM,2BAAOd,KAAK,IAAjC,uCACA,SAACN,EAAOC,OAAR,CAAemB,MAAM,2BAAOd,KAAK,IAAjC,uCACA,SAACN,EAAOC,OAAR,CAAemB,MAAM,2BAAOd,KAAK,IAAjC,uCACA,SAACN,EAAOC,OAAR,CAAemB,MAAM,uCAASd,KAAK,IAAnC,wDAGR,SAACjC,EAAA,EAAD,CAAUuB,SAAS,OAAnB,+rBAWJ,iBAAKJ,UAAU,eAAf,WACI,gBAAKA,UAAU,qBAAf,mDACA,gBAAKA,UAAU,mBAAf,uIACA,gBAAKA,UAAU,oBAAf,UACI,UAACQ,EAAD,CAAQwB,KAAK,cAAcF,WAAW,IAAtC,WACI,SAACtB,EAAOC,OAAR,CAAemB,MAAOA,EAAOd,KAAK,IAAlC,uCACA,SAACN,EAAOC,OAAR,CAAemB,MAAM,2BAAOd,KAAK,IAAjC,uCACA,SAACN,EAAOC,OAAR,CAAemB,MAAM,2BAAOd,KAAK,IAAjC,uCACA,SAACN,EAAOC,OAAR,CAAemB,MAAM,uCAASd,KAAK,IAAnC,wDAGR,SAACjC,EAAA,EAAD,CAAUuB,SAAS,OAAnB,4qBAWJ,iBAAKJ,UAAU,eAAf,WACI,gBAAKA,UAAU,qBAAf,yDACA,gBAAKA,UAAU,mBAAf,mJACA,gBAAKA,UAAU,oBAAf,UACI,SAACQ,EAAD,CAAQwB,KAAK,OAAOC,MAAM,QAAQG,UAAQ,EAACC,UAAW,SAAClB,EAAQC,GAAT,OAAiB,EAAKkB,QAAQnB,EAAQC,IAA5F,SAEQ9B,KAAKqB,MAAMC,KAAK2B,KAAI,SAACC,EAAWnB,GAC5B,OAAO,SAACb,EAAOC,OAAR,CAA2ByB,UAAQ,EAACN,MAAOY,EAAK3B,MAAOC,KAAM0B,EAAK1B,KAAlE,SAAyE0B,EAAKzB,SAA1DM,WAK3C,SAACxC,EAAA,EAAD,CAAUuB,SAAS,OAAnB,8iBAYJ,iBAAKJ,UAAU,eAAf,WACI,gBAAKA,UAAU,qBAAf,yDACA,iBAAKA,UAAU,oBAAf,WACI,gBAAKC,MAAO,CAAEwC,aAAc,QAA5B,UACI,SAAC,EAAAC,OAAD,CAAQC,KAAK,QAAQC,QAAS,kBAAM,EAAKC,UAAzC,wBAEJ,SAACrC,EAAD,CAAQwB,KAAK,OAAOC,MAAM,QAAQE,YAAa,SAACf,GAAD,OAAS,EAAK0B,UAAU1B,IAAvE,SAEQ9B,KAAKqB,MAAMM,MAAMsB,KAAI,SAACC,EAAWnB,GAC7B,OAAO,SAACb,EAAOC,OAAR,CAA2ByB,UAAQ,EAACN,MAAOY,EAAK3B,MAAOC,KAAM0B,EAAK1B,KAAlE,SAAyE0B,EAAKzB,SAA1DM,YAK3C,SAACxC,EAAA,EAAD,CAAUuB,SAAS,OAAnB,giBAcf,EA/QgBM,CAAaR,EAAAA,Y,mHCVrBK,EAAb,0CACE,WAAYhB,GAAmD,kCACvDA,GAFV,gDAKE,WACED,KAAKC,MAAMwD,OAASzD,KAAKC,MAAMwD,MAAMzD,UANzC,G,SAA6DY,Y,kBCH7D,SAAS8C,EAAoBC,GAC5B,IAAIpD,EAAI,IAAIqD,MAAM,uBAAyBD,EAAM,KAEjD,MADApD,EAAEsD,KAAO,mBACHtD,EAEPmD,EAAoBI,KAAO,WAAa,MAAO,IAC/CJ,EAAoBK,QAAUL,EAC9BA,EAAoBM,GAAK,MACzBC,EAAOC,QAAUR,G,kFCPF,SAASS,EAAeC,EAAQC,GAC7C,MAAQC,OAAOC,UAAUC,eAAeC,KAAKL,EAAQC,IAEpC,QADfD,GAAS,EAAAM,EAAA,GAAeN,MAI1B,OAAOA,ECNM,SAASO,IAiBtB,OAfEA,EADqB,qBAAZC,SAA2BA,QAAQC,IACrCD,QAAQC,IAER,SAAcC,EAAQT,EAAUU,GACrC,IAAIC,EAAO,EAAcF,EAAQT,GACjC,GAAKW,EAAL,CACA,IAAIC,EAAOX,OAAOY,yBAAyBF,EAAMX,GAEjD,OAAIY,EAAKJ,IACAI,EAAKJ,IAAIJ,KAAKU,UAAUC,OAAS,EAAIN,EAASC,GAGhDE,EAAKtC,QAITgC,EAAKU,MAAMrF,KAAMmF","sources":["components/CodeView/index.tsx","components/tabs/index.tsx","pages/tabs/index.tsx","type/BaseComponent.ts","../node_modules/prettier|sync","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js"],"sourcesContent":["import \"code-prettify\";\r\nimport \"code-prettify/src/prettify.css\";\r\n\r\nimport parserTypeScript from 'prettier/parser-typescript';\r\nimport prettier from 'prettier/standalone';\r\nimport parserHtml from \"prettier/parser-html\";\r\nimport {Component, CSSProperties} from \"react\";\r\nimport \"./index.scss\";\r\n\r\ninterface CodeViewProps {\r\n  children: string\r\n  className?: string\r\n  style?: CSSProperties\r\n  language?: \"ts\" | \"html\"\r\n}\r\n\r\nexport class CodeView extends Component<CodeViewProps, {}> {\r\n\r\n  static defaultProps: CodeViewProps = {\r\n    children: \"\",\r\n    language: \"ts\"\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Readonly<{}>, prevState: Readonly<{ selectedIndex: number }>, snapshot?: any) {\r\n    (window as any).PR.prettyPrint();\r\n  }\r\n\r\n  componentDidMount() {\r\n    (window as any).PR.prettyPrint();\r\n  }\r\n\r\n  render() {\r\n    let result = \"\";\r\n    try {\r\n      result = prettier.format(this.props.children, {\r\n        parser: \"typescript\",\r\n        plugins: [parserTypeScript, parserHtml]\r\n      });\r\n    } catch (e) {\r\n      console.error(\"代码格式有误，无法解析\")\r\n      result = this.props.children\r\n    }\r\n    return (\r\n      <pre className={`lg-code-view prettyprint lang-js ${this.props.className || \"\"}`} style={this.props.style}>\r\n          <div className=\"code_block\">\r\n            <code className=\"code_text\">{result}</code>\r\n          </div>\r\n      </pre>\r\n    )\r\n  }\r\n}\r\n","import \"./index.scss\"\r\nimport { Component } from \"react\";\r\nimport { BaseProps } from '../../type/BaseProps';\r\n\r\nimport { Menu, Tabs } from \"element-react\";\r\nimport { BaseComponent } from \"../../type/BaseComponent\";\r\n\r\n\r\ninterface TabsProps {\r\n    type?: 'card' | 'border-card'\r\n    activeName?: string\r\n    value?: string\r\n    closable?: boolean\r\n    addable?: boolean\r\n    editable?: boolean\r\n    // TODO: add tab type\r\n    onTabClick?(tab?: any): void\r\n    onTabRemove?(name?: string): void\r\n    onTabAdd?(): void\r\n    onTabEdit?(targetName?: string, action?: string): void\r\n}\r\ninterface TabsPaneProps{\r\n    label?: string | React.ReactElement<any>\r\n    name?: string\r\n    disabled?: boolean\r\n    closable?: boolean\r\n}\r\nexport class LgPaneClass extends BaseComponent<TabsPaneProps, {}>{\r\n    render() {\r\n        return (\r\n            <Tabs.Pane {...this.props}>\r\n                {\r\n                    this.props.children\r\n                }\r\n            </Tabs.Pane>\r\n        )\r\n    }\r\n}\r\nexport class LgTabs extends BaseComponent<TabsProps> {\r\n\r\n    static readonly LgPane = LgPaneClass\r\n\r\n\r\n    constructor(props: TabsProps) {\r\n        super(props)\r\n    }\r\n\r\n    onSelect() {\r\n    }\r\n    onOpen() {\r\n\r\n    }\r\n    onClose() {\r\n\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        super.componentDidMount()\r\n    }\r\n    render() {\r\n        const { className = '', style } = this.props\r\n        return (\r\n            <div className={`lg_tabs_root ${className}`} style={style}>\r\n                <Tabs {...this.props}>\r\n                    {\r\n                        this.props.children\r\n                    }\r\n                </Tabs>\r\n            </div>\r\n        )\r\n    }\r\n}","import { Component } from \"react\";\r\nimport \"./index.scss\";\r\nimport { AllSkinCover } from \"../AllSkinCover\";\r\nimport { Icon, Button } from \"element-react\";\r\nimport { LgTabs } from \"@/components/tabs\";\r\nimport { CodeView } from '@/components/CodeView';\r\n\r\ninterface IState {\r\n    tabs: any\r\n    tabIndex: any\r\n    tabs1: any\r\n    tabIndex1: any\r\n}\r\nexport default class Menu extends Component<{}, IState> {\r\n    constructor(props: {}) {\r\n        super(props);\r\n        this.state = {\r\n            tabs: [{\r\n                title: 'Tab 1',\r\n                name: 'Tab 1',\r\n                content: 'Tab 1 content',\r\n            }, {\r\n                title: 'Tab 2',\r\n                name: 'Tab 2',\r\n                content: 'Tab 2 content',\r\n            }],\r\n            tabIndex: 2,\r\n\r\n            tabs1: [{\r\n                title: 'Tab 1',\r\n                name: 'Tab 1',\r\n                content: 'Tab 1 content',\r\n            }, {\r\n                title: 'Tab 2',\r\n                name: 'Tab 2',\r\n                content: 'Tab 2 content',\r\n            }],\r\n            tabIndex1: 2,\r\n        }\r\n    }\r\n    editTab(action: any, tab: any) {\r\n        if (action === 'add') {\r\n            const tabs = this.state.tabs;\r\n            const tabIndex = this.state.tabIndex;\r\n            const index = tabIndex + 1;\r\n\r\n            tabs.push({\r\n                title: 'new Tab',\r\n                name: 'Tab ' + index,\r\n                content: 'new Tab content',\r\n            });\r\n            this.setState({\r\n                tabs,\r\n                tabIndex: index,\r\n            });\r\n        }\r\n\r\n        if (action === 'remove') {\r\n            const { tabs } = this.state;\r\n\r\n            console.log(action, tab);\r\n            tabs.splice(tab.key.replace(/^\\.\\$/, ''), 1);\r\n            this.setState({\r\n                tabs,\r\n            });\r\n        }\r\n    }\r\n\r\n    addTab() {\r\n        const { tabs1, tabIndex1 } = this.state;\r\n        const index = tabIndex1 + 1;\r\n\r\n        tabs1.push({\r\n            title: 'new Tab',\r\n            name: 'Tab ' + index,\r\n            content: 'new Tab content',\r\n        });\r\n        this.setState({\r\n            tabs1,\r\n            tabIndex1: index,\r\n        });\r\n    }\r\n\r\n    removeTab(tab: any) {\r\n        const { tabs1, tabIndex } = this.state;\r\n\r\n        tabs1.splice(tab.key.replace(/^\\.\\$/, ''), 1);\r\n        this.setState({\r\n            tabs1,\r\n        });\r\n    }\r\n    render() {\r\n        const label = <span><Icon name=\"date\" /> 用户管理</span>\r\n        return (\r\n            <div className=\"lg_tabs_block\">\r\n                <h2>Tabs选项卡</h2>\r\n                <div className=\"lg_tabs_item\">\r\n                    <div className=\"lg_tabs_item_title\">标签属性</div>\r\n                    <CodeView language=\"html\" className=\"lg_tabs_block\">\r\n                        {`\r\n                            interface TabsProps {\r\n                                type?: 'card' | 'border-card'\r\n                                activeName?: string\r\n                                value?: string\r\n                                closable?: boolean\r\n                                addable?: boolean\r\n                                editable?: boolean\r\n                                // TODO: add tab type\r\n                                onTabClick?(tab?: any): void\r\n                                onTabRemove?(name?: string): void\r\n                                onTabAdd?(): void\r\n                                onTabEdit?(targetName?: string, action?: string): void\r\n                            }\r\n                            interface TabsPaneProps{\r\n                                label?: string | React.ReactElement<any>\r\n                                name?: string\r\n                                disabled?: boolean\r\n                                closable?: boolean\r\n                            }\r\n                        `}\r\n                    </CodeView>\r\n                </div>\r\n                <div className=\"lg_tabs_item\">\r\n                    <div className=\"lg_tabs_item_title\">基础样式</div>\r\n                    <div className=\"lg_tabs_item_des\">基础的、简洁的标签页。</div>\r\n                    <div className=\"lg_tabs_item_cont\">\r\n                        <LgTabs activeName=\"2\" onTabClick={(tab) => console.log(tab.props.name)}>\r\n                            <LgTabs.LgPane label=\"用户管理\" name=\"1\">用户管理</LgTabs.LgPane>\r\n                            <LgTabs.LgPane label=\"配置管理\" name=\"2\">配置管理</LgTabs.LgPane>\r\n                            <LgTabs.LgPane label=\"角色管理\" name=\"3\">角色管理</LgTabs.LgPane>\r\n                            <LgTabs.LgPane label=\"定时补偿任务\" name=\"4\">定时补偿任务</LgTabs.LgPane>\r\n                        </LgTabs>\r\n                    </div>\r\n                    <CodeView language=\"html\">\r\n                        {`\r\n                            <LgTabs activeName=\"2\" onTabClick={(tab) => console.log(tab.props.name)}>\r\n                                <LgTabs.LgPane label=\"用户管理\" name=\"1\">用户管理</LgTabs.LgPane>\r\n                                <LgTabs.LgPane label=\"配置管理\" name=\"2\">配置管理</LgTabs.LgPane>\r\n                                <LgTabs.LgPane label=\"角色管理\" name=\"3\">角色管理</LgTabs.LgPane>\r\n                                <LgTabs.LgPane label=\"定时补偿任务\" name=\"4\">定时补偿任务</LgTabs.LgPane>\r\n                            </LgTabs>\r\n                        `}\r\n                    </CodeView>\r\n                </div>\r\n                <div className=\"lg_tabs_item\">\r\n                    <div className=\"lg_tabs_item_title\">选项卡样式</div>\r\n                    <div className=\"lg_tabs_item_des\">选项卡样式的标签页。</div>\r\n                    <div className=\"lg_tabs_item_cont\">\r\n                        <LgTabs type=\"card\" value=\"1\">\r\n                            <LgTabs.LgPane label=\"用户管理\" name=\"1\">用户管理</LgTabs.LgPane>\r\n                            <LgTabs.LgPane label=\"配置管理\" name=\"2\">配置管理</LgTabs.LgPane>\r\n                            <LgTabs.LgPane label=\"角色管理\" name=\"3\">角色管理</LgTabs.LgPane>\r\n                            <LgTabs.LgPane label=\"定时补偿任务\" name=\"4\">定时补偿任务</LgTabs.LgPane>\r\n                        </LgTabs>\r\n                    </div>\r\n                    <CodeView language=\"html\">\r\n                        {`\r\n                            <LgTabs type=\"card\" value=\"1\">\r\n                                <LgTabs.LgPane label=\"用户管理\" name=\"1\">用户管理</LgTabs.LgPane>\r\n                                <LgTabs.LgPane label=\"配置管理\" name=\"2\">配置管理</LgTabs.LgPane>\r\n                                <LgTabs.LgPane label=\"角色管理\" name=\"3\">角色管理</LgTabs.LgPane>\r\n                                <LgTabs.LgPane label=\"定时补偿任务\" name=\"4\">定时补偿任务</LgTabs.LgPane>\r\n                            </LgTabs>\r\n                        `}\r\n                    </CodeView>\r\n                </div>\r\n                <div className=\"lg_tabs_item\">\r\n                    <div className=\"lg_tabs_item_title\">可关闭</div>\r\n                    <div className=\"lg_tabs_item_des\">可以关闭标签页。</div>\r\n                    <div className=\"lg_tabs_item_cont\">\r\n                        <LgTabs type=\"card\" closable activeName=\"1\" onTabRemove={(tab: any) => console.log(tab.props.name)}>\r\n                            <LgTabs.LgPane label=\"用户管理\" name=\"1\">用户管理</LgTabs.LgPane>\r\n                            <LgTabs.LgPane label=\"配置管理\" name=\"2\">配置管理</LgTabs.LgPane>\r\n                            <LgTabs.LgPane label=\"角色管理\" name=\"3\">角色管理</LgTabs.LgPane>\r\n                            <LgTabs.LgPane label=\"定时补偿任务\" name=\"4\">定时补偿任务</LgTabs.LgPane>\r\n                        </LgTabs>\r\n                    </div>\r\n                    <CodeView language=\"html\">\r\n                        {`\r\n                            <LgTabs type=\"card\" closable activeName=\"1\" onTabRemove={(tab: any) => console.log(tab.props.name)}>\r\n                                <LgTabs.LgPane label=\"用户管理\" name=\"1\">用户管理</LgTabs.LgPane>\r\n                                <LgTabs.LgPane label=\"配置管理\" name=\"2\">配置管理</LgTabs.LgPane>\r\n                                <LgTabs.LgPane label=\"角色管理\" name=\"3\">角色管理</LgTabs.LgPane>\r\n                                <LgTabs.LgPane label=\"定时补偿任务\" name=\"4\">定时补偿任务</LgTabs.LgPane>\r\n                            </LgTabs>\r\n                        `}\r\n                    </CodeView>\r\n                </div>\r\n                <div className=\"lg_tabs_item\">\r\n                    <div className=\"lg_tabs_item_title\">卡片化</div>\r\n                    <div className=\"lg_tabs_item_des\">卡片化的标签页。</div>\r\n                    <div className=\"lg_tabs_item_cont\">\r\n                        <LgTabs type=\"border-card\" activeName=\"1\">\r\n                            <LgTabs.LgPane label=\"用户管理\" name=\"1\">用户管理</LgTabs.LgPane>\r\n                            <LgTabs.LgPane label=\"配置管理\" name=\"2\">配置管理</LgTabs.LgPane>\r\n                            <LgTabs.LgPane label=\"角色管理\" name=\"3\">角色管理</LgTabs.LgPane>\r\n                            <LgTabs.LgPane label=\"定时补偿任务\" name=\"4\">定时补偿任务</LgTabs.LgPane>\r\n                        </LgTabs>\r\n                    </div>\r\n                    <CodeView language=\"html\">\r\n                        {`\r\n                            <LgTabs type=\"border-card\" activeName=\"1\">\r\n                                <LgTabs.LgPane label=\"用户管理\" name=\"1\">用户管理</LgTabs.LgPane>\r\n                                <LgTabs.LgPane label=\"配置管理\" name=\"2\">配置管理</LgTabs.LgPane>\r\n                                <LgTabs.LgPane label=\"角色管理\" name=\"3\">角色管理</LgTabs.LgPane>\r\n                                <LgTabs.LgPane label=\"定时补偿任务\" name=\"4\">定时补偿任务</LgTabs.LgPane>\r\n                            </LgTabs>\r\n                        `}\r\n                    </CodeView>\r\n                </div>\r\n                <div className=\"lg_tabs_item\">\r\n                    <div className=\"lg_tabs_item_title\">自定义标签页</div>\r\n                    <div className=\"lg_tabs_item_des\">可以通过 node 类型来实现自定义标签页的内容。</div>\r\n                    <div className=\"lg_tabs_item_cont\">\r\n                        <LgTabs type=\"border-card\" activeName=\"1\">\r\n                            <LgTabs.LgPane label={label} name=\"1\">用户管理</LgTabs.LgPane>\r\n                            <LgTabs.LgPane label=\"配置管理\" name=\"2\">配置管理</LgTabs.LgPane>\r\n                            <LgTabs.LgPane label=\"角色管理\" name=\"3\">角色管理</LgTabs.LgPane>\r\n                            <LgTabs.LgPane label=\"定时补偿任务\" name=\"4\">定时补偿任务</LgTabs.LgPane>\r\n                        </LgTabs>\r\n                    </div>\r\n                    <CodeView language=\"html\">\r\n                        {`\r\n                            <LgTabs type=\"border-card\" activeName=\"1\">\r\n                                <LgTabs.LgPane label={label} name=\"1\">用户管理</LgTabs.LgPane>\r\n                                <LgTabs.LgPane label=\"配置管理\" name=\"2\">配置管理</LgTabs.LgPane>\r\n                                <LgTabs.LgPane label=\"角色管理\" name=\"3\">角色管理</LgTabs.LgPane>\r\n                                <LgTabs.LgPane label=\"定时补偿任务\" name=\"4\">定时补偿任务</LgTabs.LgPane>\r\n                            </LgTabs>\r\n                        `}\r\n                    </CodeView>\r\n                </div>\r\n                <div className=\"lg_tabs_item\">\r\n                    <div className=\"lg_tabs_item_title\">动态增减标签页</div>\r\n                    <div className=\"lg_tabs_item_des\">增减标签页按钮只能在选项卡样式的标签页下使用</div>\r\n                    <div className=\"lg_tabs_item_cont\">\r\n                        <LgTabs type=\"card\" value=\"Tab 2\" editable onTabEdit={(action, tab) => this.editTab(action, tab)}>\r\n                            {\r\n                                this.state.tabs.map((item: any, index: any) => {\r\n                                    return <LgTabs.LgPane key={index} closable label={item.title} name={item.name}>{item.content}</LgTabs.LgPane>\r\n                                })\r\n                            }\r\n                        </LgTabs>\r\n                    </div>\r\n                    <CodeView language=\"html\">\r\n                        {`\r\n                            <LgTabs type=\"card\" value=\"Tab 2\" editable onTabEdit={(action, tab) => this.editTab(action, tab)}>\r\n                                {\r\n                                    this.state.tabs.map((item: any, index: any) => {\r\n                                        return <LgTabs.LgPane key={index} closable label={item.title} name={item.name}>{item.content}</LgTabs.LgPane>\r\n                                    })\r\n                                }\r\n                            </LgTabs>\r\n                        `}\r\n                    </CodeView>\r\n                </div>\r\n                <div className=\"lg_tabs_item\">\r\n                    <div className=\"lg_tabs_item_title\">动态添加标签页</div>\r\n                    <div className=\"lg_tabs_item_cont\">\r\n                        <div style={{ marginBottom: '20px' }}>\r\n                            <Button size=\"small\" onClick={() => this.addTab()}>add tab</Button>\r\n                        </div>\r\n                        <LgTabs type=\"card\" value=\"Tab 2\" onTabRemove={(tab) => this.removeTab(tab)}>\r\n                            {\r\n                                this.state.tabs1.map((item: any, index: any) => {\r\n                                    return <LgTabs.LgPane key={index} closable label={item.title} name={item.name}>{item.content}</LgTabs.LgPane>\r\n                                })\r\n                            }\r\n                        </LgTabs>\r\n                    </div>\r\n                    <CodeView language=\"html\">\r\n                        {`\r\n                            <LgTabs type=\"card\" value=\"Tab 2\" onTabRemove={(tab) => this.removeTab(tab)}>\r\n                                {\r\n                                    this.state.tabs1.map((item: any, index: any) => {\r\n                                        return <LgTabs.LgPane key={index} closable label={item.title} name={item.name}>{item.content}</LgTabs.LgPane>\r\n                                    })\r\n                                }\r\n                            </LgTabs>\r\n                        `}\r\n                    </CodeView>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import {Component} from \"react\";\r\nimport {BaseProps} from \"./BaseProps\";\r\n\r\nexport class BaseComponent<T = {}, S = {}, SS = any> extends Component<T & BaseProps, S, SS>{\r\n  constructor(props: (T & BaseProps) | Readonly<T & BaseProps>) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.onRef && this.props.onRef(this)\r\n  }\r\n}","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 26291;\nmodule.exports = webpackEmptyContext;","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}"],"names":["CodeView","prevProps","prevState","snapshot","window","PR","prettyPrint","result","prettier","this","props","children","parser","plugins","parserTypeScript","parserHtml","e","console","error","className","style","Component","defaultProps","language","LgPaneClass","Tabs","BaseComponent","LgTabs","LgPane","Menu","state","tabs","title","name","content","tabIndex","tabs1","tabIndex1","action","tab","index","push","setState","log","splice","key","replace","label","Icon","activeName","onTabClick","type","value","closable","onTabRemove","editable","onTabEdit","editTab","map","item","marginBottom","Button","size","onClick","addTab","removeTab","onRef","webpackEmptyContext","req","Error","code","keys","resolve","id","module","exports","_superPropBase","object","property","Object","prototype","hasOwnProperty","call","getPrototypeOf","_get","Reflect","get","target","receiver","base","desc","getOwnPropertyDescriptor","arguments","length","apply"],"sourceRoot":""}