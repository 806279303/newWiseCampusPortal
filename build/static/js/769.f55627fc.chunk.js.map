{"version":3,"file":"static/js/769.f55627fc.chunk.js","mappings":"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","sources":["components/CodeView/index.tsx","webpack://web-public/./src/components/checkBox/index.scss?5440","components/checkBox/index.tsx","components/demoView/index.tsx","pages/demoPage/index.tsx","components/filter/index.tsx","pages/filter/index.tsx","components/treeselect/index.tsx","pages/treeselect/index.tsx","type/BaseComponent.ts","../node_modules/prettier|sync","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js"],"sourcesContent":["import \"code-prettify\";\r\nimport \"code-prettify/src/prettify.css\";\r\n\r\nimport parserTypeScript from 'prettier/parser-typescript';\r\nimport prettier from 'prettier/standalone';\r\nimport parserHtml from \"prettier/parser-html\";\r\nimport {Component, createRef, CSSProperties, RefObject} from \"react\";\r\nimport \"./index.scss\";\r\nimport classNames from \"classnames\";\r\n\r\ninterface CodeViewProps {\r\n  children: string\r\n  className?: string\r\n  style?: CSSProperties\r\n  language?: \"ts\" | \"html\"\r\n  defaultShow?: boolean\r\n  canHidden?: boolean\r\n}\r\n\r\n\r\ninterface CodeViewState {\r\n  isShowCode: boolean\r\n}\r\n\r\nexport class CodeView extends Component<CodeViewProps, CodeViewState> {\r\n\r\n  private readonly codeViewAreaRef: RefObject<HTMLDivElement>\r\n  private areaMaxHeight: string\r\n\r\n  static defaultProps: CodeViewProps = {\r\n    children: \"\",\r\n    language: \"ts\",\r\n    canHidden: false\r\n  }\r\n\r\n  constructor(props: CodeViewProps | Readonly<CodeViewProps>) {\r\n    super(props);\r\n    this.state = {\r\n      isShowCode: true\r\n    }\r\n    this.codeViewAreaRef = createRef<HTMLDivElement>();\r\n    this.areaMaxHeight = \"fit-content\"\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    (window as any).PR.prettyPrint();\r\n  }\r\n\r\n  componentDidMount() {\r\n    (window as any).PR.prettyPrint();\r\n    this.areaMaxHeight = this.codeViewAreaRef.current?.clientHeight + \"px\" || \"fit-content\"\r\n    this.setState({\r\n      isShowCode: !this.props.canHidden || !!this.props.defaultShow\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let result = \"\";\r\n    try {\r\n      result = prettier.format(this.props.children, {\r\n        parser: \"typescript\",\r\n        plugins: [parserTypeScript, parserHtml]\r\n      });\r\n    } catch (e) {\r\n      console.error(\"代码格式有误，无法解析\")\r\n      result = this.props.children\r\n    }\r\n\r\n    let className = classNames(\r\n      \"lg-code-view-root\",\r\n      {\r\n        [`${this.props.className}`]: !!this.props.className,\r\n        \"lg-code-view-can-hidden\": this.props.canHidden\r\n      }\r\n    )\r\n\r\n    return (\r\n      <div className={className} style={this.props.style}>\r\n        <div ref={this.codeViewAreaRef} className=\"lg-code-view-area\"\r\n             style={{height: this.state.isShowCode ? this.areaMaxHeight : \"0\"}}>\r\n          <pre className={`prettyprint lang-js`}>\r\n              <div className=\"code_block\">\r\n                <code className=\"code_text\">{result}</code>\r\n              </div>\r\n          </pre>\r\n        </div>\r\n        {\r\n          !this.props.canHidden ? \"\" :\r\n            <div onClick={() => this.setState({isShowCode: !this.state.isShowCode})}\r\n                 className=\"lg-code-view-show-button\">\r\n              <div className={`lg-code-view-show-text ${this.state.isShowCode ? \"on-show\" : \"\"}`}>\r\n                {!this.state.isShowCode ? \"显示\" : \"隐藏\"}代码\r\n              </div>\r\n            </div>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"allSkin\":\"\\\"lg-skin-s1\\\", \\\"lg-skin-s2\\\", \\\"lg-skin-s3\\\", \\\"lg-skin-s4\\\", \\\"lg-skin-s5\\\", \\\"lg-skin-k1\\\", \\\"lg-skin-k2\\\"\",\"skinName\":\"\\\"S1智慧经典\\\", \\\"S2商务蓝天\\\", \\\"S3蓝色海洋\\\", \\\"S4绿意盎然\\\", \\\"S5紫色天空\\\"\"};","import \"./index.scss\"\r\n\r\ninterface BoxProps {\r\n    type?: 'A' | 'B' | 'C',\r\n    status?: 0 | 1 | 2 | number,\r\n    children?: any,\r\n    disable?: boolean,\r\n    onClick?: (status: number, backData?: any) => void,\r\n    backData?: any,\r\n    className?: string,\r\n    style?: object,\r\n    onRef?: (ref: any) => void\r\n}\r\nconst CheckBox = (props: BoxProps) => {\r\n    if (props.onRef) props.onRef(this);\r\n    const onClick = () => {\r\n        if (props.disable) return;\r\n        var status = props.status || 0;\r\n        props.onClick && props.onClick(status, props.backData);\r\n    }\r\n    var className = props.className || \"\";\r\n    if (props.disable) {\r\n        className += \" lg_checkbox_disable\"\r\n    }\r\n    if (props.status && props.status < 3) {\r\n        className += \" lg_checkbox\" + props.status;\r\n    }\r\n    var type = props.type || 'A';\r\n    return (\r\n        <div className={`lg_checkbox_type${type + className}`} onClick={onClick} style={props.style || {}}>\r\n            <div className=\"lg_checkbox_btn\"><div /></div>\r\n            {props.children || \"\"}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckBox","import \"./index.scss\"\r\nimport {BaseComponent} from \"../../type/BaseComponent\";\r\nimport classNames from \"classnames\";\r\nimport { BaseProps } from \"../../type/BaseProps\";\r\nimport {CodeView} from \"@/components/CodeView\";\r\n\r\n\r\nexport interface DemoViewProps {\r\n  title: string\r\n  subtitle?: string\r\n  code?: string\r\n}\r\n\r\nexport class DemoView extends BaseComponent<DemoViewProps> {\r\n\r\n  private readonly classNamePrefix: string\r\n\r\n  constructor(props: (DemoViewProps & BaseProps) | Readonly<DemoViewProps & BaseProps>) {\r\n    super(props);\r\n    this.classNamePrefix = \"lg-demo-view\"\r\n  }\r\n\r\n  render() {\r\n    let className = classNames(\r\n      `${this.classNamePrefix}-root`,\r\n      {\r\n        [`${this.props.className}`]: !!this.props.className\r\n      }\r\n    )\r\n    return (\r\n      <div className={className} style={this.props.style}>\r\n        <div className={`${this.classNamePrefix}-title`}>{this.props.title}</div>\r\n        {\r\n          !this.props.subtitle ? \"\" :\r\n            <div className={`${this.classNamePrefix}-subtitle`}>{this.props.subtitle}</div>\r\n        }\r\n        <div className={`${this.classNamePrefix}-component-area`}>\r\n          {\r\n            this.props.children\r\n          }\r\n        </div>\r\n        {\r\n          !this.props.code? \"\":\r\n            <CodeView canHidden={true}>{this.props.code}</CodeView>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}","import {BaseComponent} from \"../../type/BaseComponent\";\r\nimport {BaseProps} from \"../../type/BaseProps\";\r\nimport classNames from \"classnames\";\r\nimport \"./index.scss\"\r\nimport {CodeView} from \"@/components/CodeView\";\r\n\r\nexport interface DemoPageProps {\r\n  title: string\r\n  subtitle?: string\r\n  importCode?: string\r\n  interfaceCode?: string\r\n}\r\n\r\n\r\nexport class DemoPage extends BaseComponent<DemoPageProps> {\r\n\r\n  private readonly classNamePrefix: string\r\n\r\n  constructor(props: (DemoPageProps & BaseProps) | Readonly<DemoPageProps & BaseProps>) {\r\n    super(props);\r\n    this.classNamePrefix = \"lg-demo-page\"\r\n  }\r\n\r\n  render() {\r\n\r\n    const className = classNames(\r\n      `${this.classNamePrefix}-root`,\r\n      {\r\n        [`${this.props.className}`]: !!this.props.className\r\n      }\r\n    )\r\n\r\n    return (\r\n      <div className={className}>\r\n        <div className={`${this.classNamePrefix}-header`}>\r\n          <div className={`${this.classNamePrefix}-title`}>{this.props.title}</div>\r\n          {\r\n            !this.props.subtitle ? \"\" :\r\n              < div className={`${this.classNamePrefix}-subtitle`}>{this.props.subtitle}</div>\r\n          }\r\n          {\r\n            !this.props.importCode ? \"\" : (\r\n              <div className={`${this.classNamePrefix}-import`}>\r\n                <div className={`${this.classNamePrefix}-import-title`}>在页面中引入组件</div>\r\n                <CodeView>\r\n                  {this.props.importCode}\r\n                </CodeView>\r\n              </div>\r\n            )\r\n\r\n          }\r\n        </div>\r\n        <div className={`${this.classNamePrefix}-body`}>\r\n          {\r\n            this.props.children\r\n          }\r\n        </div>\r\n        <div className={`${this.classNamePrefix}-footer`}>\r\n          {\r\n            !this.props.interfaceCode ? \"\" : (\r\n              <div className={`${this.classNamePrefix}-interface`}>\r\n                <div className={`${this.classNamePrefix}-interface-title`}>标签属性解析</div>\r\n                <CodeView>\r\n                  {this.props.interfaceCode}\r\n                </CodeView>\r\n              </div>\r\n            )\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import \"./index.scss\";\r\nimport React ,{Component, useState} from 'react';\r\nimport CheckBox from \"@/components/checkBox\";\r\nimport BackColor from \"wangeditor/dist/menus/back-color\";\r\n\r\n\r\n\r\nexport interface FliterProps {\r\n    type?: \"default\" | \"radio\" //单选多选切换，默认多选\r\n    className?: string,\r\n    style?: object,\r\n    disable?: boolean,\r\n    title?:  \"筛选:\"| string\r\n    onChange?: (value: any) => void \r\n    filterConfig: any[],\r\n    checkValue?: string[]\r\n}\r\n\r\n\r\n\r\n\r\nexport function Filter(props: FliterProps) {\r\n    const [filtervalue, setFilterValue] = useState(props.filterConfig);\r\n    const [selectID, setSelectID] = useState<string[]>(props.checkValue || [])\r\n\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @param {number} status 按键状态 1为开 0为关\r\n     * @param {*} [backData]    底层数据 \r\n     */\r\n    const onClick = (status: number, backData?: any) => {\r\n        let newArr = filtervalue.concat([])\r\n        if(props.type !== \"radio\"){\r\n            if(status === 0){\r\n                setSelectID(selectID.concat([backData]))\r\n                if(typeof (props.onChange) === \"function\"){\r\n                    props.onChange(selectID.concat([backData]))\r\n                }\r\n                \r\n            }else{\r\n                setSelectID(selectID.filter(item => item !== backData))\r\n                if(typeof (props.onChange) === \"function\"){\r\n                    props.onChange(selectID.filter(item => item !== backData))\r\n                }\r\n            }\r\n\r\n        }else{\r\n            if(status === 0){\r\n                setSelectID([backData])\r\n                if(typeof (props.onChange) === \"function\"){\r\n                    props.onChange([backData])\r\n                }\r\n            }else{\r\n                setSelectID([]);\r\n                if(typeof (props.onChange) === \"function\"){\r\n                    props.onChange([])\r\n                }\r\n            }\r\n        }\r\n        \r\n\r\n    }\r\n    var filterConfigDom = filtervalue.map(item => {\r\n        let disable = item.disable === true ? true : false\r\n        return (\r\n                <CheckBox disable={disable} \r\n                        type=\"C\" \r\n                        key = {item.key}\r\n                        status={selectID.includes(item.key) ? 1 : 0} \r\n                        backData={item.key} \r\n                        onClick={onClick}>{item.name}\r\n                </CheckBox>\r\n        )\r\n    })\r\n    return (\r\n        <div className=\"lg-filter-area\">\r\n            <span>{props.title}</span>\r\n            {filterConfigDom}\r\n        </div>\r\n    )\r\n}","import {Component} from \"react\";\r\nimport {allSkinClassName} from \"@/components/index\";\r\nimport {Filter} from \"@/components/filter\";\r\nimport {CodeView} from \"@/components/CodeView\";\r\nimport TreeSelectComponent from '../treeselect';\r\n\r\nimport {DemoView} from \"@/components/demoView\";\r\nimport {DemoPage} from \"../demoPage\";\r\n\r\n\r\nlet filterConfig = [{\r\n  key: \"nameA\",\r\n  name: \"选项A\",\r\n  disable: false\r\n},{\r\n  key: \"valueB\",\r\n  name: \"选项B\",\r\n},{\r\n  key: \"typec\",\r\n  name: \"选项C\",\r\n \r\n},{\r\n  key: \"typed\",\r\n  name: \"选项D\",\r\n\r\n}]\r\n\r\nlet checkValue = [\"typec\"]\r\n\r\nfunction onChange(e: string[]){\r\n  console.log(e)\r\n}\r\n\r\nexport default () => {\r\n    return (\r\n        <div>\r\n            <DemoPage title=\"G012筛选\" subtitle=\"用于筛选信息\"\r\n                importCode={`\r\n                    import {Filter} from \"@/components/filter\";\r\n                `}\r\n                interfaceCode={`\r\n                    interface FilterProps{\r\n                      type?: \"radio\" | \"default\", //单选或者多选\r\n                      title?: string, //筛选前的提示文字\r\n                      filterConfig: object[],//[{key:\"字段名\",name:\"按键名称\"},...]key必须唯一\r\n                      checkValue?: string[],//选中的字段，和key一致的时候视为选中\r\n                      className?: string,\r\n                      style?: object,\r\n                      onChange?: (value: string[]) => void//激活时回调，显示当前激活的key值\r\n                    }\r\n                `}>\r\n\r\n                <DemoView title=\"列表型号资料检索\" code={`\r\n                    import {Filter} from \"@/components/filter\";\r\n                    let filterConfig = [{\r\n                      key: \"nameA\",\r\n                      name: \"选项A\"\r\n                    },{\r\n                      key: \"valueB\",\r\n                      name: \"选项B\"\r\n                    },{\r\n                      key: \"typec\",\r\n                      name: \"选项C\r\n                    },{\r\n                      key: \"typed\",\r\n                      name: \"选项D\"\r\n                    }]\r\n\r\n                    let checkValue = [\"typec\"]\r\n\r\n                    function onChange(e: string[]){\r\n                      console.log(e)\r\n                    }\r\n\r\n                    function SearchComponent(){\r\n                        function onSearch(e){\r\n                            console.log(e)\r\n                        }\r\n                        return (\r\n                          <div>\r\n                              <Filter type=\"radio\" \r\n                                      filterConfig={filterConfig} \r\n                                      checkValue={checkValue} \r\n                                      onChange={onChange}/>\r\n                            </div>\r\n                        )\r\n                    }\r\n                `}>\r\n                  <div>\r\n                    <Filter type=\"radio\" title={\"筛选 :\"} filterConfig={filterConfig} checkValue={checkValue} onChange={onChange}/>\r\n                  </div>\r\n                </DemoView>              \r\n            </DemoPage>\r\n            <TreeSelectComponent />\r\n        </div>\r\n    )\r\n}","\r\nimport './index.scss';\r\nimport React ,{Component, useState} from 'react';\r\nimport { Tree, Menu } from \"element-react\";\r\nimport { BaseComponent } from \"../../type/BaseComponent\";\r\n\r\ninterface TreeeselectProps{\r\n  autoExpandParent?: boolean\r\n  checkStrictly?: boolean\r\n  currentNodeKey?: any\r\n  defaultCheckedKeys?: any[]\r\n  defaultExpandedKeys?: any[]\r\n  defaultExpandAll?: boolean\r\n  data?: any[]\r\n  emptyText?: string\r\n  expandOnClickNode?: boolean\r\n  filterNodeMethod?(value?:any, data?: any, node?:any): boolean\r\n  renderContent?(nodeModel?:any, data?:any, store?:any): React.ReactElement<any>\r\n  isShowCheckbox?: boolean\r\n  accordion?: boolean\r\n  indent?: number,\r\n  nodeKey?: string\r\n  options?: {\r\n    children?: string\r\n    label?: string\r\n    icon?: string\r\n  },\r\n  lazy?: boolean\r\n  highlightCurrent?: boolean\r\n  load?(node?:any, resolve?:any): void\r\n  onCheckChange?(data?:any, checked?: boolean, indeterminate?:any): void\r\n  onNodeClicked?(data?:any, node?:any): void\r\n  onCurrentChange?(data?:any, node?:any): void\r\n  onNodeExpand?(data?:any, nodeModel?:any, node?:any): void\r\n  onNodeCollapse?(data?:any, nodeModel?:any, node?:any): void\r\n}\r\n\r\n\r\nexport class Treeselect extends BaseComponent<TreeeselectProps>{\r\n      static defaultProps:TreeeselectProps = {\r\n        highlightCurrent: true\r\n      }\r\n\r\n      constructor(props: Readonly<TreeeselectProps>) {\r\n        super(props);\r\n      }\r\n      render() {\r\n          return (\r\n            <div className={`lg-treeselect-area ${this.props.className}`} style={this.props.style}>\r\n                <Tree {...this.props}/>\r\n            </div>\r\n          )\r\n      }\r\n}\r\n\r\n\r\n","import React, {Component, useState} from 'react';\r\nimport {allSkinClassName} from \"@/components/index\";\r\nimport {Treeselect} from \"@/components/treeselect\";\r\nimport {CodeView} from \"@/components/CodeView\";\r\n\r\n\r\nimport {DemoView} from \"@/components/demoView\";\r\nimport {DemoPage} from \"../demoPage\";\r\n\r\n\r\n\r\nconst cloneDeep = require('lodash').cloneDeep;\r\n\r\n\r\ninterface IState {\r\n  data: any,\r\n  options: any\r\n}\r\n\r\nexport default class TreeSelectComponent extends Component<{}, IState> {\r\n  constructor(props: {}) {\r\n    super(props);\r\n    this.state = {\r\n      data: [{\r\n        label: '一级 1',\r\n        nodeKey: '1',\r\n        children: [{\r\n          label: '二级 1-1',\r\n          nodeKey: '1-1',\r\n        }]\r\n      }, {\r\n        label: '一级 2',\r\n        nodeKey: '2',\r\n        children: [{\r\n          label: '二级 2-1',\r\n          nodeKey: '2-1'\r\n        }, {\r\n          label: '二级 2-2',\r\n          nodeKey: '2-2'\r\n        }]\r\n      }],\r\n      options: {\r\n        children: 'children',\r\n        label: 'label'\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n         <DemoPage title=\"G012树形筛选\" subtitle=\"树形组件\"\r\n          importCode={`\r\n              import {Treeselect} from \"@/components/treeselect\";\r\n          `}\r\n          interfaceCode={`\r\n              interface TreeselectProps {\r\n                data?: any[] //配置项，lable要显示的文字信息，\r\n                              children为子菜单，nodeKey表示选中的key值，必须唯一\r\n                options?: {\r\n                  children?: string  //指定节点标签为节点对象的某个属性值\r\n                  label?: string   //指定子树为节点对象的某个属性值\r\n                  icon?: string\r\n                }\r\n                isShowCheckbox?: boolean  //是否显示选择框\r\n                highlightCurrent?: boolean //鼠标经过时候是否有阴影\r\n                onCurrentChange?(data?:any, node?:any) => void//当前选中节点变化时触发的事件\r\n                onCheckChange?(data?:any, checked?: boolean, indeterminate?:any) => void // 节点选中状态发生变化时的回调\r\n            };\r\n            //在这仅显示比较常用的配置，更多配置请参考\r\n            //https://elemefe.github.io/element-react/#/zh-CN/tree\r\n          `}>\r\n            <DemoView title=\"树形资料检索\" code={`\r\n                class TreeSelectComponent extends Component<{}, IState> {\r\n                    constructor(props: {}) {\r\n                      super(props);\r\n                      this.state = {\r\n                        data: [{\r\n                          label: '一级 1',\r\n                          nodeKey: '1',\r\n                          children: [{\r\n                            label: '二级 1-1',\r\n                            nodeKey: '1-1',\r\n                          }]\r\n                        }, {\r\n                          label: '一级 2',\r\n                          nodeKey: '2',\r\n                          children: [{\r\n                            label: '二级 2-1',\r\n                            nodeKey: '2-1'\r\n                          }, {\r\n                            label: '二级 2-2',\r\n                            nodeKey: '2-2'\r\n                          }]\r\n                        }],\r\n                        options: {\r\n                          children: 'children',\r\n                          label: 'label'\r\n                        }\r\n                      }\r\n                    }\r\n                    render() {\r\n                      return (\r\n                          <Treeselect \r\n                            onCurrentChange={(value)=>{console.log(value)}}\r\n                            onCheckChange={(data, checked) => {console.warn(data,checked)}}\r\n                            data={cloneDeep(this.state.data)}\r\n                            options={cloneDeep(this.state.options)} \r\n                            isShowCheckbox={true}\r\n                            highlightCurrent={true}/>\r\n                        )\r\n                    }\r\n                  }`}>\r\n                  <div style={{width: 300}}>\r\n                        <Treeselect \r\n                        onCurrentChange={(value)=>{console.log(value)}}\r\n                        onCheckChange={(data, checked) => {console.warn(data,checked)}}\r\n                        data={cloneDeep(this.state.data)}\r\n                        options={cloneDeep(this.state.options)} \r\n                        isShowCheckbox={true}\r\n                        highlightCurrent={true}/>\r\n                  </div>\r\n                </DemoView>\r\n            \r\n          </DemoPage>\r\n          \r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import {Component} from \"react\";\r\nimport {BaseProps} from \"./BaseProps\";\r\n\r\nexport class BaseComponent<T = {}, S = {}, SS = any> extends Component<T & BaseProps, S, SS>{\r\n  constructor(props: (T & BaseProps) | Readonly<T & BaseProps>) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.onRef && this.props.onRef(this)\r\n  }\r\n}","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 26291;\nmodule.exports = webpackEmptyContext;","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}"],"names":["CodeView","props","codeViewAreaRef","areaMaxHeight","state","isShowCode","createRef","window","PR","prettyPrint","this","current","clientHeight","setState","canHidden","defaultShow","result","prettier","children","parser","plugins","parserTypeScript","parserHtml","e","console","error","className","classNames","style","ref","height","onClick","Component","defaultProps","language","onRef","disable","status","type","backData","DemoView","classNamePrefix","title","subtitle","code","BaseComponent","DemoPage","importCode","interfaceCode","Filter","useState","filterConfig","filtervalue","checkValue","selectID","setSelectID","concat","onChange","filter","item","filterConfigDom","map","includes","key","name","log","Treeselect","Tree","highlightCurrent","cloneDeep","require","TreeSelectComponent","data","label","nodeKey","options","width","onCurrentChange","value","onCheckChange","checked","warn","isShowCheckbox","webpackEmptyContext","req","Error","keys","resolve","id","module","exports","_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","err","unsupportedIterableToArray","TypeError","_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","slice","constructor","from","test"],"sourceRoot":""}